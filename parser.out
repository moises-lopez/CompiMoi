Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    COLON
    NOTEQUAL
    READ

Grammar

Rule 0     S' -> calc
Rule 1     calc -> PROGRAMA ID seen_program SEMICOLON vars modulesaux functionmain
Rule 2     modulesaux -> function modulesaux
Rule 3     modulesaux -> <empty>
Rule 4     seen_program -> <empty>
Rule 5     vars -> VAR seen_vars tipo ID seen_ID_var varsaux SEMICOLON vars
Rule 6     vars -> empty
Rule 7     seen_vars -> <empty>
Rule 8     varsaux -> COMMA ID seen_ID_var varsaux
Rule 9     varsaux -> <empty>
Rule 10    seen_ID_var -> <empty>
Rule 11    tipo -> INT seen_tipo
Rule 12    tipo -> FLOAT seen_tipo
Rule 13    seen_tipo -> <empty>
Rule 14    function -> FUNCTION returnfunctionaux ID seen_id_function params bloque
Rule 15    seen_id_function -> <empty>
Rule 16    functionmain -> MAIN LEFTPARENTHESES RIGHTPARENTHESES bloque
Rule 17    returnfunctionaux -> tipo
Rule 18    returnfunctionaux -> VOID seen_void
Rule 19    seen_void -> <empty>
Rule 20    params -> LEFTPARENTHESES seen_params_init paramsaux RIGHTPARENTHESES
Rule 21    seen_params_init -> <empty>
Rule 22    paramsaux -> tipo ID seen_ID_var paramsaux
Rule 23    paramsaux -> COMMA paramsaux
Rule 24    paramsaux -> empty
Rule 25    bloque -> LEFTBRACE vars bloqueaux RIGHTBRACE
Rule 26    bloqueaux -> estatuto bloqueaux
Rule 27    bloqueaux -> <empty>
Rule 28    estatuto -> asignacion
Rule 29    estatuto -> condicion
Rule 30    estatuto -> escritura
Rule 31    asignacion -> varcte EQUALS expresion SEMICOLON
Rule 32    expresion -> exp expresionaux
Rule 33    expresionaux -> GREATERTHAN exp
Rule 34    expresionaux -> LESSTHAN exp
Rule 35    expresionaux -> NOTEQUALS exp
Rule 36    expresionaux -> <empty>
Rule 37    escritura -> PRINT LEFTPARENTHESES escrituraaux RIGHTPARENTHESES SEMICOLON
Rule 38    escrituraaux -> expresion
Rule 39    escrituraaux -> STRING_CTE
Rule 40    escrituraaux -> expresion COMMA escrituraaux
Rule 41    escrituraaux -> STRING_CTE COMMA escrituraaux
Rule 42    exp -> termino seen_termino
Rule 43    exp -> termino seen_termino expaux
Rule 44    expaux -> PLUS seen_operador exp
Rule 45    expaux -> MINUS seen_operador exp
Rule 46    termino -> factor seen_factor
Rule 47    termino -> factor seen_factor terminoaux
Rule 48    terminoaux -> DIVIDE seen_operador termino
Rule 49    terminoaux -> MULTIPLY seen_operador termino
Rule 50    condicion -> IF LEFTPARENTHESES expresion RIGHTPARENTHESES seen_right_parentheses_condicion bloque condicionaux
Rule 51    condicionaux -> ELSE seen_else bloque SEMICOLON seen_end_condicion
Rule 52    condicionaux -> SEMICOLON seen_end_condicion
Rule 53    seen_right_parentheses_condicion -> <empty>
Rule 54    seen_else -> <empty>
Rule 55    seen_end_condicion -> <empty>
Rule 56    factor -> factoraux
Rule 57    factor -> factoraux2
Rule 58    factoraux -> LEFTPARENTHESES expresion RIGHTPARENTHESES
Rule 59    factoraux2 -> factoraux3 varcte
Rule 60    factoraux3 -> PLUS
Rule 61    factoraux3 -> MINUS
Rule 62    factoraux3 -> <empty>
Rule 63    varcte -> ID seen_ID
Rule 64    varcte -> INT_CTE
Rule 65    varcte -> FLOAT_CTE
Rule 66    seen_ID -> <empty>
Rule 67    seen_operador -> <empty>
Rule 68    seen_termino -> <empty>
Rule 69    seen_factor -> <empty>
Rule 70    arrayIntDefinition -> LEFTBRACKET INT_CTE RIGHTBRACKET
Rule 71    empty -> <empty>

Terminals, with rules where they appear

COLON                : 
COMMA                : 8 23 40 41
DIVIDE               : 48
ELSE                 : 51
EQUALS               : 31
FLOAT                : 12
FLOAT_CTE            : 65
FUNCTION             : 14
GREATERTHAN          : 33
ID                   : 1 5 8 14 22 63
IF                   : 50
INT                  : 11
INT_CTE              : 64 70
LEFTBRACE            : 25
LEFTBRACKET          : 70
LEFTPARENTHESES      : 16 20 37 50 58
LESSTHAN             : 34
MAIN                 : 16
MINUS                : 45 61
MULTIPLY             : 49
NOTEQUAL             : 
NOTEQUALS            : 35
PLUS                 : 44 60
PRINT                : 37
PROGRAMA             : 1
READ                 : 
RIGHTBRACE           : 25
RIGHTBRACKET         : 70
RIGHTPARENTHESES     : 16 20 37 50 58
SEMICOLON            : 1 5 31 37 51 52
STRING_CTE           : 39 41
VAR                  : 5
VOID                 : 18
error                : 

Nonterminals, with rules where they appear

arrayIntDefinition   : 
asignacion           : 28
bloque               : 14 16 50 51
bloqueaux            : 25 26
calc                 : 0
condicion            : 29
condicionaux         : 50
empty                : 6 24
escritura            : 30
escrituraaux         : 37 40 41
estatuto             : 26
exp                  : 32 33 34 35 44 45
expaux               : 43
expresion            : 31 38 40 50 58
expresionaux         : 32
factor               : 46 47
factoraux            : 56
factoraux2           : 57
factoraux3           : 59
function             : 2
functionmain         : 1
modulesaux           : 1 2
params               : 14
paramsaux            : 20 22 23
returnfunctionaux    : 14
seen_ID              : 63
seen_ID_var          : 5 8 22
seen_else            : 51
seen_end_condicion   : 51 52
seen_factor          : 46 47
seen_id_function     : 14
seen_operador        : 44 45 48 49
seen_params_init     : 20
seen_program         : 1
seen_right_parentheses_condicion : 50
seen_termino         : 42 43
seen_tipo            : 11 12
seen_vars            : 5
seen_void            : 18
termino              : 42 43 48 49
terminoaux           : 47
tipo                 : 5 17 22
varcte               : 31 59
vars                 : 1 5 25
varsaux              : 5 8

Parsing method: LALR

state 0

    (0) S' -> . calc
    (1) calc -> . PROGRAMA ID seen_program SEMICOLON vars modulesaux functionmain

    PROGRAMA        shift and go to state 2

    calc                           shift and go to state 1

state 1

    (0) S' -> calc .



state 2

    (1) calc -> PROGRAMA . ID seen_program SEMICOLON vars modulesaux functionmain

    ID              shift and go to state 3


state 3

    (1) calc -> PROGRAMA ID . seen_program SEMICOLON vars modulesaux functionmain
    (4) seen_program -> .

    SEMICOLON       reduce using rule 4 (seen_program -> .)

    seen_program                   shift and go to state 4

state 4

    (1) calc -> PROGRAMA ID seen_program . SEMICOLON vars modulesaux functionmain

    SEMICOLON       shift and go to state 5


state 5

    (1) calc -> PROGRAMA ID seen_program SEMICOLON . vars modulesaux functionmain
    (5) vars -> . VAR seen_vars tipo ID seen_ID_var varsaux SEMICOLON vars
    (6) vars -> . empty
    (71) empty -> .

    VAR             shift and go to state 7
    FUNCTION        reduce using rule 71 (empty -> .)
    MAIN            reduce using rule 71 (empty -> .)

    vars                           shift and go to state 6
    empty                          shift and go to state 8

state 6

    (1) calc -> PROGRAMA ID seen_program SEMICOLON vars . modulesaux functionmain
    (2) modulesaux -> . function modulesaux
    (3) modulesaux -> .
    (14) function -> . FUNCTION returnfunctionaux ID seen_id_function params bloque

    MAIN            reduce using rule 3 (modulesaux -> .)
    FUNCTION        shift and go to state 11

    modulesaux                     shift and go to state 9
    function                       shift and go to state 10

state 7

    (5) vars -> VAR . seen_vars tipo ID seen_ID_var varsaux SEMICOLON vars
    (7) seen_vars -> .

    INT             reduce using rule 7 (seen_vars -> .)
    FLOAT           reduce using rule 7 (seen_vars -> .)

    seen_vars                      shift and go to state 12

state 8

    (6) vars -> empty .

    FUNCTION        reduce using rule 6 (vars -> empty .)
    MAIN            reduce using rule 6 (vars -> empty .)
    IF              reduce using rule 6 (vars -> empty .)
    PRINT           reduce using rule 6 (vars -> empty .)
    ID              reduce using rule 6 (vars -> empty .)
    INT_CTE         reduce using rule 6 (vars -> empty .)
    FLOAT_CTE       reduce using rule 6 (vars -> empty .)
    RIGHTBRACE      reduce using rule 6 (vars -> empty .)


state 9

    (1) calc -> PROGRAMA ID seen_program SEMICOLON vars modulesaux . functionmain
    (16) functionmain -> . MAIN LEFTPARENTHESES RIGHTPARENTHESES bloque

    MAIN            shift and go to state 14

    functionmain                   shift and go to state 13

state 10

    (2) modulesaux -> function . modulesaux
    (2) modulesaux -> . function modulesaux
    (3) modulesaux -> .
    (14) function -> . FUNCTION returnfunctionaux ID seen_id_function params bloque

    MAIN            reduce using rule 3 (modulesaux -> .)
    FUNCTION        shift and go to state 11

    function                       shift and go to state 10
    modulesaux                     shift and go to state 15

state 11

    (14) function -> FUNCTION . returnfunctionaux ID seen_id_function params bloque
    (17) returnfunctionaux -> . tipo
    (18) returnfunctionaux -> . VOID seen_void
    (11) tipo -> . INT seen_tipo
    (12) tipo -> . FLOAT seen_tipo

    VOID            shift and go to state 18
    INT             shift and go to state 19
    FLOAT           shift and go to state 20

    returnfunctionaux              shift and go to state 16
    tipo                           shift and go to state 17

state 12

    (5) vars -> VAR seen_vars . tipo ID seen_ID_var varsaux SEMICOLON vars
    (11) tipo -> . INT seen_tipo
    (12) tipo -> . FLOAT seen_tipo

    INT             shift and go to state 19
    FLOAT           shift and go to state 20

    tipo                           shift and go to state 21

state 13

    (1) calc -> PROGRAMA ID seen_program SEMICOLON vars modulesaux functionmain .

    $end            reduce using rule 1 (calc -> PROGRAMA ID seen_program SEMICOLON vars modulesaux functionmain .)


state 14

    (16) functionmain -> MAIN . LEFTPARENTHESES RIGHTPARENTHESES bloque

    LEFTPARENTHESES shift and go to state 22


state 15

    (2) modulesaux -> function modulesaux .

    MAIN            reduce using rule 2 (modulesaux -> function modulesaux .)


state 16

    (14) function -> FUNCTION returnfunctionaux . ID seen_id_function params bloque

    ID              shift and go to state 23


state 17

    (17) returnfunctionaux -> tipo .

    ID              reduce using rule 17 (returnfunctionaux -> tipo .)


state 18

    (18) returnfunctionaux -> VOID . seen_void
    (19) seen_void -> .

    ID              reduce using rule 19 (seen_void -> .)

    seen_void                      shift and go to state 24

state 19

    (11) tipo -> INT . seen_tipo
    (13) seen_tipo -> .

    ID              reduce using rule 13 (seen_tipo -> .)

    seen_tipo                      shift and go to state 25

state 20

    (12) tipo -> FLOAT . seen_tipo
    (13) seen_tipo -> .

    ID              reduce using rule 13 (seen_tipo -> .)

    seen_tipo                      shift and go to state 26

state 21

    (5) vars -> VAR seen_vars tipo . ID seen_ID_var varsaux SEMICOLON vars

    ID              shift and go to state 27


state 22

    (16) functionmain -> MAIN LEFTPARENTHESES . RIGHTPARENTHESES bloque

    RIGHTPARENTHESES shift and go to state 28


state 23

    (14) function -> FUNCTION returnfunctionaux ID . seen_id_function params bloque
    (15) seen_id_function -> .

    LEFTPARENTHESES reduce using rule 15 (seen_id_function -> .)

    seen_id_function               shift and go to state 29

state 24

    (18) returnfunctionaux -> VOID seen_void .

    ID              reduce using rule 18 (returnfunctionaux -> VOID seen_void .)


state 25

    (11) tipo -> INT seen_tipo .

    ID              reduce using rule 11 (tipo -> INT seen_tipo .)


state 26

    (12) tipo -> FLOAT seen_tipo .

    ID              reduce using rule 12 (tipo -> FLOAT seen_tipo .)


state 27

    (5) vars -> VAR seen_vars tipo ID . seen_ID_var varsaux SEMICOLON vars
    (10) seen_ID_var -> .

    COMMA           reduce using rule 10 (seen_ID_var -> .)
    SEMICOLON       reduce using rule 10 (seen_ID_var -> .)

    seen_ID_var                    shift and go to state 30

state 28

    (16) functionmain -> MAIN LEFTPARENTHESES RIGHTPARENTHESES . bloque
    (25) bloque -> . LEFTBRACE vars bloqueaux RIGHTBRACE

    LEFTBRACE       shift and go to state 32

    bloque                         shift and go to state 31

state 29

    (14) function -> FUNCTION returnfunctionaux ID seen_id_function . params bloque
    (20) params -> . LEFTPARENTHESES seen_params_init paramsaux RIGHTPARENTHESES

    LEFTPARENTHESES shift and go to state 34

    params                         shift and go to state 33

state 30

    (5) vars -> VAR seen_vars tipo ID seen_ID_var . varsaux SEMICOLON vars
    (8) varsaux -> . COMMA ID seen_ID_var varsaux
    (9) varsaux -> .

    COMMA           shift and go to state 36
    SEMICOLON       reduce using rule 9 (varsaux -> .)

    varsaux                        shift and go to state 35

state 31

    (16) functionmain -> MAIN LEFTPARENTHESES RIGHTPARENTHESES bloque .

    $end            reduce using rule 16 (functionmain -> MAIN LEFTPARENTHESES RIGHTPARENTHESES bloque .)


state 32

    (25) bloque -> LEFTBRACE . vars bloqueaux RIGHTBRACE
    (5) vars -> . VAR seen_vars tipo ID seen_ID_var varsaux SEMICOLON vars
    (6) vars -> . empty
    (71) empty -> .

    VAR             shift and go to state 7
    IF              reduce using rule 71 (empty -> .)
    PRINT           reduce using rule 71 (empty -> .)
    ID              reduce using rule 71 (empty -> .)
    INT_CTE         reduce using rule 71 (empty -> .)
    FLOAT_CTE       reduce using rule 71 (empty -> .)
    RIGHTBRACE      reduce using rule 71 (empty -> .)

    vars                           shift and go to state 37
    empty                          shift and go to state 8

state 33

    (14) function -> FUNCTION returnfunctionaux ID seen_id_function params . bloque
    (25) bloque -> . LEFTBRACE vars bloqueaux RIGHTBRACE

    LEFTBRACE       shift and go to state 32

    bloque                         shift and go to state 38

state 34

    (20) params -> LEFTPARENTHESES . seen_params_init paramsaux RIGHTPARENTHESES
    (21) seen_params_init -> .

    COMMA           reduce using rule 21 (seen_params_init -> .)
    INT             reduce using rule 21 (seen_params_init -> .)
    FLOAT           reduce using rule 21 (seen_params_init -> .)
    RIGHTPARENTHESES reduce using rule 21 (seen_params_init -> .)

    seen_params_init               shift and go to state 39

state 35

    (5) vars -> VAR seen_vars tipo ID seen_ID_var varsaux . SEMICOLON vars

    SEMICOLON       shift and go to state 40


state 36

    (8) varsaux -> COMMA . ID seen_ID_var varsaux

    ID              shift and go to state 41


state 37

    (25) bloque -> LEFTBRACE vars . bloqueaux RIGHTBRACE
    (26) bloqueaux -> . estatuto bloqueaux
    (27) bloqueaux -> .
    (28) estatuto -> . asignacion
    (29) estatuto -> . condicion
    (30) estatuto -> . escritura
    (31) asignacion -> . varcte EQUALS expresion SEMICOLON
    (50) condicion -> . IF LEFTPARENTHESES expresion RIGHTPARENTHESES seen_right_parentheses_condicion bloque condicionaux
    (37) escritura -> . PRINT LEFTPARENTHESES escrituraaux RIGHTPARENTHESES SEMICOLON
    (63) varcte -> . ID seen_ID
    (64) varcte -> . INT_CTE
    (65) varcte -> . FLOAT_CTE

    RIGHTBRACE      reduce using rule 27 (bloqueaux -> .)
    IF              shift and go to state 48
    PRINT           shift and go to state 49
    ID              shift and go to state 50
    INT_CTE         shift and go to state 51
    FLOAT_CTE       shift and go to state 52

    bloqueaux                      shift and go to state 42
    estatuto                       shift and go to state 43
    asignacion                     shift and go to state 44
    condicion                      shift and go to state 45
    escritura                      shift and go to state 46
    varcte                         shift and go to state 47

state 38

    (14) function -> FUNCTION returnfunctionaux ID seen_id_function params bloque .

    FUNCTION        reduce using rule 14 (function -> FUNCTION returnfunctionaux ID seen_id_function params bloque .)
    MAIN            reduce using rule 14 (function -> FUNCTION returnfunctionaux ID seen_id_function params bloque .)


state 39

    (20) params -> LEFTPARENTHESES seen_params_init . paramsaux RIGHTPARENTHESES
    (22) paramsaux -> . tipo ID seen_ID_var paramsaux
    (23) paramsaux -> . COMMA paramsaux
    (24) paramsaux -> . empty
    (11) tipo -> . INT seen_tipo
    (12) tipo -> . FLOAT seen_tipo
    (71) empty -> .

    COMMA           shift and go to state 55
    INT             shift and go to state 19
    FLOAT           shift and go to state 20
    RIGHTPARENTHESES reduce using rule 71 (empty -> .)

    paramsaux                      shift and go to state 53
    tipo                           shift and go to state 54
    empty                          shift and go to state 56

state 40

    (5) vars -> VAR seen_vars tipo ID seen_ID_var varsaux SEMICOLON . vars
    (5) vars -> . VAR seen_vars tipo ID seen_ID_var varsaux SEMICOLON vars
    (6) vars -> . empty
    (71) empty -> .

    VAR             shift and go to state 7
    FUNCTION        reduce using rule 71 (empty -> .)
    MAIN            reduce using rule 71 (empty -> .)
    IF              reduce using rule 71 (empty -> .)
    PRINT           reduce using rule 71 (empty -> .)
    ID              reduce using rule 71 (empty -> .)
    INT_CTE         reduce using rule 71 (empty -> .)
    FLOAT_CTE       reduce using rule 71 (empty -> .)
    RIGHTBRACE      reduce using rule 71 (empty -> .)

    vars                           shift and go to state 57
    empty                          shift and go to state 8

state 41

    (8) varsaux -> COMMA ID . seen_ID_var varsaux
    (10) seen_ID_var -> .

    COMMA           reduce using rule 10 (seen_ID_var -> .)
    SEMICOLON       reduce using rule 10 (seen_ID_var -> .)

    seen_ID_var                    shift and go to state 58

state 42

    (25) bloque -> LEFTBRACE vars bloqueaux . RIGHTBRACE

    RIGHTBRACE      shift and go to state 59


state 43

    (26) bloqueaux -> estatuto . bloqueaux
    (26) bloqueaux -> . estatuto bloqueaux
    (27) bloqueaux -> .
    (28) estatuto -> . asignacion
    (29) estatuto -> . condicion
    (30) estatuto -> . escritura
    (31) asignacion -> . varcte EQUALS expresion SEMICOLON
    (50) condicion -> . IF LEFTPARENTHESES expresion RIGHTPARENTHESES seen_right_parentheses_condicion bloque condicionaux
    (37) escritura -> . PRINT LEFTPARENTHESES escrituraaux RIGHTPARENTHESES SEMICOLON
    (63) varcte -> . ID seen_ID
    (64) varcte -> . INT_CTE
    (65) varcte -> . FLOAT_CTE

    RIGHTBRACE      reduce using rule 27 (bloqueaux -> .)
    IF              shift and go to state 48
    PRINT           shift and go to state 49
    ID              shift and go to state 50
    INT_CTE         shift and go to state 51
    FLOAT_CTE       shift and go to state 52

    estatuto                       shift and go to state 43
    bloqueaux                      shift and go to state 60
    asignacion                     shift and go to state 44
    condicion                      shift and go to state 45
    escritura                      shift and go to state 46
    varcte                         shift and go to state 47

state 44

    (28) estatuto -> asignacion .

    IF              reduce using rule 28 (estatuto -> asignacion .)
    PRINT           reduce using rule 28 (estatuto -> asignacion .)
    ID              reduce using rule 28 (estatuto -> asignacion .)
    INT_CTE         reduce using rule 28 (estatuto -> asignacion .)
    FLOAT_CTE       reduce using rule 28 (estatuto -> asignacion .)
    RIGHTBRACE      reduce using rule 28 (estatuto -> asignacion .)


state 45

    (29) estatuto -> condicion .

    IF              reduce using rule 29 (estatuto -> condicion .)
    PRINT           reduce using rule 29 (estatuto -> condicion .)
    ID              reduce using rule 29 (estatuto -> condicion .)
    INT_CTE         reduce using rule 29 (estatuto -> condicion .)
    FLOAT_CTE       reduce using rule 29 (estatuto -> condicion .)
    RIGHTBRACE      reduce using rule 29 (estatuto -> condicion .)


state 46

    (30) estatuto -> escritura .

    IF              reduce using rule 30 (estatuto -> escritura .)
    PRINT           reduce using rule 30 (estatuto -> escritura .)
    ID              reduce using rule 30 (estatuto -> escritura .)
    INT_CTE         reduce using rule 30 (estatuto -> escritura .)
    FLOAT_CTE       reduce using rule 30 (estatuto -> escritura .)
    RIGHTBRACE      reduce using rule 30 (estatuto -> escritura .)


state 47

    (31) asignacion -> varcte . EQUALS expresion SEMICOLON

    EQUALS          shift and go to state 61


state 48

    (50) condicion -> IF . LEFTPARENTHESES expresion RIGHTPARENTHESES seen_right_parentheses_condicion bloque condicionaux

    LEFTPARENTHESES shift and go to state 62


state 49

    (37) escritura -> PRINT . LEFTPARENTHESES escrituraaux RIGHTPARENTHESES SEMICOLON

    LEFTPARENTHESES shift and go to state 63


state 50

    (63) varcte -> ID . seen_ID
    (66) seen_ID -> .

    EQUALS          reduce using rule 66 (seen_ID -> .)
    DIVIDE          reduce using rule 66 (seen_ID -> .)
    MULTIPLY        reduce using rule 66 (seen_ID -> .)
    PLUS            reduce using rule 66 (seen_ID -> .)
    MINUS           reduce using rule 66 (seen_ID -> .)
    GREATERTHAN     reduce using rule 66 (seen_ID -> .)
    LESSTHAN        reduce using rule 66 (seen_ID -> .)
    NOTEQUALS       reduce using rule 66 (seen_ID -> .)
    SEMICOLON       reduce using rule 66 (seen_ID -> .)
    RIGHTPARENTHESES reduce using rule 66 (seen_ID -> .)
    COMMA           reduce using rule 66 (seen_ID -> .)

    seen_ID                        shift and go to state 64

state 51

    (64) varcte -> INT_CTE .

    EQUALS          reduce using rule 64 (varcte -> INT_CTE .)
    DIVIDE          reduce using rule 64 (varcte -> INT_CTE .)
    MULTIPLY        reduce using rule 64 (varcte -> INT_CTE .)
    PLUS            reduce using rule 64 (varcte -> INT_CTE .)
    MINUS           reduce using rule 64 (varcte -> INT_CTE .)
    GREATERTHAN     reduce using rule 64 (varcte -> INT_CTE .)
    LESSTHAN        reduce using rule 64 (varcte -> INT_CTE .)
    NOTEQUALS       reduce using rule 64 (varcte -> INT_CTE .)
    SEMICOLON       reduce using rule 64 (varcte -> INT_CTE .)
    RIGHTPARENTHESES reduce using rule 64 (varcte -> INT_CTE .)
    COMMA           reduce using rule 64 (varcte -> INT_CTE .)


state 52

    (65) varcte -> FLOAT_CTE .

    EQUALS          reduce using rule 65 (varcte -> FLOAT_CTE .)
    DIVIDE          reduce using rule 65 (varcte -> FLOAT_CTE .)
    MULTIPLY        reduce using rule 65 (varcte -> FLOAT_CTE .)
    PLUS            reduce using rule 65 (varcte -> FLOAT_CTE .)
    MINUS           reduce using rule 65 (varcte -> FLOAT_CTE .)
    GREATERTHAN     reduce using rule 65 (varcte -> FLOAT_CTE .)
    LESSTHAN        reduce using rule 65 (varcte -> FLOAT_CTE .)
    NOTEQUALS       reduce using rule 65 (varcte -> FLOAT_CTE .)
    SEMICOLON       reduce using rule 65 (varcte -> FLOAT_CTE .)
    RIGHTPARENTHESES reduce using rule 65 (varcte -> FLOAT_CTE .)
    COMMA           reduce using rule 65 (varcte -> FLOAT_CTE .)


state 53

    (20) params -> LEFTPARENTHESES seen_params_init paramsaux . RIGHTPARENTHESES

    RIGHTPARENTHESES shift and go to state 65


state 54

    (22) paramsaux -> tipo . ID seen_ID_var paramsaux

    ID              shift and go to state 66


state 55

    (23) paramsaux -> COMMA . paramsaux
    (22) paramsaux -> . tipo ID seen_ID_var paramsaux
    (23) paramsaux -> . COMMA paramsaux
    (24) paramsaux -> . empty
    (11) tipo -> . INT seen_tipo
    (12) tipo -> . FLOAT seen_tipo
    (71) empty -> .

    COMMA           shift and go to state 55
    INT             shift and go to state 19
    FLOAT           shift and go to state 20
    RIGHTPARENTHESES reduce using rule 71 (empty -> .)

    paramsaux                      shift and go to state 67
    tipo                           shift and go to state 54
    empty                          shift and go to state 56

state 56

    (24) paramsaux -> empty .

    RIGHTPARENTHESES reduce using rule 24 (paramsaux -> empty .)


state 57

    (5) vars -> VAR seen_vars tipo ID seen_ID_var varsaux SEMICOLON vars .

    FUNCTION        reduce using rule 5 (vars -> VAR seen_vars tipo ID seen_ID_var varsaux SEMICOLON vars .)
    MAIN            reduce using rule 5 (vars -> VAR seen_vars tipo ID seen_ID_var varsaux SEMICOLON vars .)
    IF              reduce using rule 5 (vars -> VAR seen_vars tipo ID seen_ID_var varsaux SEMICOLON vars .)
    PRINT           reduce using rule 5 (vars -> VAR seen_vars tipo ID seen_ID_var varsaux SEMICOLON vars .)
    ID              reduce using rule 5 (vars -> VAR seen_vars tipo ID seen_ID_var varsaux SEMICOLON vars .)
    INT_CTE         reduce using rule 5 (vars -> VAR seen_vars tipo ID seen_ID_var varsaux SEMICOLON vars .)
    FLOAT_CTE       reduce using rule 5 (vars -> VAR seen_vars tipo ID seen_ID_var varsaux SEMICOLON vars .)
    RIGHTBRACE      reduce using rule 5 (vars -> VAR seen_vars tipo ID seen_ID_var varsaux SEMICOLON vars .)


state 58

    (8) varsaux -> COMMA ID seen_ID_var . varsaux
    (8) varsaux -> . COMMA ID seen_ID_var varsaux
    (9) varsaux -> .

    COMMA           shift and go to state 36
    SEMICOLON       reduce using rule 9 (varsaux -> .)

    varsaux                        shift and go to state 68

state 59

    (25) bloque -> LEFTBRACE vars bloqueaux RIGHTBRACE .

    $end            reduce using rule 25 (bloque -> LEFTBRACE vars bloqueaux RIGHTBRACE .)
    FUNCTION        reduce using rule 25 (bloque -> LEFTBRACE vars bloqueaux RIGHTBRACE .)
    MAIN            reduce using rule 25 (bloque -> LEFTBRACE vars bloqueaux RIGHTBRACE .)
    ELSE            reduce using rule 25 (bloque -> LEFTBRACE vars bloqueaux RIGHTBRACE .)
    SEMICOLON       reduce using rule 25 (bloque -> LEFTBRACE vars bloqueaux RIGHTBRACE .)


state 60

    (26) bloqueaux -> estatuto bloqueaux .

    RIGHTBRACE      reduce using rule 26 (bloqueaux -> estatuto bloqueaux .)


state 61

    (31) asignacion -> varcte EQUALS . expresion SEMICOLON
    (32) expresion -> . exp expresionaux
    (42) exp -> . termino seen_termino
    (43) exp -> . termino seen_termino expaux
    (46) termino -> . factor seen_factor
    (47) termino -> . factor seen_factor terminoaux
    (56) factor -> . factoraux
    (57) factor -> . factoraux2
    (58) factoraux -> . LEFTPARENTHESES expresion RIGHTPARENTHESES
    (59) factoraux2 -> . factoraux3 varcte
    (60) factoraux3 -> . PLUS
    (61) factoraux3 -> . MINUS
    (62) factoraux3 -> .

    LEFTPARENTHESES shift and go to state 75
    PLUS            shift and go to state 77
    MINUS           shift and go to state 78
    ID              reduce using rule 62 (factoraux3 -> .)
    INT_CTE         reduce using rule 62 (factoraux3 -> .)
    FLOAT_CTE       reduce using rule 62 (factoraux3 -> .)

    expresion                      shift and go to state 69
    exp                            shift and go to state 70
    termino                        shift and go to state 71
    factor                         shift and go to state 72
    factoraux                      shift and go to state 73
    factoraux2                     shift and go to state 74
    factoraux3                     shift and go to state 76

state 62

    (50) condicion -> IF LEFTPARENTHESES . expresion RIGHTPARENTHESES seen_right_parentheses_condicion bloque condicionaux
    (32) expresion -> . exp expresionaux
    (42) exp -> . termino seen_termino
    (43) exp -> . termino seen_termino expaux
    (46) termino -> . factor seen_factor
    (47) termino -> . factor seen_factor terminoaux
    (56) factor -> . factoraux
    (57) factor -> . factoraux2
    (58) factoraux -> . LEFTPARENTHESES expresion RIGHTPARENTHESES
    (59) factoraux2 -> . factoraux3 varcte
    (60) factoraux3 -> . PLUS
    (61) factoraux3 -> . MINUS
    (62) factoraux3 -> .

    LEFTPARENTHESES shift and go to state 75
    PLUS            shift and go to state 77
    MINUS           shift and go to state 78
    ID              reduce using rule 62 (factoraux3 -> .)
    INT_CTE         reduce using rule 62 (factoraux3 -> .)
    FLOAT_CTE       reduce using rule 62 (factoraux3 -> .)

    expresion                      shift and go to state 79
    exp                            shift and go to state 70
    termino                        shift and go to state 71
    factor                         shift and go to state 72
    factoraux                      shift and go to state 73
    factoraux2                     shift and go to state 74
    factoraux3                     shift and go to state 76

state 63

    (37) escritura -> PRINT LEFTPARENTHESES . escrituraaux RIGHTPARENTHESES SEMICOLON
    (38) escrituraaux -> . expresion
    (39) escrituraaux -> . STRING_CTE
    (40) escrituraaux -> . expresion COMMA escrituraaux
    (41) escrituraaux -> . STRING_CTE COMMA escrituraaux
    (32) expresion -> . exp expresionaux
    (42) exp -> . termino seen_termino
    (43) exp -> . termino seen_termino expaux
    (46) termino -> . factor seen_factor
    (47) termino -> . factor seen_factor terminoaux
    (56) factor -> . factoraux
    (57) factor -> . factoraux2
    (58) factoraux -> . LEFTPARENTHESES expresion RIGHTPARENTHESES
    (59) factoraux2 -> . factoraux3 varcte
    (60) factoraux3 -> . PLUS
    (61) factoraux3 -> . MINUS
    (62) factoraux3 -> .

    STRING_CTE      shift and go to state 82
    LEFTPARENTHESES shift and go to state 75
    PLUS            shift and go to state 77
    MINUS           shift and go to state 78
    ID              reduce using rule 62 (factoraux3 -> .)
    INT_CTE         reduce using rule 62 (factoraux3 -> .)
    FLOAT_CTE       reduce using rule 62 (factoraux3 -> .)

    escrituraaux                   shift and go to state 80
    expresion                      shift and go to state 81
    exp                            shift and go to state 70
    termino                        shift and go to state 71
    factor                         shift and go to state 72
    factoraux                      shift and go to state 73
    factoraux2                     shift and go to state 74
    factoraux3                     shift and go to state 76

state 64

    (63) varcte -> ID seen_ID .

    EQUALS          reduce using rule 63 (varcte -> ID seen_ID .)
    DIVIDE          reduce using rule 63 (varcte -> ID seen_ID .)
    MULTIPLY        reduce using rule 63 (varcte -> ID seen_ID .)
    PLUS            reduce using rule 63 (varcte -> ID seen_ID .)
    MINUS           reduce using rule 63 (varcte -> ID seen_ID .)
    GREATERTHAN     reduce using rule 63 (varcte -> ID seen_ID .)
    LESSTHAN        reduce using rule 63 (varcte -> ID seen_ID .)
    NOTEQUALS       reduce using rule 63 (varcte -> ID seen_ID .)
    SEMICOLON       reduce using rule 63 (varcte -> ID seen_ID .)
    RIGHTPARENTHESES reduce using rule 63 (varcte -> ID seen_ID .)
    COMMA           reduce using rule 63 (varcte -> ID seen_ID .)


state 65

    (20) params -> LEFTPARENTHESES seen_params_init paramsaux RIGHTPARENTHESES .

    LEFTBRACE       reduce using rule 20 (params -> LEFTPARENTHESES seen_params_init paramsaux RIGHTPARENTHESES .)


state 66

    (22) paramsaux -> tipo ID . seen_ID_var paramsaux
    (10) seen_ID_var -> .

    COMMA           reduce using rule 10 (seen_ID_var -> .)
    INT             reduce using rule 10 (seen_ID_var -> .)
    FLOAT           reduce using rule 10 (seen_ID_var -> .)
    RIGHTPARENTHESES reduce using rule 10 (seen_ID_var -> .)

    seen_ID_var                    shift and go to state 83

state 67

    (23) paramsaux -> COMMA paramsaux .

    RIGHTPARENTHESES reduce using rule 23 (paramsaux -> COMMA paramsaux .)


state 68

    (8) varsaux -> COMMA ID seen_ID_var varsaux .

    SEMICOLON       reduce using rule 8 (varsaux -> COMMA ID seen_ID_var varsaux .)


state 69

    (31) asignacion -> varcte EQUALS expresion . SEMICOLON

    SEMICOLON       shift and go to state 84


state 70

    (32) expresion -> exp . expresionaux
    (33) expresionaux -> . GREATERTHAN exp
    (34) expresionaux -> . LESSTHAN exp
    (35) expresionaux -> . NOTEQUALS exp
    (36) expresionaux -> .

    GREATERTHAN     shift and go to state 86
    LESSTHAN        shift and go to state 87
    NOTEQUALS       shift and go to state 88
    SEMICOLON       reduce using rule 36 (expresionaux -> .)
    RIGHTPARENTHESES reduce using rule 36 (expresionaux -> .)
    COMMA           reduce using rule 36 (expresionaux -> .)

    expresionaux                   shift and go to state 85

state 71

    (42) exp -> termino . seen_termino
    (43) exp -> termino . seen_termino expaux
    (68) seen_termino -> .

    PLUS            reduce using rule 68 (seen_termino -> .)
    MINUS           reduce using rule 68 (seen_termino -> .)
    GREATERTHAN     reduce using rule 68 (seen_termino -> .)
    LESSTHAN        reduce using rule 68 (seen_termino -> .)
    NOTEQUALS       reduce using rule 68 (seen_termino -> .)
    SEMICOLON       reduce using rule 68 (seen_termino -> .)
    RIGHTPARENTHESES reduce using rule 68 (seen_termino -> .)
    COMMA           reduce using rule 68 (seen_termino -> .)

    seen_termino                   shift and go to state 89

state 72

    (46) termino -> factor . seen_factor
    (47) termino -> factor . seen_factor terminoaux
    (69) seen_factor -> .

    DIVIDE          reduce using rule 69 (seen_factor -> .)
    MULTIPLY        reduce using rule 69 (seen_factor -> .)
    PLUS            reduce using rule 69 (seen_factor -> .)
    MINUS           reduce using rule 69 (seen_factor -> .)
    GREATERTHAN     reduce using rule 69 (seen_factor -> .)
    LESSTHAN        reduce using rule 69 (seen_factor -> .)
    NOTEQUALS       reduce using rule 69 (seen_factor -> .)
    SEMICOLON       reduce using rule 69 (seen_factor -> .)
    RIGHTPARENTHESES reduce using rule 69 (seen_factor -> .)
    COMMA           reduce using rule 69 (seen_factor -> .)

    seen_factor                    shift and go to state 90

state 73

    (56) factor -> factoraux .

    DIVIDE          reduce using rule 56 (factor -> factoraux .)
    MULTIPLY        reduce using rule 56 (factor -> factoraux .)
    PLUS            reduce using rule 56 (factor -> factoraux .)
    MINUS           reduce using rule 56 (factor -> factoraux .)
    GREATERTHAN     reduce using rule 56 (factor -> factoraux .)
    LESSTHAN        reduce using rule 56 (factor -> factoraux .)
    NOTEQUALS       reduce using rule 56 (factor -> factoraux .)
    SEMICOLON       reduce using rule 56 (factor -> factoraux .)
    RIGHTPARENTHESES reduce using rule 56 (factor -> factoraux .)
    COMMA           reduce using rule 56 (factor -> factoraux .)


state 74

    (57) factor -> factoraux2 .

    DIVIDE          reduce using rule 57 (factor -> factoraux2 .)
    MULTIPLY        reduce using rule 57 (factor -> factoraux2 .)
    PLUS            reduce using rule 57 (factor -> factoraux2 .)
    MINUS           reduce using rule 57 (factor -> factoraux2 .)
    GREATERTHAN     reduce using rule 57 (factor -> factoraux2 .)
    LESSTHAN        reduce using rule 57 (factor -> factoraux2 .)
    NOTEQUALS       reduce using rule 57 (factor -> factoraux2 .)
    SEMICOLON       reduce using rule 57 (factor -> factoraux2 .)
    RIGHTPARENTHESES reduce using rule 57 (factor -> factoraux2 .)
    COMMA           reduce using rule 57 (factor -> factoraux2 .)


state 75

    (58) factoraux -> LEFTPARENTHESES . expresion RIGHTPARENTHESES
    (32) expresion -> . exp expresionaux
    (42) exp -> . termino seen_termino
    (43) exp -> . termino seen_termino expaux
    (46) termino -> . factor seen_factor
    (47) termino -> . factor seen_factor terminoaux
    (56) factor -> . factoraux
    (57) factor -> . factoraux2
    (58) factoraux -> . LEFTPARENTHESES expresion RIGHTPARENTHESES
    (59) factoraux2 -> . factoraux3 varcte
    (60) factoraux3 -> . PLUS
    (61) factoraux3 -> . MINUS
    (62) factoraux3 -> .

    LEFTPARENTHESES shift and go to state 75
    PLUS            shift and go to state 77
    MINUS           shift and go to state 78
    ID              reduce using rule 62 (factoraux3 -> .)
    INT_CTE         reduce using rule 62 (factoraux3 -> .)
    FLOAT_CTE       reduce using rule 62 (factoraux3 -> .)

    expresion                      shift and go to state 91
    exp                            shift and go to state 70
    termino                        shift and go to state 71
    factor                         shift and go to state 72
    factoraux                      shift and go to state 73
    factoraux2                     shift and go to state 74
    factoraux3                     shift and go to state 76

state 76

    (59) factoraux2 -> factoraux3 . varcte
    (63) varcte -> . ID seen_ID
    (64) varcte -> . INT_CTE
    (65) varcte -> . FLOAT_CTE

    ID              shift and go to state 50
    INT_CTE         shift and go to state 51
    FLOAT_CTE       shift and go to state 52

    varcte                         shift and go to state 92

state 77

    (60) factoraux3 -> PLUS .

    ID              reduce using rule 60 (factoraux3 -> PLUS .)
    INT_CTE         reduce using rule 60 (factoraux3 -> PLUS .)
    FLOAT_CTE       reduce using rule 60 (factoraux3 -> PLUS .)


state 78

    (61) factoraux3 -> MINUS .

    ID              reduce using rule 61 (factoraux3 -> MINUS .)
    INT_CTE         reduce using rule 61 (factoraux3 -> MINUS .)
    FLOAT_CTE       reduce using rule 61 (factoraux3 -> MINUS .)


state 79

    (50) condicion -> IF LEFTPARENTHESES expresion . RIGHTPARENTHESES seen_right_parentheses_condicion bloque condicionaux

    RIGHTPARENTHESES shift and go to state 93


state 80

    (37) escritura -> PRINT LEFTPARENTHESES escrituraaux . RIGHTPARENTHESES SEMICOLON

    RIGHTPARENTHESES shift and go to state 94


state 81

    (38) escrituraaux -> expresion .
    (40) escrituraaux -> expresion . COMMA escrituraaux

    RIGHTPARENTHESES reduce using rule 38 (escrituraaux -> expresion .)
    COMMA           shift and go to state 95


state 82

    (39) escrituraaux -> STRING_CTE .
    (41) escrituraaux -> STRING_CTE . COMMA escrituraaux

    RIGHTPARENTHESES reduce using rule 39 (escrituraaux -> STRING_CTE .)
    COMMA           shift and go to state 96


state 83

    (22) paramsaux -> tipo ID seen_ID_var . paramsaux
    (22) paramsaux -> . tipo ID seen_ID_var paramsaux
    (23) paramsaux -> . COMMA paramsaux
    (24) paramsaux -> . empty
    (11) tipo -> . INT seen_tipo
    (12) tipo -> . FLOAT seen_tipo
    (71) empty -> .

    COMMA           shift and go to state 55
    INT             shift and go to state 19
    FLOAT           shift and go to state 20
    RIGHTPARENTHESES reduce using rule 71 (empty -> .)

    tipo                           shift and go to state 54
    paramsaux                      shift and go to state 97
    empty                          shift and go to state 56

state 84

    (31) asignacion -> varcte EQUALS expresion SEMICOLON .

    IF              reduce using rule 31 (asignacion -> varcte EQUALS expresion SEMICOLON .)
    PRINT           reduce using rule 31 (asignacion -> varcte EQUALS expresion SEMICOLON .)
    ID              reduce using rule 31 (asignacion -> varcte EQUALS expresion SEMICOLON .)
    INT_CTE         reduce using rule 31 (asignacion -> varcte EQUALS expresion SEMICOLON .)
    FLOAT_CTE       reduce using rule 31 (asignacion -> varcte EQUALS expresion SEMICOLON .)
    RIGHTBRACE      reduce using rule 31 (asignacion -> varcte EQUALS expresion SEMICOLON .)


state 85

    (32) expresion -> exp expresionaux .

    SEMICOLON       reduce using rule 32 (expresion -> exp expresionaux .)
    RIGHTPARENTHESES reduce using rule 32 (expresion -> exp expresionaux .)
    COMMA           reduce using rule 32 (expresion -> exp expresionaux .)


state 86

    (33) expresionaux -> GREATERTHAN . exp
    (42) exp -> . termino seen_termino
    (43) exp -> . termino seen_termino expaux
    (46) termino -> . factor seen_factor
    (47) termino -> . factor seen_factor terminoaux
    (56) factor -> . factoraux
    (57) factor -> . factoraux2
    (58) factoraux -> . LEFTPARENTHESES expresion RIGHTPARENTHESES
    (59) factoraux2 -> . factoraux3 varcte
    (60) factoraux3 -> . PLUS
    (61) factoraux3 -> . MINUS
    (62) factoraux3 -> .

    LEFTPARENTHESES shift and go to state 75
    PLUS            shift and go to state 77
    MINUS           shift and go to state 78
    ID              reduce using rule 62 (factoraux3 -> .)
    INT_CTE         reduce using rule 62 (factoraux3 -> .)
    FLOAT_CTE       reduce using rule 62 (factoraux3 -> .)

    exp                            shift and go to state 98
    termino                        shift and go to state 71
    factor                         shift and go to state 72
    factoraux                      shift and go to state 73
    factoraux2                     shift and go to state 74
    factoraux3                     shift and go to state 76

state 87

    (34) expresionaux -> LESSTHAN . exp
    (42) exp -> . termino seen_termino
    (43) exp -> . termino seen_termino expaux
    (46) termino -> . factor seen_factor
    (47) termino -> . factor seen_factor terminoaux
    (56) factor -> . factoraux
    (57) factor -> . factoraux2
    (58) factoraux -> . LEFTPARENTHESES expresion RIGHTPARENTHESES
    (59) factoraux2 -> . factoraux3 varcte
    (60) factoraux3 -> . PLUS
    (61) factoraux3 -> . MINUS
    (62) factoraux3 -> .

    LEFTPARENTHESES shift and go to state 75
    PLUS            shift and go to state 77
    MINUS           shift and go to state 78
    ID              reduce using rule 62 (factoraux3 -> .)
    INT_CTE         reduce using rule 62 (factoraux3 -> .)
    FLOAT_CTE       reduce using rule 62 (factoraux3 -> .)

    exp                            shift and go to state 99
    termino                        shift and go to state 71
    factor                         shift and go to state 72
    factoraux                      shift and go to state 73
    factoraux2                     shift and go to state 74
    factoraux3                     shift and go to state 76

state 88

    (35) expresionaux -> NOTEQUALS . exp
    (42) exp -> . termino seen_termino
    (43) exp -> . termino seen_termino expaux
    (46) termino -> . factor seen_factor
    (47) termino -> . factor seen_factor terminoaux
    (56) factor -> . factoraux
    (57) factor -> . factoraux2
    (58) factoraux -> . LEFTPARENTHESES expresion RIGHTPARENTHESES
    (59) factoraux2 -> . factoraux3 varcte
    (60) factoraux3 -> . PLUS
    (61) factoraux3 -> . MINUS
    (62) factoraux3 -> .

    LEFTPARENTHESES shift and go to state 75
    PLUS            shift and go to state 77
    MINUS           shift and go to state 78
    ID              reduce using rule 62 (factoraux3 -> .)
    INT_CTE         reduce using rule 62 (factoraux3 -> .)
    FLOAT_CTE       reduce using rule 62 (factoraux3 -> .)

    exp                            shift and go to state 100
    termino                        shift and go to state 71
    factor                         shift and go to state 72
    factoraux                      shift and go to state 73
    factoraux2                     shift and go to state 74
    factoraux3                     shift and go to state 76

state 89

    (42) exp -> termino seen_termino .
    (43) exp -> termino seen_termino . expaux
    (44) expaux -> . PLUS seen_operador exp
    (45) expaux -> . MINUS seen_operador exp

    GREATERTHAN     reduce using rule 42 (exp -> termino seen_termino .)
    LESSTHAN        reduce using rule 42 (exp -> termino seen_termino .)
    NOTEQUALS       reduce using rule 42 (exp -> termino seen_termino .)
    SEMICOLON       reduce using rule 42 (exp -> termino seen_termino .)
    RIGHTPARENTHESES reduce using rule 42 (exp -> termino seen_termino .)
    COMMA           reduce using rule 42 (exp -> termino seen_termino .)
    PLUS            shift and go to state 102
    MINUS           shift and go to state 103

    expaux                         shift and go to state 101

state 90

    (46) termino -> factor seen_factor .
    (47) termino -> factor seen_factor . terminoaux
    (48) terminoaux -> . DIVIDE seen_operador termino
    (49) terminoaux -> . MULTIPLY seen_operador termino

    PLUS            reduce using rule 46 (termino -> factor seen_factor .)
    MINUS           reduce using rule 46 (termino -> factor seen_factor .)
    GREATERTHAN     reduce using rule 46 (termino -> factor seen_factor .)
    LESSTHAN        reduce using rule 46 (termino -> factor seen_factor .)
    NOTEQUALS       reduce using rule 46 (termino -> factor seen_factor .)
    SEMICOLON       reduce using rule 46 (termino -> factor seen_factor .)
    RIGHTPARENTHESES reduce using rule 46 (termino -> factor seen_factor .)
    COMMA           reduce using rule 46 (termino -> factor seen_factor .)
    DIVIDE          shift and go to state 105
    MULTIPLY        shift and go to state 106

    terminoaux                     shift and go to state 104

state 91

    (58) factoraux -> LEFTPARENTHESES expresion . RIGHTPARENTHESES

    RIGHTPARENTHESES shift and go to state 107


state 92

    (59) factoraux2 -> factoraux3 varcte .

    DIVIDE          reduce using rule 59 (factoraux2 -> factoraux3 varcte .)
    MULTIPLY        reduce using rule 59 (factoraux2 -> factoraux3 varcte .)
    PLUS            reduce using rule 59 (factoraux2 -> factoraux3 varcte .)
    MINUS           reduce using rule 59 (factoraux2 -> factoraux3 varcte .)
    GREATERTHAN     reduce using rule 59 (factoraux2 -> factoraux3 varcte .)
    LESSTHAN        reduce using rule 59 (factoraux2 -> factoraux3 varcte .)
    NOTEQUALS       reduce using rule 59 (factoraux2 -> factoraux3 varcte .)
    SEMICOLON       reduce using rule 59 (factoraux2 -> factoraux3 varcte .)
    RIGHTPARENTHESES reduce using rule 59 (factoraux2 -> factoraux3 varcte .)
    COMMA           reduce using rule 59 (factoraux2 -> factoraux3 varcte .)


state 93

    (50) condicion -> IF LEFTPARENTHESES expresion RIGHTPARENTHESES . seen_right_parentheses_condicion bloque condicionaux
    (53) seen_right_parentheses_condicion -> .

    LEFTBRACE       reduce using rule 53 (seen_right_parentheses_condicion -> .)

    seen_right_parentheses_condicion shift and go to state 108

state 94

    (37) escritura -> PRINT LEFTPARENTHESES escrituraaux RIGHTPARENTHESES . SEMICOLON

    SEMICOLON       shift and go to state 109


state 95

    (40) escrituraaux -> expresion COMMA . escrituraaux
    (38) escrituraaux -> . expresion
    (39) escrituraaux -> . STRING_CTE
    (40) escrituraaux -> . expresion COMMA escrituraaux
    (41) escrituraaux -> . STRING_CTE COMMA escrituraaux
    (32) expresion -> . exp expresionaux
    (42) exp -> . termino seen_termino
    (43) exp -> . termino seen_termino expaux
    (46) termino -> . factor seen_factor
    (47) termino -> . factor seen_factor terminoaux
    (56) factor -> . factoraux
    (57) factor -> . factoraux2
    (58) factoraux -> . LEFTPARENTHESES expresion RIGHTPARENTHESES
    (59) factoraux2 -> . factoraux3 varcte
    (60) factoraux3 -> . PLUS
    (61) factoraux3 -> . MINUS
    (62) factoraux3 -> .

    STRING_CTE      shift and go to state 82
    LEFTPARENTHESES shift and go to state 75
    PLUS            shift and go to state 77
    MINUS           shift and go to state 78
    ID              reduce using rule 62 (factoraux3 -> .)
    INT_CTE         reduce using rule 62 (factoraux3 -> .)
    FLOAT_CTE       reduce using rule 62 (factoraux3 -> .)

    expresion                      shift and go to state 81
    escrituraaux                   shift and go to state 110
    exp                            shift and go to state 70
    termino                        shift and go to state 71
    factor                         shift and go to state 72
    factoraux                      shift and go to state 73
    factoraux2                     shift and go to state 74
    factoraux3                     shift and go to state 76

state 96

    (41) escrituraaux -> STRING_CTE COMMA . escrituraaux
    (38) escrituraaux -> . expresion
    (39) escrituraaux -> . STRING_CTE
    (40) escrituraaux -> . expresion COMMA escrituraaux
    (41) escrituraaux -> . STRING_CTE COMMA escrituraaux
    (32) expresion -> . exp expresionaux
    (42) exp -> . termino seen_termino
    (43) exp -> . termino seen_termino expaux
    (46) termino -> . factor seen_factor
    (47) termino -> . factor seen_factor terminoaux
    (56) factor -> . factoraux
    (57) factor -> . factoraux2
    (58) factoraux -> . LEFTPARENTHESES expresion RIGHTPARENTHESES
    (59) factoraux2 -> . factoraux3 varcte
    (60) factoraux3 -> . PLUS
    (61) factoraux3 -> . MINUS
    (62) factoraux3 -> .

    STRING_CTE      shift and go to state 82
    LEFTPARENTHESES shift and go to state 75
    PLUS            shift and go to state 77
    MINUS           shift and go to state 78
    ID              reduce using rule 62 (factoraux3 -> .)
    INT_CTE         reduce using rule 62 (factoraux3 -> .)
    FLOAT_CTE       reduce using rule 62 (factoraux3 -> .)

    escrituraaux                   shift and go to state 111
    expresion                      shift and go to state 81
    exp                            shift and go to state 70
    termino                        shift and go to state 71
    factor                         shift and go to state 72
    factoraux                      shift and go to state 73
    factoraux2                     shift and go to state 74
    factoraux3                     shift and go to state 76

state 97

    (22) paramsaux -> tipo ID seen_ID_var paramsaux .

    RIGHTPARENTHESES reduce using rule 22 (paramsaux -> tipo ID seen_ID_var paramsaux .)


state 98

    (33) expresionaux -> GREATERTHAN exp .

    SEMICOLON       reduce using rule 33 (expresionaux -> GREATERTHAN exp .)
    RIGHTPARENTHESES reduce using rule 33 (expresionaux -> GREATERTHAN exp .)
    COMMA           reduce using rule 33 (expresionaux -> GREATERTHAN exp .)


state 99

    (34) expresionaux -> LESSTHAN exp .

    SEMICOLON       reduce using rule 34 (expresionaux -> LESSTHAN exp .)
    RIGHTPARENTHESES reduce using rule 34 (expresionaux -> LESSTHAN exp .)
    COMMA           reduce using rule 34 (expresionaux -> LESSTHAN exp .)


state 100

    (35) expresionaux -> NOTEQUALS exp .

    SEMICOLON       reduce using rule 35 (expresionaux -> NOTEQUALS exp .)
    RIGHTPARENTHESES reduce using rule 35 (expresionaux -> NOTEQUALS exp .)
    COMMA           reduce using rule 35 (expresionaux -> NOTEQUALS exp .)


state 101

    (43) exp -> termino seen_termino expaux .

    GREATERTHAN     reduce using rule 43 (exp -> termino seen_termino expaux .)
    LESSTHAN        reduce using rule 43 (exp -> termino seen_termino expaux .)
    NOTEQUALS       reduce using rule 43 (exp -> termino seen_termino expaux .)
    SEMICOLON       reduce using rule 43 (exp -> termino seen_termino expaux .)
    RIGHTPARENTHESES reduce using rule 43 (exp -> termino seen_termino expaux .)
    COMMA           reduce using rule 43 (exp -> termino seen_termino expaux .)


state 102

    (44) expaux -> PLUS . seen_operador exp
    (67) seen_operador -> .

    LEFTPARENTHESES reduce using rule 67 (seen_operador -> .)
    PLUS            reduce using rule 67 (seen_operador -> .)
    MINUS           reduce using rule 67 (seen_operador -> .)
    ID              reduce using rule 67 (seen_operador -> .)
    INT_CTE         reduce using rule 67 (seen_operador -> .)
    FLOAT_CTE       reduce using rule 67 (seen_operador -> .)

    seen_operador                  shift and go to state 112

state 103

    (45) expaux -> MINUS . seen_operador exp
    (67) seen_operador -> .

    LEFTPARENTHESES reduce using rule 67 (seen_operador -> .)
    PLUS            reduce using rule 67 (seen_operador -> .)
    MINUS           reduce using rule 67 (seen_operador -> .)
    ID              reduce using rule 67 (seen_operador -> .)
    INT_CTE         reduce using rule 67 (seen_operador -> .)
    FLOAT_CTE       reduce using rule 67 (seen_operador -> .)

    seen_operador                  shift and go to state 113

state 104

    (47) termino -> factor seen_factor terminoaux .

    PLUS            reduce using rule 47 (termino -> factor seen_factor terminoaux .)
    MINUS           reduce using rule 47 (termino -> factor seen_factor terminoaux .)
    GREATERTHAN     reduce using rule 47 (termino -> factor seen_factor terminoaux .)
    LESSTHAN        reduce using rule 47 (termino -> factor seen_factor terminoaux .)
    NOTEQUALS       reduce using rule 47 (termino -> factor seen_factor terminoaux .)
    SEMICOLON       reduce using rule 47 (termino -> factor seen_factor terminoaux .)
    RIGHTPARENTHESES reduce using rule 47 (termino -> factor seen_factor terminoaux .)
    COMMA           reduce using rule 47 (termino -> factor seen_factor terminoaux .)


state 105

    (48) terminoaux -> DIVIDE . seen_operador termino
    (67) seen_operador -> .

    LEFTPARENTHESES reduce using rule 67 (seen_operador -> .)
    PLUS            reduce using rule 67 (seen_operador -> .)
    MINUS           reduce using rule 67 (seen_operador -> .)
    ID              reduce using rule 67 (seen_operador -> .)
    INT_CTE         reduce using rule 67 (seen_operador -> .)
    FLOAT_CTE       reduce using rule 67 (seen_operador -> .)

    seen_operador                  shift and go to state 114

state 106

    (49) terminoaux -> MULTIPLY . seen_operador termino
    (67) seen_operador -> .

    LEFTPARENTHESES reduce using rule 67 (seen_operador -> .)
    PLUS            reduce using rule 67 (seen_operador -> .)
    MINUS           reduce using rule 67 (seen_operador -> .)
    ID              reduce using rule 67 (seen_operador -> .)
    INT_CTE         reduce using rule 67 (seen_operador -> .)
    FLOAT_CTE       reduce using rule 67 (seen_operador -> .)

    seen_operador                  shift and go to state 115

state 107

    (58) factoraux -> LEFTPARENTHESES expresion RIGHTPARENTHESES .

    DIVIDE          reduce using rule 58 (factoraux -> LEFTPARENTHESES expresion RIGHTPARENTHESES .)
    MULTIPLY        reduce using rule 58 (factoraux -> LEFTPARENTHESES expresion RIGHTPARENTHESES .)
    PLUS            reduce using rule 58 (factoraux -> LEFTPARENTHESES expresion RIGHTPARENTHESES .)
    MINUS           reduce using rule 58 (factoraux -> LEFTPARENTHESES expresion RIGHTPARENTHESES .)
    GREATERTHAN     reduce using rule 58 (factoraux -> LEFTPARENTHESES expresion RIGHTPARENTHESES .)
    LESSTHAN        reduce using rule 58 (factoraux -> LEFTPARENTHESES expresion RIGHTPARENTHESES .)
    NOTEQUALS       reduce using rule 58 (factoraux -> LEFTPARENTHESES expresion RIGHTPARENTHESES .)
    SEMICOLON       reduce using rule 58 (factoraux -> LEFTPARENTHESES expresion RIGHTPARENTHESES .)
    RIGHTPARENTHESES reduce using rule 58 (factoraux -> LEFTPARENTHESES expresion RIGHTPARENTHESES .)
    COMMA           reduce using rule 58 (factoraux -> LEFTPARENTHESES expresion RIGHTPARENTHESES .)


state 108

    (50) condicion -> IF LEFTPARENTHESES expresion RIGHTPARENTHESES seen_right_parentheses_condicion . bloque condicionaux
    (25) bloque -> . LEFTBRACE vars bloqueaux RIGHTBRACE

    LEFTBRACE       shift and go to state 32

    bloque                         shift and go to state 116

state 109

    (37) escritura -> PRINT LEFTPARENTHESES escrituraaux RIGHTPARENTHESES SEMICOLON .

    IF              reduce using rule 37 (escritura -> PRINT LEFTPARENTHESES escrituraaux RIGHTPARENTHESES SEMICOLON .)
    PRINT           reduce using rule 37 (escritura -> PRINT LEFTPARENTHESES escrituraaux RIGHTPARENTHESES SEMICOLON .)
    ID              reduce using rule 37 (escritura -> PRINT LEFTPARENTHESES escrituraaux RIGHTPARENTHESES SEMICOLON .)
    INT_CTE         reduce using rule 37 (escritura -> PRINT LEFTPARENTHESES escrituraaux RIGHTPARENTHESES SEMICOLON .)
    FLOAT_CTE       reduce using rule 37 (escritura -> PRINT LEFTPARENTHESES escrituraaux RIGHTPARENTHESES SEMICOLON .)
    RIGHTBRACE      reduce using rule 37 (escritura -> PRINT LEFTPARENTHESES escrituraaux RIGHTPARENTHESES SEMICOLON .)


state 110

    (40) escrituraaux -> expresion COMMA escrituraaux .

    RIGHTPARENTHESES reduce using rule 40 (escrituraaux -> expresion COMMA escrituraaux .)


state 111

    (41) escrituraaux -> STRING_CTE COMMA escrituraaux .

    RIGHTPARENTHESES reduce using rule 41 (escrituraaux -> STRING_CTE COMMA escrituraaux .)


state 112

    (44) expaux -> PLUS seen_operador . exp
    (42) exp -> . termino seen_termino
    (43) exp -> . termino seen_termino expaux
    (46) termino -> . factor seen_factor
    (47) termino -> . factor seen_factor terminoaux
    (56) factor -> . factoraux
    (57) factor -> . factoraux2
    (58) factoraux -> . LEFTPARENTHESES expresion RIGHTPARENTHESES
    (59) factoraux2 -> . factoraux3 varcte
    (60) factoraux3 -> . PLUS
    (61) factoraux3 -> . MINUS
    (62) factoraux3 -> .

    LEFTPARENTHESES shift and go to state 75
    PLUS            shift and go to state 77
    MINUS           shift and go to state 78
    ID              reduce using rule 62 (factoraux3 -> .)
    INT_CTE         reduce using rule 62 (factoraux3 -> .)
    FLOAT_CTE       reduce using rule 62 (factoraux3 -> .)

    exp                            shift and go to state 117
    termino                        shift and go to state 71
    factor                         shift and go to state 72
    factoraux                      shift and go to state 73
    factoraux2                     shift and go to state 74
    factoraux3                     shift and go to state 76

state 113

    (45) expaux -> MINUS seen_operador . exp
    (42) exp -> . termino seen_termino
    (43) exp -> . termino seen_termino expaux
    (46) termino -> . factor seen_factor
    (47) termino -> . factor seen_factor terminoaux
    (56) factor -> . factoraux
    (57) factor -> . factoraux2
    (58) factoraux -> . LEFTPARENTHESES expresion RIGHTPARENTHESES
    (59) factoraux2 -> . factoraux3 varcte
    (60) factoraux3 -> . PLUS
    (61) factoraux3 -> . MINUS
    (62) factoraux3 -> .

    LEFTPARENTHESES shift and go to state 75
    PLUS            shift and go to state 77
    MINUS           shift and go to state 78
    ID              reduce using rule 62 (factoraux3 -> .)
    INT_CTE         reduce using rule 62 (factoraux3 -> .)
    FLOAT_CTE       reduce using rule 62 (factoraux3 -> .)

    exp                            shift and go to state 118
    termino                        shift and go to state 71
    factor                         shift and go to state 72
    factoraux                      shift and go to state 73
    factoraux2                     shift and go to state 74
    factoraux3                     shift and go to state 76

state 114

    (48) terminoaux -> DIVIDE seen_operador . termino
    (46) termino -> . factor seen_factor
    (47) termino -> . factor seen_factor terminoaux
    (56) factor -> . factoraux
    (57) factor -> . factoraux2
    (58) factoraux -> . LEFTPARENTHESES expresion RIGHTPARENTHESES
    (59) factoraux2 -> . factoraux3 varcte
    (60) factoraux3 -> . PLUS
    (61) factoraux3 -> . MINUS
    (62) factoraux3 -> .

    LEFTPARENTHESES shift and go to state 75
    PLUS            shift and go to state 77
    MINUS           shift and go to state 78
    ID              reduce using rule 62 (factoraux3 -> .)
    INT_CTE         reduce using rule 62 (factoraux3 -> .)
    FLOAT_CTE       reduce using rule 62 (factoraux3 -> .)

    termino                        shift and go to state 119
    factor                         shift and go to state 72
    factoraux                      shift and go to state 73
    factoraux2                     shift and go to state 74
    factoraux3                     shift and go to state 76

state 115

    (49) terminoaux -> MULTIPLY seen_operador . termino
    (46) termino -> . factor seen_factor
    (47) termino -> . factor seen_factor terminoaux
    (56) factor -> . factoraux
    (57) factor -> . factoraux2
    (58) factoraux -> . LEFTPARENTHESES expresion RIGHTPARENTHESES
    (59) factoraux2 -> . factoraux3 varcte
    (60) factoraux3 -> . PLUS
    (61) factoraux3 -> . MINUS
    (62) factoraux3 -> .

    LEFTPARENTHESES shift and go to state 75
    PLUS            shift and go to state 77
    MINUS           shift and go to state 78
    ID              reduce using rule 62 (factoraux3 -> .)
    INT_CTE         reduce using rule 62 (factoraux3 -> .)
    FLOAT_CTE       reduce using rule 62 (factoraux3 -> .)

    termino                        shift and go to state 120
    factor                         shift and go to state 72
    factoraux                      shift and go to state 73
    factoraux2                     shift and go to state 74
    factoraux3                     shift and go to state 76

state 116

    (50) condicion -> IF LEFTPARENTHESES expresion RIGHTPARENTHESES seen_right_parentheses_condicion bloque . condicionaux
    (51) condicionaux -> . ELSE seen_else bloque SEMICOLON seen_end_condicion
    (52) condicionaux -> . SEMICOLON seen_end_condicion

    ELSE            shift and go to state 122
    SEMICOLON       shift and go to state 123

    condicionaux                   shift and go to state 121

state 117

    (44) expaux -> PLUS seen_operador exp .

    GREATERTHAN     reduce using rule 44 (expaux -> PLUS seen_operador exp .)
    LESSTHAN        reduce using rule 44 (expaux -> PLUS seen_operador exp .)
    NOTEQUALS       reduce using rule 44 (expaux -> PLUS seen_operador exp .)
    SEMICOLON       reduce using rule 44 (expaux -> PLUS seen_operador exp .)
    RIGHTPARENTHESES reduce using rule 44 (expaux -> PLUS seen_operador exp .)
    COMMA           reduce using rule 44 (expaux -> PLUS seen_operador exp .)


state 118

    (45) expaux -> MINUS seen_operador exp .

    GREATERTHAN     reduce using rule 45 (expaux -> MINUS seen_operador exp .)
    LESSTHAN        reduce using rule 45 (expaux -> MINUS seen_operador exp .)
    NOTEQUALS       reduce using rule 45 (expaux -> MINUS seen_operador exp .)
    SEMICOLON       reduce using rule 45 (expaux -> MINUS seen_operador exp .)
    RIGHTPARENTHESES reduce using rule 45 (expaux -> MINUS seen_operador exp .)
    COMMA           reduce using rule 45 (expaux -> MINUS seen_operador exp .)


state 119

    (48) terminoaux -> DIVIDE seen_operador termino .

    PLUS            reduce using rule 48 (terminoaux -> DIVIDE seen_operador termino .)
    MINUS           reduce using rule 48 (terminoaux -> DIVIDE seen_operador termino .)
    GREATERTHAN     reduce using rule 48 (terminoaux -> DIVIDE seen_operador termino .)
    LESSTHAN        reduce using rule 48 (terminoaux -> DIVIDE seen_operador termino .)
    NOTEQUALS       reduce using rule 48 (terminoaux -> DIVIDE seen_operador termino .)
    SEMICOLON       reduce using rule 48 (terminoaux -> DIVIDE seen_operador termino .)
    RIGHTPARENTHESES reduce using rule 48 (terminoaux -> DIVIDE seen_operador termino .)
    COMMA           reduce using rule 48 (terminoaux -> DIVIDE seen_operador termino .)


state 120

    (49) terminoaux -> MULTIPLY seen_operador termino .

    PLUS            reduce using rule 49 (terminoaux -> MULTIPLY seen_operador termino .)
    MINUS           reduce using rule 49 (terminoaux -> MULTIPLY seen_operador termino .)
    GREATERTHAN     reduce using rule 49 (terminoaux -> MULTIPLY seen_operador termino .)
    LESSTHAN        reduce using rule 49 (terminoaux -> MULTIPLY seen_operador termino .)
    NOTEQUALS       reduce using rule 49 (terminoaux -> MULTIPLY seen_operador termino .)
    SEMICOLON       reduce using rule 49 (terminoaux -> MULTIPLY seen_operador termino .)
    RIGHTPARENTHESES reduce using rule 49 (terminoaux -> MULTIPLY seen_operador termino .)
    COMMA           reduce using rule 49 (terminoaux -> MULTIPLY seen_operador termino .)


state 121

    (50) condicion -> IF LEFTPARENTHESES expresion RIGHTPARENTHESES seen_right_parentheses_condicion bloque condicionaux .

    IF              reduce using rule 50 (condicion -> IF LEFTPARENTHESES expresion RIGHTPARENTHESES seen_right_parentheses_condicion bloque condicionaux .)
    PRINT           reduce using rule 50 (condicion -> IF LEFTPARENTHESES expresion RIGHTPARENTHESES seen_right_parentheses_condicion bloque condicionaux .)
    ID              reduce using rule 50 (condicion -> IF LEFTPARENTHESES expresion RIGHTPARENTHESES seen_right_parentheses_condicion bloque condicionaux .)
    INT_CTE         reduce using rule 50 (condicion -> IF LEFTPARENTHESES expresion RIGHTPARENTHESES seen_right_parentheses_condicion bloque condicionaux .)
    FLOAT_CTE       reduce using rule 50 (condicion -> IF LEFTPARENTHESES expresion RIGHTPARENTHESES seen_right_parentheses_condicion bloque condicionaux .)
    RIGHTBRACE      reduce using rule 50 (condicion -> IF LEFTPARENTHESES expresion RIGHTPARENTHESES seen_right_parentheses_condicion bloque condicionaux .)


state 122

    (51) condicionaux -> ELSE . seen_else bloque SEMICOLON seen_end_condicion
    (54) seen_else -> .

    LEFTBRACE       reduce using rule 54 (seen_else -> .)

    seen_else                      shift and go to state 124

state 123

    (52) condicionaux -> SEMICOLON . seen_end_condicion
    (55) seen_end_condicion -> .

    IF              reduce using rule 55 (seen_end_condicion -> .)
    PRINT           reduce using rule 55 (seen_end_condicion -> .)
    ID              reduce using rule 55 (seen_end_condicion -> .)
    INT_CTE         reduce using rule 55 (seen_end_condicion -> .)
    FLOAT_CTE       reduce using rule 55 (seen_end_condicion -> .)
    RIGHTBRACE      reduce using rule 55 (seen_end_condicion -> .)

    seen_end_condicion             shift and go to state 125

state 124

    (51) condicionaux -> ELSE seen_else . bloque SEMICOLON seen_end_condicion
    (25) bloque -> . LEFTBRACE vars bloqueaux RIGHTBRACE

    LEFTBRACE       shift and go to state 32

    bloque                         shift and go to state 126

state 125

    (52) condicionaux -> SEMICOLON seen_end_condicion .

    IF              reduce using rule 52 (condicionaux -> SEMICOLON seen_end_condicion .)
    PRINT           reduce using rule 52 (condicionaux -> SEMICOLON seen_end_condicion .)
    ID              reduce using rule 52 (condicionaux -> SEMICOLON seen_end_condicion .)
    INT_CTE         reduce using rule 52 (condicionaux -> SEMICOLON seen_end_condicion .)
    FLOAT_CTE       reduce using rule 52 (condicionaux -> SEMICOLON seen_end_condicion .)
    RIGHTBRACE      reduce using rule 52 (condicionaux -> SEMICOLON seen_end_condicion .)


state 126

    (51) condicionaux -> ELSE seen_else bloque . SEMICOLON seen_end_condicion

    SEMICOLON       shift and go to state 127


state 127

    (51) condicionaux -> ELSE seen_else bloque SEMICOLON . seen_end_condicion
    (55) seen_end_condicion -> .

    IF              reduce using rule 55 (seen_end_condicion -> .)
    PRINT           reduce using rule 55 (seen_end_condicion -> .)
    ID              reduce using rule 55 (seen_end_condicion -> .)
    INT_CTE         reduce using rule 55 (seen_end_condicion -> .)
    FLOAT_CTE       reduce using rule 55 (seen_end_condicion -> .)
    RIGHTBRACE      reduce using rule 55 (seen_end_condicion -> .)

    seen_end_condicion             shift and go to state 128

state 128

    (51) condicionaux -> ELSE seen_else bloque SEMICOLON seen_end_condicion .

    IF              reduce using rule 51 (condicionaux -> ELSE seen_else bloque SEMICOLON seen_end_condicion .)
    PRINT           reduce using rule 51 (condicionaux -> ELSE seen_else bloque SEMICOLON seen_end_condicion .)
    ID              reduce using rule 51 (condicionaux -> ELSE seen_else bloque SEMICOLON seen_end_condicion .)
    INT_CTE         reduce using rule 51 (condicionaux -> ELSE seen_else bloque SEMICOLON seen_end_condicion .)
    FLOAT_CTE       reduce using rule 51 (condicionaux -> ELSE seen_else bloque SEMICOLON seen_end_condicion .)
    RIGHTBRACE      reduce using rule 51 (condicionaux -> ELSE seen_else bloque SEMICOLON seen_end_condicion .)

