Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    AT
    BOOLEAN_CTE
    CALL
    COLON
    NOTEQUAL
    READ
    THREEDOTS

Grammar

Rule 0     S' -> calc
Rule 1     calc -> PROGRAMA ID seen_program SEMICOLON vars modulesaux functionmain
Rule 2     modulesaux -> function modulesaux
Rule 3     modulesaux -> <empty>
Rule 4     seen_program -> <empty>
Rule 5     vars -> VAR seen_vars tipo varsAuxDeclaration SEMICOLON vars
Rule 6     vars -> empty
Rule 7     varsAuxDeclaration -> idOrArrayDeclaration seen_end_declaration COMMA varsAuxDeclaration
Rule 8     varsAuxDeclaration -> idOrArrayDeclaration seen_end_declaration
Rule 9     seen_end_declaration -> <empty>
Rule 10    idOrArrayDeclaration -> ID seen_ID_var
Rule 11    idOrArrayDeclaration -> ID seen_ID_var LEFTBRACKET seen_lBracket_array arrayDimesionAux RIGHTBRACKET seen_rBracket_array
Rule 12    arrayDimesionAux -> INT_CTE seen_lim_inf INT_CTE seen_lim_sup
Rule 13    arrayDimesionAux -> INT_CTE seen_lim_inf INT_CTE seen_lim_sup COMMA seen_extra_dimension_array arrayDimesionAux
Rule 14    seen_extra_dimension_array -> <empty>
Rule 15    seen_lim_inf -> <empty>
Rule 16    seen_lim_sup -> <empty>
Rule 17    seen_lBracket_array -> <empty>
Rule 18    seen_rBracket_array -> <empty>
Rule 19    seen_vars -> <empty>
Rule 20    varsaux -> COMMA ID seen_ID_var varsaux
Rule 21    varsaux -> <empty>
Rule 22    seen_ID_var -> <empty>
Rule 23    tipo -> INT seen_tipo
Rule 24    tipo -> FLOAT seen_tipo
Rule 25    tipo -> BOOLEAN seen_tipo
Rule 26    seen_tipo -> <empty>
Rule 27    function -> FUNCTION returnfunctionaux ID seen_id_function params bloque seen_function_end
Rule 28    seen_id_function -> <empty>
Rule 29    seen_function_end -> <empty>
Rule 30    functionmain -> MAIN seen_function_main LEFTPARENTHESES RIGHTPARENTHESES bloque seen_end_program
Rule 31    seen_end_program -> <empty>
Rule 32    seen_function_main -> <empty>
Rule 33    returnfunctionaux -> tipo
Rule 34    returnfunctionaux -> VOID seen_void
Rule 35    seen_void -> <empty>
Rule 36    params -> LEFTPARENTHESES seen_params_init paramsaux RIGHTPARENTHESES
Rule 37    seen_params_init -> <empty>
Rule 38    paramsaux -> tipo ID seen_ID_params paramsaux
Rule 39    paramsaux -> COMMA paramsaux
Rule 40    paramsaux -> empty
Rule 41    seen_ID_params -> <empty>
Rule 42    bloque -> LEFTBRACE seen_start_bloqueaux vars bloqueaux returnaux RIGHTBRACE
Rule 43    returnaux -> RETURN expresion seen_return_function SEMICOLON
Rule 44    returnaux -> <empty>
Rule 45    seen_return_function -> <empty>
Rule 46    seen_start_bloqueaux -> <empty>
Rule 47    bloqueaux -> estatuto bloqueaux
Rule 48    bloqueaux -> <empty>
Rule 49    estatuto -> asignacion
Rule 50    estatuto -> condicion
Rule 51    estatuto -> escritura
Rule 52    estatuto -> while
Rule 53    estatuto -> functionCall
Rule 54    asignacion -> varcte ASIGNATION seen_equals expresion seen_final_asignacion SEMICOLON
Rule 55    seen_equals -> <empty>
Rule 56    seen_final_asignacion -> <empty>
Rule 57    expresion -> exp seen_comparacion
Rule 58    expresion -> exp seen_comparacion expresionaux exp seen_comparacion
Rule 59    expresionaux -> GREATERTHAN seen_operador
Rule 60    expresionaux -> LESSTHAN seen_operador
Rule 61    expresionaux -> NOTEQUALS seen_operador
Rule 62    expresionaux -> EQUALS seen_operador
Rule 63    expresionaux -> <empty>
Rule 64    escritura -> PRINT LEFTPARENTHESES escrituraaux RIGHTPARENTHESES SEMICOLON
Rule 65    escrituraaux -> escrituraaux2
Rule 66    escrituraaux -> escrituraaux2 COMMA escrituraaux
Rule 67    escrituraaux2 -> expresion seen_print_cuadruplo
Rule 68    escrituraaux2 -> STRING_CTE seen_print_cuadruplo
Rule 69    seen_print_cuadruplo -> <empty>
Rule 70    exp -> termino seen_termino
Rule 71    exp -> termino seen_termino expaux
Rule 72    expaux -> PLUS seen_operador exp
Rule 73    expaux -> MINUS seen_operador exp
Rule 74    termino -> factor seen_factor
Rule 75    termino -> factor seen_factor terminoaux
Rule 76    terminoaux -> DIVIDE seen_operador termino
Rule 77    terminoaux -> MULTIPLY seen_operador termino
Rule 78    condicion -> IF LEFTPARENTHESES expresion RIGHTPARENTHESES seen_right_parentheses_condicion bloque condicionaux
Rule 79    condicionaux -> ELSE seen_else bloque SEMICOLON seen_end_condicion
Rule 80    condicionaux -> SEMICOLON seen_end_condicion
Rule 81    seen_right_parentheses_condicion -> <empty>
Rule 82    seen_else -> <empty>
Rule 83    seen_end_condicion -> <empty>
Rule 84    factor -> factoraux
Rule 85    factor -> varcte
Rule 86    factoraux -> LEFTPARENTHESES seen_insert_fondo expresion RIGHTPARENTHESES seen_remove_fondo
Rule 87    varcte -> ID seen_ID
Rule 88    varcte -> INT_CTE seen_CTE_INT
Rule 89    varcte -> FLOAT_CTE seen_CTE_FLOAT
Rule 90    seen_CTE_INT -> <empty>
Rule 91    seen_CTE_FLOAT -> <empty>
Rule 92    seen_insert_fondo -> <empty>
Rule 93    seen_remove_fondo -> <empty>
Rule 94    seen_ID -> <empty>
Rule 95    seen_operador -> <empty>
Rule 96    seen_termino -> <empty>
Rule 97    seen_factor -> <empty>
Rule 98    seen_comparacion -> <empty>
Rule 99    while -> WHILE seen_while LEFTPARENTHESES expresion RIGHTPARENTHESES seen_right_parentheses_while bloque SEMICOLON seen_end_while
Rule 100   seen_while -> <empty>
Rule 101   seen_right_parentheses_while -> <empty>
Rule 102   seen_end_while -> <empty>
Rule 103   functionCall -> ID seen_fCall_id LEFTPARENTHESES seen_leftp_fCall paramsFunctionCall seen_end_paramsFCall RIGHTPARENTHESES seen_rightp_fCall SEMICOLON
Rule 104   seen_fCall_id -> <empty>
Rule 105   seen_leftp_fCall -> <empty>
Rule 106   paramsFunctionCall -> expresion seen_parameter_fCall COMMA seen_comma_params_fCall paramsFunctionCall
Rule 107   paramsFunctionCall -> expresion seen_parameter_fCall seen_comma_params_fCall
Rule 108   seen_parameter_fCall -> <empty>
Rule 109   seen_comma_params_fCall -> <empty>
Rule 110   seen_end_paramsFCall -> <empty>
Rule 111   seen_rightp_fCall -> <empty>
Rule 112   empty -> <empty>

Terminals, with rules where they appear

ASIGNATION           : 54
AT                   : 
BOOLEAN              : 25
BOOLEAN_CTE          : 
CALL                 : 
COLON                : 
COMMA                : 7 13 20 39 66 106
DIVIDE               : 76
ELSE                 : 79
EQUALS               : 62
FLOAT                : 24
FLOAT_CTE            : 89
FUNCTION             : 27
GREATERTHAN          : 59
ID                   : 1 10 11 20 27 38 87 103
IF                   : 78
INT                  : 23
INT_CTE              : 12 12 13 13 88
LEFTBRACE            : 42
LEFTBRACKET          : 11
LEFTPARENTHESES      : 30 36 64 78 86 99 103
LESSTHAN             : 60
MAIN                 : 30
MINUS                : 73
MULTIPLY             : 77
NOTEQUAL             : 
NOTEQUALS            : 61
PLUS                 : 72
PRINT                : 64
PROGRAMA             : 1
READ                 : 
RETURN               : 43
RIGHTBRACE           : 42
RIGHTBRACKET         : 11
RIGHTPARENTHESES     : 30 36 64 78 86 99 103
SEMICOLON            : 1 5 43 54 64 79 80 99 103
STRING_CTE           : 68
THREEDOTS            : 
VAR                  : 5
VOID                 : 34
WHILE                : 99
error                : 

Nonterminals, with rules where they appear

arrayDimesionAux     : 11 13
asignacion           : 49
bloque               : 27 30 78 79 99
bloqueaux            : 42 47
calc                 : 0
condicion            : 50
condicionaux         : 78
empty                : 6 40
escritura            : 51
escrituraaux         : 64 66
escrituraaux2        : 65 66
estatuto             : 47
exp                  : 57 58 58 72 73
expaux               : 71
expresion            : 43 54 67 78 86 99 106 107
expresionaux         : 58
factor               : 74 75
factoraux            : 84
function             : 2
functionCall         : 53
functionmain         : 1
idOrArrayDeclaration : 7 8
modulesaux           : 1 2
params               : 27
paramsFunctionCall   : 103 106
paramsaux            : 36 38 39
returnaux            : 42
returnfunctionaux    : 27
seen_CTE_FLOAT       : 89
seen_CTE_INT         : 88
seen_ID              : 87
seen_ID_params       : 38
seen_ID_var          : 10 11 20
seen_comma_params_fCall : 106 107
seen_comparacion     : 57 58 58
seen_else            : 79
seen_end_condicion   : 79 80
seen_end_declaration : 7 8
seen_end_paramsFCall : 103
seen_end_program     : 30
seen_end_while       : 99
seen_equals          : 54
seen_extra_dimension_array : 13
seen_fCall_id        : 103
seen_factor          : 74 75
seen_final_asignacion : 54
seen_function_end    : 27
seen_function_main   : 30
seen_id_function     : 27
seen_insert_fondo    : 86
seen_lBracket_array  : 11
seen_leftp_fCall     : 103
seen_lim_inf         : 12 13
seen_lim_sup         : 12 13
seen_operador        : 59 60 61 62 72 73 76 77
seen_parameter_fCall : 106 107
seen_params_init     : 36
seen_print_cuadruplo : 67 68
seen_program         : 1
seen_rBracket_array  : 11
seen_remove_fondo    : 86
seen_return_function : 43
seen_right_parentheses_condicion : 78
seen_right_parentheses_while : 99
seen_rightp_fCall    : 103
seen_start_bloqueaux : 42
seen_termino         : 70 71
seen_tipo            : 23 24 25
seen_vars            : 5
seen_void            : 34
seen_while           : 99
termino              : 70 71 76 77
terminoaux           : 75
tipo                 : 5 33 38
varcte               : 54 85
vars                 : 1 5 42
varsAuxDeclaration   : 5 7
varsaux              : 20
while                : 52

Parsing method: LALR

state 0

    (0) S' -> . calc
    (1) calc -> . PROGRAMA ID seen_program SEMICOLON vars modulesaux functionmain

    PROGRAMA        shift and go to state 2

    calc                           shift and go to state 1

state 1

    (0) S' -> calc .



state 2

    (1) calc -> PROGRAMA . ID seen_program SEMICOLON vars modulesaux functionmain

    ID              shift and go to state 3


state 3

    (1) calc -> PROGRAMA ID . seen_program SEMICOLON vars modulesaux functionmain
    (4) seen_program -> .

    SEMICOLON       reduce using rule 4 (seen_program -> .)

    seen_program                   shift and go to state 4

state 4

    (1) calc -> PROGRAMA ID seen_program . SEMICOLON vars modulesaux functionmain

    SEMICOLON       shift and go to state 5


state 5

    (1) calc -> PROGRAMA ID seen_program SEMICOLON . vars modulesaux functionmain
    (5) vars -> . VAR seen_vars tipo varsAuxDeclaration SEMICOLON vars
    (6) vars -> . empty
    (112) empty -> .

    VAR             shift and go to state 7
    FUNCTION        reduce using rule 112 (empty -> .)
    MAIN            reduce using rule 112 (empty -> .)

    vars                           shift and go to state 6
    empty                          shift and go to state 8

state 6

    (1) calc -> PROGRAMA ID seen_program SEMICOLON vars . modulesaux functionmain
    (2) modulesaux -> . function modulesaux
    (3) modulesaux -> .
    (27) function -> . FUNCTION returnfunctionaux ID seen_id_function params bloque seen_function_end

    MAIN            reduce using rule 3 (modulesaux -> .)
    FUNCTION        shift and go to state 11

    modulesaux                     shift and go to state 9
    function                       shift and go to state 10

state 7

    (5) vars -> VAR . seen_vars tipo varsAuxDeclaration SEMICOLON vars
    (19) seen_vars -> .

    INT             reduce using rule 19 (seen_vars -> .)
    FLOAT           reduce using rule 19 (seen_vars -> .)
    BOOLEAN         reduce using rule 19 (seen_vars -> .)

    seen_vars                      shift and go to state 12

state 8

    (6) vars -> empty .

    FUNCTION        reduce using rule 6 (vars -> empty .)
    MAIN            reduce using rule 6 (vars -> empty .)
    IF              reduce using rule 6 (vars -> empty .)
    PRINT           reduce using rule 6 (vars -> empty .)
    WHILE           reduce using rule 6 (vars -> empty .)
    ID              reduce using rule 6 (vars -> empty .)
    INT_CTE         reduce using rule 6 (vars -> empty .)
    FLOAT_CTE       reduce using rule 6 (vars -> empty .)
    RETURN          reduce using rule 6 (vars -> empty .)
    RIGHTBRACE      reduce using rule 6 (vars -> empty .)


state 9

    (1) calc -> PROGRAMA ID seen_program SEMICOLON vars modulesaux . functionmain
    (30) functionmain -> . MAIN seen_function_main LEFTPARENTHESES RIGHTPARENTHESES bloque seen_end_program

    MAIN            shift and go to state 14

    functionmain                   shift and go to state 13

state 10

    (2) modulesaux -> function . modulesaux
    (2) modulesaux -> . function modulesaux
    (3) modulesaux -> .
    (27) function -> . FUNCTION returnfunctionaux ID seen_id_function params bloque seen_function_end

    MAIN            reduce using rule 3 (modulesaux -> .)
    FUNCTION        shift and go to state 11

    function                       shift and go to state 10
    modulesaux                     shift and go to state 15

state 11

    (27) function -> FUNCTION . returnfunctionaux ID seen_id_function params bloque seen_function_end
    (33) returnfunctionaux -> . tipo
    (34) returnfunctionaux -> . VOID seen_void
    (23) tipo -> . INT seen_tipo
    (24) tipo -> . FLOAT seen_tipo
    (25) tipo -> . BOOLEAN seen_tipo

    VOID            shift and go to state 18
    INT             shift and go to state 19
    FLOAT           shift and go to state 20
    BOOLEAN         shift and go to state 21

    returnfunctionaux              shift and go to state 16
    tipo                           shift and go to state 17

state 12

    (5) vars -> VAR seen_vars . tipo varsAuxDeclaration SEMICOLON vars
    (23) tipo -> . INT seen_tipo
    (24) tipo -> . FLOAT seen_tipo
    (25) tipo -> . BOOLEAN seen_tipo

    INT             shift and go to state 19
    FLOAT           shift and go to state 20
    BOOLEAN         shift and go to state 21

    tipo                           shift and go to state 22

state 13

    (1) calc -> PROGRAMA ID seen_program SEMICOLON vars modulesaux functionmain .

    $end            reduce using rule 1 (calc -> PROGRAMA ID seen_program SEMICOLON vars modulesaux functionmain .)


state 14

    (30) functionmain -> MAIN . seen_function_main LEFTPARENTHESES RIGHTPARENTHESES bloque seen_end_program
    (32) seen_function_main -> .

    LEFTPARENTHESES reduce using rule 32 (seen_function_main -> .)

    seen_function_main             shift and go to state 23

state 15

    (2) modulesaux -> function modulesaux .

    MAIN            reduce using rule 2 (modulesaux -> function modulesaux .)


state 16

    (27) function -> FUNCTION returnfunctionaux . ID seen_id_function params bloque seen_function_end

    ID              shift and go to state 24


state 17

    (33) returnfunctionaux -> tipo .

    ID              reduce using rule 33 (returnfunctionaux -> tipo .)


state 18

    (34) returnfunctionaux -> VOID . seen_void
    (35) seen_void -> .

    ID              reduce using rule 35 (seen_void -> .)

    seen_void                      shift and go to state 25

state 19

    (23) tipo -> INT . seen_tipo
    (26) seen_tipo -> .

    ID              reduce using rule 26 (seen_tipo -> .)

    seen_tipo                      shift and go to state 26

state 20

    (24) tipo -> FLOAT . seen_tipo
    (26) seen_tipo -> .

    ID              reduce using rule 26 (seen_tipo -> .)

    seen_tipo                      shift and go to state 27

state 21

    (25) tipo -> BOOLEAN . seen_tipo
    (26) seen_tipo -> .

    ID              reduce using rule 26 (seen_tipo -> .)

    seen_tipo                      shift and go to state 28

state 22

    (5) vars -> VAR seen_vars tipo . varsAuxDeclaration SEMICOLON vars
    (7) varsAuxDeclaration -> . idOrArrayDeclaration seen_end_declaration COMMA varsAuxDeclaration
    (8) varsAuxDeclaration -> . idOrArrayDeclaration seen_end_declaration
    (10) idOrArrayDeclaration -> . ID seen_ID_var
    (11) idOrArrayDeclaration -> . ID seen_ID_var LEFTBRACKET seen_lBracket_array arrayDimesionAux RIGHTBRACKET seen_rBracket_array

    ID              shift and go to state 31

    varsAuxDeclaration             shift and go to state 29
    idOrArrayDeclaration           shift and go to state 30

state 23

    (30) functionmain -> MAIN seen_function_main . LEFTPARENTHESES RIGHTPARENTHESES bloque seen_end_program

    LEFTPARENTHESES shift and go to state 32


state 24

    (27) function -> FUNCTION returnfunctionaux ID . seen_id_function params bloque seen_function_end
    (28) seen_id_function -> .

    LEFTPARENTHESES reduce using rule 28 (seen_id_function -> .)

    seen_id_function               shift and go to state 33

state 25

    (34) returnfunctionaux -> VOID seen_void .

    ID              reduce using rule 34 (returnfunctionaux -> VOID seen_void .)


state 26

    (23) tipo -> INT seen_tipo .

    ID              reduce using rule 23 (tipo -> INT seen_tipo .)


state 27

    (24) tipo -> FLOAT seen_tipo .

    ID              reduce using rule 24 (tipo -> FLOAT seen_tipo .)


state 28

    (25) tipo -> BOOLEAN seen_tipo .

    ID              reduce using rule 25 (tipo -> BOOLEAN seen_tipo .)


state 29

    (5) vars -> VAR seen_vars tipo varsAuxDeclaration . SEMICOLON vars

    SEMICOLON       shift and go to state 34


state 30

    (7) varsAuxDeclaration -> idOrArrayDeclaration . seen_end_declaration COMMA varsAuxDeclaration
    (8) varsAuxDeclaration -> idOrArrayDeclaration . seen_end_declaration
    (9) seen_end_declaration -> .

    COMMA           reduce using rule 9 (seen_end_declaration -> .)
    SEMICOLON       reduce using rule 9 (seen_end_declaration -> .)

    seen_end_declaration           shift and go to state 35

state 31

    (10) idOrArrayDeclaration -> ID . seen_ID_var
    (11) idOrArrayDeclaration -> ID . seen_ID_var LEFTBRACKET seen_lBracket_array arrayDimesionAux RIGHTBRACKET seen_rBracket_array
    (22) seen_ID_var -> .

    LEFTBRACKET     reduce using rule 22 (seen_ID_var -> .)
    COMMA           reduce using rule 22 (seen_ID_var -> .)
    SEMICOLON       reduce using rule 22 (seen_ID_var -> .)

    seen_ID_var                    shift and go to state 36

state 32

    (30) functionmain -> MAIN seen_function_main LEFTPARENTHESES . RIGHTPARENTHESES bloque seen_end_program

    RIGHTPARENTHESES shift and go to state 37


state 33

    (27) function -> FUNCTION returnfunctionaux ID seen_id_function . params bloque seen_function_end
    (36) params -> . LEFTPARENTHESES seen_params_init paramsaux RIGHTPARENTHESES

    LEFTPARENTHESES shift and go to state 39

    params                         shift and go to state 38

state 34

    (5) vars -> VAR seen_vars tipo varsAuxDeclaration SEMICOLON . vars
    (5) vars -> . VAR seen_vars tipo varsAuxDeclaration SEMICOLON vars
    (6) vars -> . empty
    (112) empty -> .

    VAR             shift and go to state 7
    FUNCTION        reduce using rule 112 (empty -> .)
    MAIN            reduce using rule 112 (empty -> .)
    IF              reduce using rule 112 (empty -> .)
    PRINT           reduce using rule 112 (empty -> .)
    WHILE           reduce using rule 112 (empty -> .)
    ID              reduce using rule 112 (empty -> .)
    INT_CTE         reduce using rule 112 (empty -> .)
    FLOAT_CTE       reduce using rule 112 (empty -> .)
    RETURN          reduce using rule 112 (empty -> .)
    RIGHTBRACE      reduce using rule 112 (empty -> .)

    vars                           shift and go to state 40
    empty                          shift and go to state 8

state 35

    (7) varsAuxDeclaration -> idOrArrayDeclaration seen_end_declaration . COMMA varsAuxDeclaration
    (8) varsAuxDeclaration -> idOrArrayDeclaration seen_end_declaration .

    COMMA           shift and go to state 41
    SEMICOLON       reduce using rule 8 (varsAuxDeclaration -> idOrArrayDeclaration seen_end_declaration .)


state 36

    (10) idOrArrayDeclaration -> ID seen_ID_var .
    (11) idOrArrayDeclaration -> ID seen_ID_var . LEFTBRACKET seen_lBracket_array arrayDimesionAux RIGHTBRACKET seen_rBracket_array

    COMMA           reduce using rule 10 (idOrArrayDeclaration -> ID seen_ID_var .)
    SEMICOLON       reduce using rule 10 (idOrArrayDeclaration -> ID seen_ID_var .)
    LEFTBRACKET     shift and go to state 42


state 37

    (30) functionmain -> MAIN seen_function_main LEFTPARENTHESES RIGHTPARENTHESES . bloque seen_end_program
    (42) bloque -> . LEFTBRACE seen_start_bloqueaux vars bloqueaux returnaux RIGHTBRACE

    LEFTBRACE       shift and go to state 44

    bloque                         shift and go to state 43

state 38

    (27) function -> FUNCTION returnfunctionaux ID seen_id_function params . bloque seen_function_end
    (42) bloque -> . LEFTBRACE seen_start_bloqueaux vars bloqueaux returnaux RIGHTBRACE

    LEFTBRACE       shift and go to state 44

    bloque                         shift and go to state 45

state 39

    (36) params -> LEFTPARENTHESES . seen_params_init paramsaux RIGHTPARENTHESES
    (37) seen_params_init -> .

    COMMA           reduce using rule 37 (seen_params_init -> .)
    INT             reduce using rule 37 (seen_params_init -> .)
    FLOAT           reduce using rule 37 (seen_params_init -> .)
    BOOLEAN         reduce using rule 37 (seen_params_init -> .)
    RIGHTPARENTHESES reduce using rule 37 (seen_params_init -> .)

    seen_params_init               shift and go to state 46

state 40

    (5) vars -> VAR seen_vars tipo varsAuxDeclaration SEMICOLON vars .

    FUNCTION        reduce using rule 5 (vars -> VAR seen_vars tipo varsAuxDeclaration SEMICOLON vars .)
    MAIN            reduce using rule 5 (vars -> VAR seen_vars tipo varsAuxDeclaration SEMICOLON vars .)
    IF              reduce using rule 5 (vars -> VAR seen_vars tipo varsAuxDeclaration SEMICOLON vars .)
    PRINT           reduce using rule 5 (vars -> VAR seen_vars tipo varsAuxDeclaration SEMICOLON vars .)
    WHILE           reduce using rule 5 (vars -> VAR seen_vars tipo varsAuxDeclaration SEMICOLON vars .)
    ID              reduce using rule 5 (vars -> VAR seen_vars tipo varsAuxDeclaration SEMICOLON vars .)
    INT_CTE         reduce using rule 5 (vars -> VAR seen_vars tipo varsAuxDeclaration SEMICOLON vars .)
    FLOAT_CTE       reduce using rule 5 (vars -> VAR seen_vars tipo varsAuxDeclaration SEMICOLON vars .)
    RETURN          reduce using rule 5 (vars -> VAR seen_vars tipo varsAuxDeclaration SEMICOLON vars .)
    RIGHTBRACE      reduce using rule 5 (vars -> VAR seen_vars tipo varsAuxDeclaration SEMICOLON vars .)


state 41

    (7) varsAuxDeclaration -> idOrArrayDeclaration seen_end_declaration COMMA . varsAuxDeclaration
    (7) varsAuxDeclaration -> . idOrArrayDeclaration seen_end_declaration COMMA varsAuxDeclaration
    (8) varsAuxDeclaration -> . idOrArrayDeclaration seen_end_declaration
    (10) idOrArrayDeclaration -> . ID seen_ID_var
    (11) idOrArrayDeclaration -> . ID seen_ID_var LEFTBRACKET seen_lBracket_array arrayDimesionAux RIGHTBRACKET seen_rBracket_array

    ID              shift and go to state 31

    idOrArrayDeclaration           shift and go to state 30
    varsAuxDeclaration             shift and go to state 47

state 42

    (11) idOrArrayDeclaration -> ID seen_ID_var LEFTBRACKET . seen_lBracket_array arrayDimesionAux RIGHTBRACKET seen_rBracket_array
    (17) seen_lBracket_array -> .

    INT_CTE         reduce using rule 17 (seen_lBracket_array -> .)

    seen_lBracket_array            shift and go to state 48

state 43

    (30) functionmain -> MAIN seen_function_main LEFTPARENTHESES RIGHTPARENTHESES bloque . seen_end_program
    (31) seen_end_program -> .

    $end            reduce using rule 31 (seen_end_program -> .)

    seen_end_program               shift and go to state 49

state 44

    (42) bloque -> LEFTBRACE . seen_start_bloqueaux vars bloqueaux returnaux RIGHTBRACE
    (46) seen_start_bloqueaux -> .

    VAR             reduce using rule 46 (seen_start_bloqueaux -> .)
    IF              reduce using rule 46 (seen_start_bloqueaux -> .)
    PRINT           reduce using rule 46 (seen_start_bloqueaux -> .)
    WHILE           reduce using rule 46 (seen_start_bloqueaux -> .)
    ID              reduce using rule 46 (seen_start_bloqueaux -> .)
    INT_CTE         reduce using rule 46 (seen_start_bloqueaux -> .)
    FLOAT_CTE       reduce using rule 46 (seen_start_bloqueaux -> .)
    RETURN          reduce using rule 46 (seen_start_bloqueaux -> .)
    RIGHTBRACE      reduce using rule 46 (seen_start_bloqueaux -> .)

    seen_start_bloqueaux           shift and go to state 50

state 45

    (27) function -> FUNCTION returnfunctionaux ID seen_id_function params bloque . seen_function_end
    (29) seen_function_end -> .

    FUNCTION        reduce using rule 29 (seen_function_end -> .)
    MAIN            reduce using rule 29 (seen_function_end -> .)

    seen_function_end              shift and go to state 51

state 46

    (36) params -> LEFTPARENTHESES seen_params_init . paramsaux RIGHTPARENTHESES
    (38) paramsaux -> . tipo ID seen_ID_params paramsaux
    (39) paramsaux -> . COMMA paramsaux
    (40) paramsaux -> . empty
    (23) tipo -> . INT seen_tipo
    (24) tipo -> . FLOAT seen_tipo
    (25) tipo -> . BOOLEAN seen_tipo
    (112) empty -> .

    COMMA           shift and go to state 54
    INT             shift and go to state 19
    FLOAT           shift and go to state 20
    BOOLEAN         shift and go to state 21
    RIGHTPARENTHESES reduce using rule 112 (empty -> .)

    paramsaux                      shift and go to state 52
    tipo                           shift and go to state 53
    empty                          shift and go to state 55

state 47

    (7) varsAuxDeclaration -> idOrArrayDeclaration seen_end_declaration COMMA varsAuxDeclaration .

    SEMICOLON       reduce using rule 7 (varsAuxDeclaration -> idOrArrayDeclaration seen_end_declaration COMMA varsAuxDeclaration .)


state 48

    (11) idOrArrayDeclaration -> ID seen_ID_var LEFTBRACKET seen_lBracket_array . arrayDimesionAux RIGHTBRACKET seen_rBracket_array
    (12) arrayDimesionAux -> . INT_CTE seen_lim_inf INT_CTE seen_lim_sup
    (13) arrayDimesionAux -> . INT_CTE seen_lim_inf INT_CTE seen_lim_sup COMMA seen_extra_dimension_array arrayDimesionAux

    INT_CTE         shift and go to state 57

    arrayDimesionAux               shift and go to state 56

state 49

    (30) functionmain -> MAIN seen_function_main LEFTPARENTHESES RIGHTPARENTHESES bloque seen_end_program .

    $end            reduce using rule 30 (functionmain -> MAIN seen_function_main LEFTPARENTHESES RIGHTPARENTHESES bloque seen_end_program .)


state 50

    (42) bloque -> LEFTBRACE seen_start_bloqueaux . vars bloqueaux returnaux RIGHTBRACE
    (5) vars -> . VAR seen_vars tipo varsAuxDeclaration SEMICOLON vars
    (6) vars -> . empty
    (112) empty -> .

    VAR             shift and go to state 7
    IF              reduce using rule 112 (empty -> .)
    PRINT           reduce using rule 112 (empty -> .)
    WHILE           reduce using rule 112 (empty -> .)
    ID              reduce using rule 112 (empty -> .)
    INT_CTE         reduce using rule 112 (empty -> .)
    FLOAT_CTE       reduce using rule 112 (empty -> .)
    RETURN          reduce using rule 112 (empty -> .)
    RIGHTBRACE      reduce using rule 112 (empty -> .)

    vars                           shift and go to state 58
    empty                          shift and go to state 8

state 51

    (27) function -> FUNCTION returnfunctionaux ID seen_id_function params bloque seen_function_end .

    FUNCTION        reduce using rule 27 (function -> FUNCTION returnfunctionaux ID seen_id_function params bloque seen_function_end .)
    MAIN            reduce using rule 27 (function -> FUNCTION returnfunctionaux ID seen_id_function params bloque seen_function_end .)


state 52

    (36) params -> LEFTPARENTHESES seen_params_init paramsaux . RIGHTPARENTHESES

    RIGHTPARENTHESES shift and go to state 59


state 53

    (38) paramsaux -> tipo . ID seen_ID_params paramsaux

    ID              shift and go to state 60


state 54

    (39) paramsaux -> COMMA . paramsaux
    (38) paramsaux -> . tipo ID seen_ID_params paramsaux
    (39) paramsaux -> . COMMA paramsaux
    (40) paramsaux -> . empty
    (23) tipo -> . INT seen_tipo
    (24) tipo -> . FLOAT seen_tipo
    (25) tipo -> . BOOLEAN seen_tipo
    (112) empty -> .

    COMMA           shift and go to state 54
    INT             shift and go to state 19
    FLOAT           shift and go to state 20
    BOOLEAN         shift and go to state 21
    RIGHTPARENTHESES reduce using rule 112 (empty -> .)

    paramsaux                      shift and go to state 61
    tipo                           shift and go to state 53
    empty                          shift and go to state 55

state 55

    (40) paramsaux -> empty .

    RIGHTPARENTHESES reduce using rule 40 (paramsaux -> empty .)


state 56

    (11) idOrArrayDeclaration -> ID seen_ID_var LEFTBRACKET seen_lBracket_array arrayDimesionAux . RIGHTBRACKET seen_rBracket_array

    RIGHTBRACKET    shift and go to state 62


state 57

    (12) arrayDimesionAux -> INT_CTE . seen_lim_inf INT_CTE seen_lim_sup
    (13) arrayDimesionAux -> INT_CTE . seen_lim_inf INT_CTE seen_lim_sup COMMA seen_extra_dimension_array arrayDimesionAux
    (15) seen_lim_inf -> .

    INT_CTE         reduce using rule 15 (seen_lim_inf -> .)

    seen_lim_inf                   shift and go to state 63

state 58

    (42) bloque -> LEFTBRACE seen_start_bloqueaux vars . bloqueaux returnaux RIGHTBRACE
    (47) bloqueaux -> . estatuto bloqueaux
    (48) bloqueaux -> .
    (49) estatuto -> . asignacion
    (50) estatuto -> . condicion
    (51) estatuto -> . escritura
    (52) estatuto -> . while
    (53) estatuto -> . functionCall
    (54) asignacion -> . varcte ASIGNATION seen_equals expresion seen_final_asignacion SEMICOLON
    (78) condicion -> . IF LEFTPARENTHESES expresion RIGHTPARENTHESES seen_right_parentheses_condicion bloque condicionaux
    (64) escritura -> . PRINT LEFTPARENTHESES escrituraaux RIGHTPARENTHESES SEMICOLON
    (99) while -> . WHILE seen_while LEFTPARENTHESES expresion RIGHTPARENTHESES seen_right_parentheses_while bloque SEMICOLON seen_end_while
    (103) functionCall -> . ID seen_fCall_id LEFTPARENTHESES seen_leftp_fCall paramsFunctionCall seen_end_paramsFCall RIGHTPARENTHESES seen_rightp_fCall SEMICOLON
    (87) varcte -> . ID seen_ID
    (88) varcte -> . INT_CTE seen_CTE_INT
    (89) varcte -> . FLOAT_CTE seen_CTE_FLOAT

    RETURN          reduce using rule 48 (bloqueaux -> .)
    RIGHTBRACE      reduce using rule 48 (bloqueaux -> .)
    IF              shift and go to state 72
    PRINT           shift and go to state 73
    WHILE           shift and go to state 74
    ID              shift and go to state 75
    INT_CTE         shift and go to state 76
    FLOAT_CTE       shift and go to state 77

    bloqueaux                      shift and go to state 64
    estatuto                       shift and go to state 65
    asignacion                     shift and go to state 66
    condicion                      shift and go to state 67
    escritura                      shift and go to state 68
    while                          shift and go to state 69
    functionCall                   shift and go to state 70
    varcte                         shift and go to state 71

state 59

    (36) params -> LEFTPARENTHESES seen_params_init paramsaux RIGHTPARENTHESES .

    LEFTBRACE       reduce using rule 36 (params -> LEFTPARENTHESES seen_params_init paramsaux RIGHTPARENTHESES .)


state 60

    (38) paramsaux -> tipo ID . seen_ID_params paramsaux
    (41) seen_ID_params -> .

    COMMA           reduce using rule 41 (seen_ID_params -> .)
    INT             reduce using rule 41 (seen_ID_params -> .)
    FLOAT           reduce using rule 41 (seen_ID_params -> .)
    BOOLEAN         reduce using rule 41 (seen_ID_params -> .)
    RIGHTPARENTHESES reduce using rule 41 (seen_ID_params -> .)

    seen_ID_params                 shift and go to state 78

state 61

    (39) paramsaux -> COMMA paramsaux .

    RIGHTPARENTHESES reduce using rule 39 (paramsaux -> COMMA paramsaux .)


state 62

    (11) idOrArrayDeclaration -> ID seen_ID_var LEFTBRACKET seen_lBracket_array arrayDimesionAux RIGHTBRACKET . seen_rBracket_array
    (18) seen_rBracket_array -> .

    COMMA           reduce using rule 18 (seen_rBracket_array -> .)
    SEMICOLON       reduce using rule 18 (seen_rBracket_array -> .)

    seen_rBracket_array            shift and go to state 79

state 63

    (12) arrayDimesionAux -> INT_CTE seen_lim_inf . INT_CTE seen_lim_sup
    (13) arrayDimesionAux -> INT_CTE seen_lim_inf . INT_CTE seen_lim_sup COMMA seen_extra_dimension_array arrayDimesionAux

    INT_CTE         shift and go to state 80


state 64

    (42) bloque -> LEFTBRACE seen_start_bloqueaux vars bloqueaux . returnaux RIGHTBRACE
    (43) returnaux -> . RETURN expresion seen_return_function SEMICOLON
    (44) returnaux -> .

    RETURN          shift and go to state 82
    RIGHTBRACE      reduce using rule 44 (returnaux -> .)

    returnaux                      shift and go to state 81

state 65

    (47) bloqueaux -> estatuto . bloqueaux
    (47) bloqueaux -> . estatuto bloqueaux
    (48) bloqueaux -> .
    (49) estatuto -> . asignacion
    (50) estatuto -> . condicion
    (51) estatuto -> . escritura
    (52) estatuto -> . while
    (53) estatuto -> . functionCall
    (54) asignacion -> . varcte ASIGNATION seen_equals expresion seen_final_asignacion SEMICOLON
    (78) condicion -> . IF LEFTPARENTHESES expresion RIGHTPARENTHESES seen_right_parentheses_condicion bloque condicionaux
    (64) escritura -> . PRINT LEFTPARENTHESES escrituraaux RIGHTPARENTHESES SEMICOLON
    (99) while -> . WHILE seen_while LEFTPARENTHESES expresion RIGHTPARENTHESES seen_right_parentheses_while bloque SEMICOLON seen_end_while
    (103) functionCall -> . ID seen_fCall_id LEFTPARENTHESES seen_leftp_fCall paramsFunctionCall seen_end_paramsFCall RIGHTPARENTHESES seen_rightp_fCall SEMICOLON
    (87) varcte -> . ID seen_ID
    (88) varcte -> . INT_CTE seen_CTE_INT
    (89) varcte -> . FLOAT_CTE seen_CTE_FLOAT

    RETURN          reduce using rule 48 (bloqueaux -> .)
    RIGHTBRACE      reduce using rule 48 (bloqueaux -> .)
    IF              shift and go to state 72
    PRINT           shift and go to state 73
    WHILE           shift and go to state 74
    ID              shift and go to state 75
    INT_CTE         shift and go to state 76
    FLOAT_CTE       shift and go to state 77

    estatuto                       shift and go to state 65
    bloqueaux                      shift and go to state 83
    asignacion                     shift and go to state 66
    condicion                      shift and go to state 67
    escritura                      shift and go to state 68
    while                          shift and go to state 69
    functionCall                   shift and go to state 70
    varcte                         shift and go to state 71

state 66

    (49) estatuto -> asignacion .

    IF              reduce using rule 49 (estatuto -> asignacion .)
    PRINT           reduce using rule 49 (estatuto -> asignacion .)
    WHILE           reduce using rule 49 (estatuto -> asignacion .)
    ID              reduce using rule 49 (estatuto -> asignacion .)
    INT_CTE         reduce using rule 49 (estatuto -> asignacion .)
    FLOAT_CTE       reduce using rule 49 (estatuto -> asignacion .)
    RETURN          reduce using rule 49 (estatuto -> asignacion .)
    RIGHTBRACE      reduce using rule 49 (estatuto -> asignacion .)


state 67

    (50) estatuto -> condicion .

    IF              reduce using rule 50 (estatuto -> condicion .)
    PRINT           reduce using rule 50 (estatuto -> condicion .)
    WHILE           reduce using rule 50 (estatuto -> condicion .)
    ID              reduce using rule 50 (estatuto -> condicion .)
    INT_CTE         reduce using rule 50 (estatuto -> condicion .)
    FLOAT_CTE       reduce using rule 50 (estatuto -> condicion .)
    RETURN          reduce using rule 50 (estatuto -> condicion .)
    RIGHTBRACE      reduce using rule 50 (estatuto -> condicion .)


state 68

    (51) estatuto -> escritura .

    IF              reduce using rule 51 (estatuto -> escritura .)
    PRINT           reduce using rule 51 (estatuto -> escritura .)
    WHILE           reduce using rule 51 (estatuto -> escritura .)
    ID              reduce using rule 51 (estatuto -> escritura .)
    INT_CTE         reduce using rule 51 (estatuto -> escritura .)
    FLOAT_CTE       reduce using rule 51 (estatuto -> escritura .)
    RETURN          reduce using rule 51 (estatuto -> escritura .)
    RIGHTBRACE      reduce using rule 51 (estatuto -> escritura .)


state 69

    (52) estatuto -> while .

    IF              reduce using rule 52 (estatuto -> while .)
    PRINT           reduce using rule 52 (estatuto -> while .)
    WHILE           reduce using rule 52 (estatuto -> while .)
    ID              reduce using rule 52 (estatuto -> while .)
    INT_CTE         reduce using rule 52 (estatuto -> while .)
    FLOAT_CTE       reduce using rule 52 (estatuto -> while .)
    RETURN          reduce using rule 52 (estatuto -> while .)
    RIGHTBRACE      reduce using rule 52 (estatuto -> while .)


state 70

    (53) estatuto -> functionCall .

    IF              reduce using rule 53 (estatuto -> functionCall .)
    PRINT           reduce using rule 53 (estatuto -> functionCall .)
    WHILE           reduce using rule 53 (estatuto -> functionCall .)
    ID              reduce using rule 53 (estatuto -> functionCall .)
    INT_CTE         reduce using rule 53 (estatuto -> functionCall .)
    FLOAT_CTE       reduce using rule 53 (estatuto -> functionCall .)
    RETURN          reduce using rule 53 (estatuto -> functionCall .)
    RIGHTBRACE      reduce using rule 53 (estatuto -> functionCall .)


state 71

    (54) asignacion -> varcte . ASIGNATION seen_equals expresion seen_final_asignacion SEMICOLON

    ASIGNATION      shift and go to state 84


state 72

    (78) condicion -> IF . LEFTPARENTHESES expresion RIGHTPARENTHESES seen_right_parentheses_condicion bloque condicionaux

    LEFTPARENTHESES shift and go to state 85


state 73

    (64) escritura -> PRINT . LEFTPARENTHESES escrituraaux RIGHTPARENTHESES SEMICOLON

    LEFTPARENTHESES shift and go to state 86


state 74

    (99) while -> WHILE . seen_while LEFTPARENTHESES expresion RIGHTPARENTHESES seen_right_parentheses_while bloque SEMICOLON seen_end_while
    (100) seen_while -> .

    LEFTPARENTHESES reduce using rule 100 (seen_while -> .)

    seen_while                     shift and go to state 87

state 75

    (103) functionCall -> ID . seen_fCall_id LEFTPARENTHESES seen_leftp_fCall paramsFunctionCall seen_end_paramsFCall RIGHTPARENTHESES seen_rightp_fCall SEMICOLON
    (87) varcte -> ID . seen_ID
    (104) seen_fCall_id -> .
    (94) seen_ID -> .

    LEFTPARENTHESES reduce using rule 104 (seen_fCall_id -> .)
    ASIGNATION      reduce using rule 94 (seen_ID -> .)

    seen_fCall_id                  shift and go to state 88
    seen_ID                        shift and go to state 89

state 76

    (88) varcte -> INT_CTE . seen_CTE_INT
    (90) seen_CTE_INT -> .

    ASIGNATION      reduce using rule 90 (seen_CTE_INT -> .)
    DIVIDE          reduce using rule 90 (seen_CTE_INT -> .)
    MULTIPLY        reduce using rule 90 (seen_CTE_INT -> .)
    PLUS            reduce using rule 90 (seen_CTE_INT -> .)
    MINUS           reduce using rule 90 (seen_CTE_INT -> .)
    GREATERTHAN     reduce using rule 90 (seen_CTE_INT -> .)
    LESSTHAN        reduce using rule 90 (seen_CTE_INT -> .)
    NOTEQUALS       reduce using rule 90 (seen_CTE_INT -> .)
    EQUALS          reduce using rule 90 (seen_CTE_INT -> .)
    LEFTPARENTHESES reduce using rule 90 (seen_CTE_INT -> .)
    ID              reduce using rule 90 (seen_CTE_INT -> .)
    INT_CTE         reduce using rule 90 (seen_CTE_INT -> .)
    FLOAT_CTE       reduce using rule 90 (seen_CTE_INT -> .)
    SEMICOLON       reduce using rule 90 (seen_CTE_INT -> .)
    RIGHTPARENTHESES reduce using rule 90 (seen_CTE_INT -> .)
    COMMA           reduce using rule 90 (seen_CTE_INT -> .)

    seen_CTE_INT                   shift and go to state 90

state 77

    (89) varcte -> FLOAT_CTE . seen_CTE_FLOAT
    (91) seen_CTE_FLOAT -> .

    ASIGNATION      reduce using rule 91 (seen_CTE_FLOAT -> .)
    DIVIDE          reduce using rule 91 (seen_CTE_FLOAT -> .)
    MULTIPLY        reduce using rule 91 (seen_CTE_FLOAT -> .)
    PLUS            reduce using rule 91 (seen_CTE_FLOAT -> .)
    MINUS           reduce using rule 91 (seen_CTE_FLOAT -> .)
    GREATERTHAN     reduce using rule 91 (seen_CTE_FLOAT -> .)
    LESSTHAN        reduce using rule 91 (seen_CTE_FLOAT -> .)
    NOTEQUALS       reduce using rule 91 (seen_CTE_FLOAT -> .)
    EQUALS          reduce using rule 91 (seen_CTE_FLOAT -> .)
    LEFTPARENTHESES reduce using rule 91 (seen_CTE_FLOAT -> .)
    ID              reduce using rule 91 (seen_CTE_FLOAT -> .)
    INT_CTE         reduce using rule 91 (seen_CTE_FLOAT -> .)
    FLOAT_CTE       reduce using rule 91 (seen_CTE_FLOAT -> .)
    SEMICOLON       reduce using rule 91 (seen_CTE_FLOAT -> .)
    RIGHTPARENTHESES reduce using rule 91 (seen_CTE_FLOAT -> .)
    COMMA           reduce using rule 91 (seen_CTE_FLOAT -> .)

    seen_CTE_FLOAT                 shift and go to state 91

state 78

    (38) paramsaux -> tipo ID seen_ID_params . paramsaux
    (38) paramsaux -> . tipo ID seen_ID_params paramsaux
    (39) paramsaux -> . COMMA paramsaux
    (40) paramsaux -> . empty
    (23) tipo -> . INT seen_tipo
    (24) tipo -> . FLOAT seen_tipo
    (25) tipo -> . BOOLEAN seen_tipo
    (112) empty -> .

    COMMA           shift and go to state 54
    INT             shift and go to state 19
    FLOAT           shift and go to state 20
    BOOLEAN         shift and go to state 21
    RIGHTPARENTHESES reduce using rule 112 (empty -> .)

    tipo                           shift and go to state 53
    paramsaux                      shift and go to state 92
    empty                          shift and go to state 55

state 79

    (11) idOrArrayDeclaration -> ID seen_ID_var LEFTBRACKET seen_lBracket_array arrayDimesionAux RIGHTBRACKET seen_rBracket_array .

    COMMA           reduce using rule 11 (idOrArrayDeclaration -> ID seen_ID_var LEFTBRACKET seen_lBracket_array arrayDimesionAux RIGHTBRACKET seen_rBracket_array .)
    SEMICOLON       reduce using rule 11 (idOrArrayDeclaration -> ID seen_ID_var LEFTBRACKET seen_lBracket_array arrayDimesionAux RIGHTBRACKET seen_rBracket_array .)


state 80

    (12) arrayDimesionAux -> INT_CTE seen_lim_inf INT_CTE . seen_lim_sup
    (13) arrayDimesionAux -> INT_CTE seen_lim_inf INT_CTE . seen_lim_sup COMMA seen_extra_dimension_array arrayDimesionAux
    (16) seen_lim_sup -> .

    COMMA           reduce using rule 16 (seen_lim_sup -> .)
    RIGHTBRACKET    reduce using rule 16 (seen_lim_sup -> .)

    seen_lim_sup                   shift and go to state 93

state 81

    (42) bloque -> LEFTBRACE seen_start_bloqueaux vars bloqueaux returnaux . RIGHTBRACE

    RIGHTBRACE      shift and go to state 94


state 82

    (43) returnaux -> RETURN . expresion seen_return_function SEMICOLON
    (57) expresion -> . exp seen_comparacion
    (58) expresion -> . exp seen_comparacion expresionaux exp seen_comparacion
    (70) exp -> . termino seen_termino
    (71) exp -> . termino seen_termino expaux
    (74) termino -> . factor seen_factor
    (75) termino -> . factor seen_factor terminoaux
    (84) factor -> . factoraux
    (85) factor -> . varcte
    (86) factoraux -> . LEFTPARENTHESES seen_insert_fondo expresion RIGHTPARENTHESES seen_remove_fondo
    (87) varcte -> . ID seen_ID
    (88) varcte -> . INT_CTE seen_CTE_INT
    (89) varcte -> . FLOAT_CTE seen_CTE_FLOAT

    LEFTPARENTHESES shift and go to state 101
    ID              shift and go to state 102
    INT_CTE         shift and go to state 76
    FLOAT_CTE       shift and go to state 77

    expresion                      shift and go to state 95
    exp                            shift and go to state 96
    termino                        shift and go to state 97
    factor                         shift and go to state 98
    factoraux                      shift and go to state 99
    varcte                         shift and go to state 100

state 83

    (47) bloqueaux -> estatuto bloqueaux .

    RETURN          reduce using rule 47 (bloqueaux -> estatuto bloqueaux .)
    RIGHTBRACE      reduce using rule 47 (bloqueaux -> estatuto bloqueaux .)


state 84

    (54) asignacion -> varcte ASIGNATION . seen_equals expresion seen_final_asignacion SEMICOLON
    (55) seen_equals -> .

    LEFTPARENTHESES reduce using rule 55 (seen_equals -> .)
    ID              reduce using rule 55 (seen_equals -> .)
    INT_CTE         reduce using rule 55 (seen_equals -> .)
    FLOAT_CTE       reduce using rule 55 (seen_equals -> .)

    seen_equals                    shift and go to state 103

state 85

    (78) condicion -> IF LEFTPARENTHESES . expresion RIGHTPARENTHESES seen_right_parentheses_condicion bloque condicionaux
    (57) expresion -> . exp seen_comparacion
    (58) expresion -> . exp seen_comparacion expresionaux exp seen_comparacion
    (70) exp -> . termino seen_termino
    (71) exp -> . termino seen_termino expaux
    (74) termino -> . factor seen_factor
    (75) termino -> . factor seen_factor terminoaux
    (84) factor -> . factoraux
    (85) factor -> . varcte
    (86) factoraux -> . LEFTPARENTHESES seen_insert_fondo expresion RIGHTPARENTHESES seen_remove_fondo
    (87) varcte -> . ID seen_ID
    (88) varcte -> . INT_CTE seen_CTE_INT
    (89) varcte -> . FLOAT_CTE seen_CTE_FLOAT

    LEFTPARENTHESES shift and go to state 101
    ID              shift and go to state 102
    INT_CTE         shift and go to state 76
    FLOAT_CTE       shift and go to state 77

    expresion                      shift and go to state 104
    exp                            shift and go to state 96
    termino                        shift and go to state 97
    factor                         shift and go to state 98
    factoraux                      shift and go to state 99
    varcte                         shift and go to state 100

state 86

    (64) escritura -> PRINT LEFTPARENTHESES . escrituraaux RIGHTPARENTHESES SEMICOLON
    (65) escrituraaux -> . escrituraaux2
    (66) escrituraaux -> . escrituraaux2 COMMA escrituraaux
    (67) escrituraaux2 -> . expresion seen_print_cuadruplo
    (68) escrituraaux2 -> . STRING_CTE seen_print_cuadruplo
    (57) expresion -> . exp seen_comparacion
    (58) expresion -> . exp seen_comparacion expresionaux exp seen_comparacion
    (70) exp -> . termino seen_termino
    (71) exp -> . termino seen_termino expaux
    (74) termino -> . factor seen_factor
    (75) termino -> . factor seen_factor terminoaux
    (84) factor -> . factoraux
    (85) factor -> . varcte
    (86) factoraux -> . LEFTPARENTHESES seen_insert_fondo expresion RIGHTPARENTHESES seen_remove_fondo
    (87) varcte -> . ID seen_ID
    (88) varcte -> . INT_CTE seen_CTE_INT
    (89) varcte -> . FLOAT_CTE seen_CTE_FLOAT

    STRING_CTE      shift and go to state 108
    LEFTPARENTHESES shift and go to state 101
    ID              shift and go to state 102
    INT_CTE         shift and go to state 76
    FLOAT_CTE       shift and go to state 77

    escrituraaux                   shift and go to state 105
    escrituraaux2                  shift and go to state 106
    expresion                      shift and go to state 107
    exp                            shift and go to state 96
    termino                        shift and go to state 97
    factor                         shift and go to state 98
    factoraux                      shift and go to state 99
    varcte                         shift and go to state 100

state 87

    (99) while -> WHILE seen_while . LEFTPARENTHESES expresion RIGHTPARENTHESES seen_right_parentheses_while bloque SEMICOLON seen_end_while

    LEFTPARENTHESES shift and go to state 109


state 88

    (103) functionCall -> ID seen_fCall_id . LEFTPARENTHESES seen_leftp_fCall paramsFunctionCall seen_end_paramsFCall RIGHTPARENTHESES seen_rightp_fCall SEMICOLON

    LEFTPARENTHESES shift and go to state 110


state 89

    (87) varcte -> ID seen_ID .

    ASIGNATION      reduce using rule 87 (varcte -> ID seen_ID .)
    DIVIDE          reduce using rule 87 (varcte -> ID seen_ID .)
    MULTIPLY        reduce using rule 87 (varcte -> ID seen_ID .)
    PLUS            reduce using rule 87 (varcte -> ID seen_ID .)
    MINUS           reduce using rule 87 (varcte -> ID seen_ID .)
    GREATERTHAN     reduce using rule 87 (varcte -> ID seen_ID .)
    LESSTHAN        reduce using rule 87 (varcte -> ID seen_ID .)
    NOTEQUALS       reduce using rule 87 (varcte -> ID seen_ID .)
    EQUALS          reduce using rule 87 (varcte -> ID seen_ID .)
    LEFTPARENTHESES reduce using rule 87 (varcte -> ID seen_ID .)
    ID              reduce using rule 87 (varcte -> ID seen_ID .)
    INT_CTE         reduce using rule 87 (varcte -> ID seen_ID .)
    FLOAT_CTE       reduce using rule 87 (varcte -> ID seen_ID .)
    SEMICOLON       reduce using rule 87 (varcte -> ID seen_ID .)
    RIGHTPARENTHESES reduce using rule 87 (varcte -> ID seen_ID .)
    COMMA           reduce using rule 87 (varcte -> ID seen_ID .)


state 90

    (88) varcte -> INT_CTE seen_CTE_INT .

    ASIGNATION      reduce using rule 88 (varcte -> INT_CTE seen_CTE_INT .)
    DIVIDE          reduce using rule 88 (varcte -> INT_CTE seen_CTE_INT .)
    MULTIPLY        reduce using rule 88 (varcte -> INT_CTE seen_CTE_INT .)
    PLUS            reduce using rule 88 (varcte -> INT_CTE seen_CTE_INT .)
    MINUS           reduce using rule 88 (varcte -> INT_CTE seen_CTE_INT .)
    GREATERTHAN     reduce using rule 88 (varcte -> INT_CTE seen_CTE_INT .)
    LESSTHAN        reduce using rule 88 (varcte -> INT_CTE seen_CTE_INT .)
    NOTEQUALS       reduce using rule 88 (varcte -> INT_CTE seen_CTE_INT .)
    EQUALS          reduce using rule 88 (varcte -> INT_CTE seen_CTE_INT .)
    LEFTPARENTHESES reduce using rule 88 (varcte -> INT_CTE seen_CTE_INT .)
    ID              reduce using rule 88 (varcte -> INT_CTE seen_CTE_INT .)
    INT_CTE         reduce using rule 88 (varcte -> INT_CTE seen_CTE_INT .)
    FLOAT_CTE       reduce using rule 88 (varcte -> INT_CTE seen_CTE_INT .)
    SEMICOLON       reduce using rule 88 (varcte -> INT_CTE seen_CTE_INT .)
    RIGHTPARENTHESES reduce using rule 88 (varcte -> INT_CTE seen_CTE_INT .)
    COMMA           reduce using rule 88 (varcte -> INT_CTE seen_CTE_INT .)


state 91

    (89) varcte -> FLOAT_CTE seen_CTE_FLOAT .

    ASIGNATION      reduce using rule 89 (varcte -> FLOAT_CTE seen_CTE_FLOAT .)
    DIVIDE          reduce using rule 89 (varcte -> FLOAT_CTE seen_CTE_FLOAT .)
    MULTIPLY        reduce using rule 89 (varcte -> FLOAT_CTE seen_CTE_FLOAT .)
    PLUS            reduce using rule 89 (varcte -> FLOAT_CTE seen_CTE_FLOAT .)
    MINUS           reduce using rule 89 (varcte -> FLOAT_CTE seen_CTE_FLOAT .)
    GREATERTHAN     reduce using rule 89 (varcte -> FLOAT_CTE seen_CTE_FLOAT .)
    LESSTHAN        reduce using rule 89 (varcte -> FLOAT_CTE seen_CTE_FLOAT .)
    NOTEQUALS       reduce using rule 89 (varcte -> FLOAT_CTE seen_CTE_FLOAT .)
    EQUALS          reduce using rule 89 (varcte -> FLOAT_CTE seen_CTE_FLOAT .)
    LEFTPARENTHESES reduce using rule 89 (varcte -> FLOAT_CTE seen_CTE_FLOAT .)
    ID              reduce using rule 89 (varcte -> FLOAT_CTE seen_CTE_FLOAT .)
    INT_CTE         reduce using rule 89 (varcte -> FLOAT_CTE seen_CTE_FLOAT .)
    FLOAT_CTE       reduce using rule 89 (varcte -> FLOAT_CTE seen_CTE_FLOAT .)
    SEMICOLON       reduce using rule 89 (varcte -> FLOAT_CTE seen_CTE_FLOAT .)
    RIGHTPARENTHESES reduce using rule 89 (varcte -> FLOAT_CTE seen_CTE_FLOAT .)
    COMMA           reduce using rule 89 (varcte -> FLOAT_CTE seen_CTE_FLOAT .)


state 92

    (38) paramsaux -> tipo ID seen_ID_params paramsaux .

    RIGHTPARENTHESES reduce using rule 38 (paramsaux -> tipo ID seen_ID_params paramsaux .)


state 93

    (12) arrayDimesionAux -> INT_CTE seen_lim_inf INT_CTE seen_lim_sup .
    (13) arrayDimesionAux -> INT_CTE seen_lim_inf INT_CTE seen_lim_sup . COMMA seen_extra_dimension_array arrayDimesionAux

    RIGHTBRACKET    reduce using rule 12 (arrayDimesionAux -> INT_CTE seen_lim_inf INT_CTE seen_lim_sup .)
    COMMA           shift and go to state 111


state 94

    (42) bloque -> LEFTBRACE seen_start_bloqueaux vars bloqueaux returnaux RIGHTBRACE .

    $end            reduce using rule 42 (bloque -> LEFTBRACE seen_start_bloqueaux vars bloqueaux returnaux RIGHTBRACE .)
    FUNCTION        reduce using rule 42 (bloque -> LEFTBRACE seen_start_bloqueaux vars bloqueaux returnaux RIGHTBRACE .)
    MAIN            reduce using rule 42 (bloque -> LEFTBRACE seen_start_bloqueaux vars bloqueaux returnaux RIGHTBRACE .)
    ELSE            reduce using rule 42 (bloque -> LEFTBRACE seen_start_bloqueaux vars bloqueaux returnaux RIGHTBRACE .)
    SEMICOLON       reduce using rule 42 (bloque -> LEFTBRACE seen_start_bloqueaux vars bloqueaux returnaux RIGHTBRACE .)


state 95

    (43) returnaux -> RETURN expresion . seen_return_function SEMICOLON
    (45) seen_return_function -> .

    SEMICOLON       reduce using rule 45 (seen_return_function -> .)

    seen_return_function           shift and go to state 112

state 96

    (57) expresion -> exp . seen_comparacion
    (58) expresion -> exp . seen_comparacion expresionaux exp seen_comparacion
    (98) seen_comparacion -> .

    GREATERTHAN     reduce using rule 98 (seen_comparacion -> .)
    LESSTHAN        reduce using rule 98 (seen_comparacion -> .)
    NOTEQUALS       reduce using rule 98 (seen_comparacion -> .)
    EQUALS          reduce using rule 98 (seen_comparacion -> .)
    LEFTPARENTHESES reduce using rule 98 (seen_comparacion -> .)
    ID              reduce using rule 98 (seen_comparacion -> .)
    INT_CTE         reduce using rule 98 (seen_comparacion -> .)
    FLOAT_CTE       reduce using rule 98 (seen_comparacion -> .)
    SEMICOLON       reduce using rule 98 (seen_comparacion -> .)
    RIGHTPARENTHESES reduce using rule 98 (seen_comparacion -> .)
    COMMA           reduce using rule 98 (seen_comparacion -> .)

    seen_comparacion               shift and go to state 113

state 97

    (70) exp -> termino . seen_termino
    (71) exp -> termino . seen_termino expaux
    (96) seen_termino -> .

    PLUS            reduce using rule 96 (seen_termino -> .)
    MINUS           reduce using rule 96 (seen_termino -> .)
    GREATERTHAN     reduce using rule 96 (seen_termino -> .)
    LESSTHAN        reduce using rule 96 (seen_termino -> .)
    NOTEQUALS       reduce using rule 96 (seen_termino -> .)
    EQUALS          reduce using rule 96 (seen_termino -> .)
    LEFTPARENTHESES reduce using rule 96 (seen_termino -> .)
    ID              reduce using rule 96 (seen_termino -> .)
    INT_CTE         reduce using rule 96 (seen_termino -> .)
    FLOAT_CTE       reduce using rule 96 (seen_termino -> .)
    SEMICOLON       reduce using rule 96 (seen_termino -> .)
    RIGHTPARENTHESES reduce using rule 96 (seen_termino -> .)
    COMMA           reduce using rule 96 (seen_termino -> .)

    seen_termino                   shift and go to state 114

state 98

    (74) termino -> factor . seen_factor
    (75) termino -> factor . seen_factor terminoaux
    (97) seen_factor -> .

    DIVIDE          reduce using rule 97 (seen_factor -> .)
    MULTIPLY        reduce using rule 97 (seen_factor -> .)
    PLUS            reduce using rule 97 (seen_factor -> .)
    MINUS           reduce using rule 97 (seen_factor -> .)
    GREATERTHAN     reduce using rule 97 (seen_factor -> .)
    LESSTHAN        reduce using rule 97 (seen_factor -> .)
    NOTEQUALS       reduce using rule 97 (seen_factor -> .)
    EQUALS          reduce using rule 97 (seen_factor -> .)
    LEFTPARENTHESES reduce using rule 97 (seen_factor -> .)
    ID              reduce using rule 97 (seen_factor -> .)
    INT_CTE         reduce using rule 97 (seen_factor -> .)
    FLOAT_CTE       reduce using rule 97 (seen_factor -> .)
    SEMICOLON       reduce using rule 97 (seen_factor -> .)
    RIGHTPARENTHESES reduce using rule 97 (seen_factor -> .)
    COMMA           reduce using rule 97 (seen_factor -> .)

    seen_factor                    shift and go to state 115

state 99

    (84) factor -> factoraux .

    DIVIDE          reduce using rule 84 (factor -> factoraux .)
    MULTIPLY        reduce using rule 84 (factor -> factoraux .)
    PLUS            reduce using rule 84 (factor -> factoraux .)
    MINUS           reduce using rule 84 (factor -> factoraux .)
    GREATERTHAN     reduce using rule 84 (factor -> factoraux .)
    LESSTHAN        reduce using rule 84 (factor -> factoraux .)
    NOTEQUALS       reduce using rule 84 (factor -> factoraux .)
    EQUALS          reduce using rule 84 (factor -> factoraux .)
    LEFTPARENTHESES reduce using rule 84 (factor -> factoraux .)
    ID              reduce using rule 84 (factor -> factoraux .)
    INT_CTE         reduce using rule 84 (factor -> factoraux .)
    FLOAT_CTE       reduce using rule 84 (factor -> factoraux .)
    SEMICOLON       reduce using rule 84 (factor -> factoraux .)
    RIGHTPARENTHESES reduce using rule 84 (factor -> factoraux .)
    COMMA           reduce using rule 84 (factor -> factoraux .)


state 100

    (85) factor -> varcte .

    DIVIDE          reduce using rule 85 (factor -> varcte .)
    MULTIPLY        reduce using rule 85 (factor -> varcte .)
    PLUS            reduce using rule 85 (factor -> varcte .)
    MINUS           reduce using rule 85 (factor -> varcte .)
    GREATERTHAN     reduce using rule 85 (factor -> varcte .)
    LESSTHAN        reduce using rule 85 (factor -> varcte .)
    NOTEQUALS       reduce using rule 85 (factor -> varcte .)
    EQUALS          reduce using rule 85 (factor -> varcte .)
    LEFTPARENTHESES reduce using rule 85 (factor -> varcte .)
    ID              reduce using rule 85 (factor -> varcte .)
    INT_CTE         reduce using rule 85 (factor -> varcte .)
    FLOAT_CTE       reduce using rule 85 (factor -> varcte .)
    SEMICOLON       reduce using rule 85 (factor -> varcte .)
    RIGHTPARENTHESES reduce using rule 85 (factor -> varcte .)
    COMMA           reduce using rule 85 (factor -> varcte .)


state 101

    (86) factoraux -> LEFTPARENTHESES . seen_insert_fondo expresion RIGHTPARENTHESES seen_remove_fondo
    (92) seen_insert_fondo -> .

    LEFTPARENTHESES reduce using rule 92 (seen_insert_fondo -> .)
    ID              reduce using rule 92 (seen_insert_fondo -> .)
    INT_CTE         reduce using rule 92 (seen_insert_fondo -> .)
    FLOAT_CTE       reduce using rule 92 (seen_insert_fondo -> .)

    seen_insert_fondo              shift and go to state 116

state 102

    (87) varcte -> ID . seen_ID
    (94) seen_ID -> .

    DIVIDE          reduce using rule 94 (seen_ID -> .)
    MULTIPLY        reduce using rule 94 (seen_ID -> .)
    PLUS            reduce using rule 94 (seen_ID -> .)
    MINUS           reduce using rule 94 (seen_ID -> .)
    GREATERTHAN     reduce using rule 94 (seen_ID -> .)
    LESSTHAN        reduce using rule 94 (seen_ID -> .)
    NOTEQUALS       reduce using rule 94 (seen_ID -> .)
    EQUALS          reduce using rule 94 (seen_ID -> .)
    LEFTPARENTHESES reduce using rule 94 (seen_ID -> .)
    ID              reduce using rule 94 (seen_ID -> .)
    INT_CTE         reduce using rule 94 (seen_ID -> .)
    FLOAT_CTE       reduce using rule 94 (seen_ID -> .)
    SEMICOLON       reduce using rule 94 (seen_ID -> .)
    RIGHTPARENTHESES reduce using rule 94 (seen_ID -> .)
    COMMA           reduce using rule 94 (seen_ID -> .)

    seen_ID                        shift and go to state 89

state 103

    (54) asignacion -> varcte ASIGNATION seen_equals . expresion seen_final_asignacion SEMICOLON
    (57) expresion -> . exp seen_comparacion
    (58) expresion -> . exp seen_comparacion expresionaux exp seen_comparacion
    (70) exp -> . termino seen_termino
    (71) exp -> . termino seen_termino expaux
    (74) termino -> . factor seen_factor
    (75) termino -> . factor seen_factor terminoaux
    (84) factor -> . factoraux
    (85) factor -> . varcte
    (86) factoraux -> . LEFTPARENTHESES seen_insert_fondo expresion RIGHTPARENTHESES seen_remove_fondo
    (87) varcte -> . ID seen_ID
    (88) varcte -> . INT_CTE seen_CTE_INT
    (89) varcte -> . FLOAT_CTE seen_CTE_FLOAT

    LEFTPARENTHESES shift and go to state 101
    ID              shift and go to state 102
    INT_CTE         shift and go to state 76
    FLOAT_CTE       shift and go to state 77

    varcte                         shift and go to state 100
    expresion                      shift and go to state 117
    exp                            shift and go to state 96
    termino                        shift and go to state 97
    factor                         shift and go to state 98
    factoraux                      shift and go to state 99

state 104

    (78) condicion -> IF LEFTPARENTHESES expresion . RIGHTPARENTHESES seen_right_parentheses_condicion bloque condicionaux

    RIGHTPARENTHESES shift and go to state 118


state 105

    (64) escritura -> PRINT LEFTPARENTHESES escrituraaux . RIGHTPARENTHESES SEMICOLON

    RIGHTPARENTHESES shift and go to state 119


state 106

    (65) escrituraaux -> escrituraaux2 .
    (66) escrituraaux -> escrituraaux2 . COMMA escrituraaux

    RIGHTPARENTHESES reduce using rule 65 (escrituraaux -> escrituraaux2 .)
    COMMA           shift and go to state 120


state 107

    (67) escrituraaux2 -> expresion . seen_print_cuadruplo
    (69) seen_print_cuadruplo -> .

    COMMA           reduce using rule 69 (seen_print_cuadruplo -> .)
    RIGHTPARENTHESES reduce using rule 69 (seen_print_cuadruplo -> .)

    seen_print_cuadruplo           shift and go to state 121

state 108

    (68) escrituraaux2 -> STRING_CTE . seen_print_cuadruplo
    (69) seen_print_cuadruplo -> .

    COMMA           reduce using rule 69 (seen_print_cuadruplo -> .)
    RIGHTPARENTHESES reduce using rule 69 (seen_print_cuadruplo -> .)

    seen_print_cuadruplo           shift and go to state 122

state 109

    (99) while -> WHILE seen_while LEFTPARENTHESES . expresion RIGHTPARENTHESES seen_right_parentheses_while bloque SEMICOLON seen_end_while
    (57) expresion -> . exp seen_comparacion
    (58) expresion -> . exp seen_comparacion expresionaux exp seen_comparacion
    (70) exp -> . termino seen_termino
    (71) exp -> . termino seen_termino expaux
    (74) termino -> . factor seen_factor
    (75) termino -> . factor seen_factor terminoaux
    (84) factor -> . factoraux
    (85) factor -> . varcte
    (86) factoraux -> . LEFTPARENTHESES seen_insert_fondo expresion RIGHTPARENTHESES seen_remove_fondo
    (87) varcte -> . ID seen_ID
    (88) varcte -> . INT_CTE seen_CTE_INT
    (89) varcte -> . FLOAT_CTE seen_CTE_FLOAT

    LEFTPARENTHESES shift and go to state 101
    ID              shift and go to state 102
    INT_CTE         shift and go to state 76
    FLOAT_CTE       shift and go to state 77

    expresion                      shift and go to state 123
    exp                            shift and go to state 96
    termino                        shift and go to state 97
    factor                         shift and go to state 98
    factoraux                      shift and go to state 99
    varcte                         shift and go to state 100

state 110

    (103) functionCall -> ID seen_fCall_id LEFTPARENTHESES . seen_leftp_fCall paramsFunctionCall seen_end_paramsFCall RIGHTPARENTHESES seen_rightp_fCall SEMICOLON
    (105) seen_leftp_fCall -> .

    LEFTPARENTHESES reduce using rule 105 (seen_leftp_fCall -> .)
    ID              reduce using rule 105 (seen_leftp_fCall -> .)
    INT_CTE         reduce using rule 105 (seen_leftp_fCall -> .)
    FLOAT_CTE       reduce using rule 105 (seen_leftp_fCall -> .)

    seen_leftp_fCall               shift and go to state 124

state 111

    (13) arrayDimesionAux -> INT_CTE seen_lim_inf INT_CTE seen_lim_sup COMMA . seen_extra_dimension_array arrayDimesionAux
    (14) seen_extra_dimension_array -> .

    INT_CTE         reduce using rule 14 (seen_extra_dimension_array -> .)

    seen_extra_dimension_array     shift and go to state 125

state 112

    (43) returnaux -> RETURN expresion seen_return_function . SEMICOLON

    SEMICOLON       shift and go to state 126


state 113

    (57) expresion -> exp seen_comparacion .
    (58) expresion -> exp seen_comparacion . expresionaux exp seen_comparacion
    (59) expresionaux -> . GREATERTHAN seen_operador
    (60) expresionaux -> . LESSTHAN seen_operador
    (61) expresionaux -> . NOTEQUALS seen_operador
    (62) expresionaux -> . EQUALS seen_operador
    (63) expresionaux -> .

    SEMICOLON       reduce using rule 57 (expresion -> exp seen_comparacion .)
    RIGHTPARENTHESES reduce using rule 57 (expresion -> exp seen_comparacion .)
    COMMA           reduce using rule 57 (expresion -> exp seen_comparacion .)
    GREATERTHAN     shift and go to state 128
    LESSTHAN        shift and go to state 129
    NOTEQUALS       shift and go to state 130
    EQUALS          shift and go to state 131
    LEFTPARENTHESES reduce using rule 63 (expresionaux -> .)
    ID              reduce using rule 63 (expresionaux -> .)
    INT_CTE         reduce using rule 63 (expresionaux -> .)
    FLOAT_CTE       reduce using rule 63 (expresionaux -> .)

    expresionaux                   shift and go to state 127

state 114

    (70) exp -> termino seen_termino .
    (71) exp -> termino seen_termino . expaux
    (72) expaux -> . PLUS seen_operador exp
    (73) expaux -> . MINUS seen_operador exp

    GREATERTHAN     reduce using rule 70 (exp -> termino seen_termino .)
    LESSTHAN        reduce using rule 70 (exp -> termino seen_termino .)
    NOTEQUALS       reduce using rule 70 (exp -> termino seen_termino .)
    EQUALS          reduce using rule 70 (exp -> termino seen_termino .)
    LEFTPARENTHESES reduce using rule 70 (exp -> termino seen_termino .)
    ID              reduce using rule 70 (exp -> termino seen_termino .)
    INT_CTE         reduce using rule 70 (exp -> termino seen_termino .)
    FLOAT_CTE       reduce using rule 70 (exp -> termino seen_termino .)
    SEMICOLON       reduce using rule 70 (exp -> termino seen_termino .)
    RIGHTPARENTHESES reduce using rule 70 (exp -> termino seen_termino .)
    COMMA           reduce using rule 70 (exp -> termino seen_termino .)
    PLUS            shift and go to state 133
    MINUS           shift and go to state 134

    expaux                         shift and go to state 132

state 115

    (74) termino -> factor seen_factor .
    (75) termino -> factor seen_factor . terminoaux
    (76) terminoaux -> . DIVIDE seen_operador termino
    (77) terminoaux -> . MULTIPLY seen_operador termino

    PLUS            reduce using rule 74 (termino -> factor seen_factor .)
    MINUS           reduce using rule 74 (termino -> factor seen_factor .)
    GREATERTHAN     reduce using rule 74 (termino -> factor seen_factor .)
    LESSTHAN        reduce using rule 74 (termino -> factor seen_factor .)
    NOTEQUALS       reduce using rule 74 (termino -> factor seen_factor .)
    EQUALS          reduce using rule 74 (termino -> factor seen_factor .)
    LEFTPARENTHESES reduce using rule 74 (termino -> factor seen_factor .)
    ID              reduce using rule 74 (termino -> factor seen_factor .)
    INT_CTE         reduce using rule 74 (termino -> factor seen_factor .)
    FLOAT_CTE       reduce using rule 74 (termino -> factor seen_factor .)
    SEMICOLON       reduce using rule 74 (termino -> factor seen_factor .)
    RIGHTPARENTHESES reduce using rule 74 (termino -> factor seen_factor .)
    COMMA           reduce using rule 74 (termino -> factor seen_factor .)
    DIVIDE          shift and go to state 136
    MULTIPLY        shift and go to state 137

    terminoaux                     shift and go to state 135

state 116

    (86) factoraux -> LEFTPARENTHESES seen_insert_fondo . expresion RIGHTPARENTHESES seen_remove_fondo
    (57) expresion -> . exp seen_comparacion
    (58) expresion -> . exp seen_comparacion expresionaux exp seen_comparacion
    (70) exp -> . termino seen_termino
    (71) exp -> . termino seen_termino expaux
    (74) termino -> . factor seen_factor
    (75) termino -> . factor seen_factor terminoaux
    (84) factor -> . factoraux
    (85) factor -> . varcte
    (86) factoraux -> . LEFTPARENTHESES seen_insert_fondo expresion RIGHTPARENTHESES seen_remove_fondo
    (87) varcte -> . ID seen_ID
    (88) varcte -> . INT_CTE seen_CTE_INT
    (89) varcte -> . FLOAT_CTE seen_CTE_FLOAT

    LEFTPARENTHESES shift and go to state 101
    ID              shift and go to state 102
    INT_CTE         shift and go to state 76
    FLOAT_CTE       shift and go to state 77

    expresion                      shift and go to state 138
    exp                            shift and go to state 96
    termino                        shift and go to state 97
    factor                         shift and go to state 98
    factoraux                      shift and go to state 99
    varcte                         shift and go to state 100

state 117

    (54) asignacion -> varcte ASIGNATION seen_equals expresion . seen_final_asignacion SEMICOLON
    (56) seen_final_asignacion -> .

    SEMICOLON       reduce using rule 56 (seen_final_asignacion -> .)

    seen_final_asignacion          shift and go to state 139

state 118

    (78) condicion -> IF LEFTPARENTHESES expresion RIGHTPARENTHESES . seen_right_parentheses_condicion bloque condicionaux
    (81) seen_right_parentheses_condicion -> .

    LEFTBRACE       reduce using rule 81 (seen_right_parentheses_condicion -> .)

    seen_right_parentheses_condicion shift and go to state 140

state 119

    (64) escritura -> PRINT LEFTPARENTHESES escrituraaux RIGHTPARENTHESES . SEMICOLON

    SEMICOLON       shift and go to state 141


state 120

    (66) escrituraaux -> escrituraaux2 COMMA . escrituraaux
    (65) escrituraaux -> . escrituraaux2
    (66) escrituraaux -> . escrituraaux2 COMMA escrituraaux
    (67) escrituraaux2 -> . expresion seen_print_cuadruplo
    (68) escrituraaux2 -> . STRING_CTE seen_print_cuadruplo
    (57) expresion -> . exp seen_comparacion
    (58) expresion -> . exp seen_comparacion expresionaux exp seen_comparacion
    (70) exp -> . termino seen_termino
    (71) exp -> . termino seen_termino expaux
    (74) termino -> . factor seen_factor
    (75) termino -> . factor seen_factor terminoaux
    (84) factor -> . factoraux
    (85) factor -> . varcte
    (86) factoraux -> . LEFTPARENTHESES seen_insert_fondo expresion RIGHTPARENTHESES seen_remove_fondo
    (87) varcte -> . ID seen_ID
    (88) varcte -> . INT_CTE seen_CTE_INT
    (89) varcte -> . FLOAT_CTE seen_CTE_FLOAT

    STRING_CTE      shift and go to state 108
    LEFTPARENTHESES shift and go to state 101
    ID              shift and go to state 102
    INT_CTE         shift and go to state 76
    FLOAT_CTE       shift and go to state 77

    escrituraaux2                  shift and go to state 106
    escrituraaux                   shift and go to state 142
    expresion                      shift and go to state 107
    exp                            shift and go to state 96
    termino                        shift and go to state 97
    factor                         shift and go to state 98
    factoraux                      shift and go to state 99
    varcte                         shift and go to state 100

state 121

    (67) escrituraaux2 -> expresion seen_print_cuadruplo .

    COMMA           reduce using rule 67 (escrituraaux2 -> expresion seen_print_cuadruplo .)
    RIGHTPARENTHESES reduce using rule 67 (escrituraaux2 -> expresion seen_print_cuadruplo .)


state 122

    (68) escrituraaux2 -> STRING_CTE seen_print_cuadruplo .

    COMMA           reduce using rule 68 (escrituraaux2 -> STRING_CTE seen_print_cuadruplo .)
    RIGHTPARENTHESES reduce using rule 68 (escrituraaux2 -> STRING_CTE seen_print_cuadruplo .)


state 123

    (99) while -> WHILE seen_while LEFTPARENTHESES expresion . RIGHTPARENTHESES seen_right_parentheses_while bloque SEMICOLON seen_end_while

    RIGHTPARENTHESES shift and go to state 143


state 124

    (103) functionCall -> ID seen_fCall_id LEFTPARENTHESES seen_leftp_fCall . paramsFunctionCall seen_end_paramsFCall RIGHTPARENTHESES seen_rightp_fCall SEMICOLON
    (106) paramsFunctionCall -> . expresion seen_parameter_fCall COMMA seen_comma_params_fCall paramsFunctionCall
    (107) paramsFunctionCall -> . expresion seen_parameter_fCall seen_comma_params_fCall
    (57) expresion -> . exp seen_comparacion
    (58) expresion -> . exp seen_comparacion expresionaux exp seen_comparacion
    (70) exp -> . termino seen_termino
    (71) exp -> . termino seen_termino expaux
    (74) termino -> . factor seen_factor
    (75) termino -> . factor seen_factor terminoaux
    (84) factor -> . factoraux
    (85) factor -> . varcte
    (86) factoraux -> . LEFTPARENTHESES seen_insert_fondo expresion RIGHTPARENTHESES seen_remove_fondo
    (87) varcte -> . ID seen_ID
    (88) varcte -> . INT_CTE seen_CTE_INT
    (89) varcte -> . FLOAT_CTE seen_CTE_FLOAT

    LEFTPARENTHESES shift and go to state 101
    ID              shift and go to state 102
    INT_CTE         shift and go to state 76
    FLOAT_CTE       shift and go to state 77

    paramsFunctionCall             shift and go to state 144
    expresion                      shift and go to state 145
    exp                            shift and go to state 96
    termino                        shift and go to state 97
    factor                         shift and go to state 98
    factoraux                      shift and go to state 99
    varcte                         shift and go to state 100

state 125

    (13) arrayDimesionAux -> INT_CTE seen_lim_inf INT_CTE seen_lim_sup COMMA seen_extra_dimension_array . arrayDimesionAux
    (12) arrayDimesionAux -> . INT_CTE seen_lim_inf INT_CTE seen_lim_sup
    (13) arrayDimesionAux -> . INT_CTE seen_lim_inf INT_CTE seen_lim_sup COMMA seen_extra_dimension_array arrayDimesionAux

    INT_CTE         shift and go to state 57

    arrayDimesionAux               shift and go to state 146

state 126

    (43) returnaux -> RETURN expresion seen_return_function SEMICOLON .

    RIGHTBRACE      reduce using rule 43 (returnaux -> RETURN expresion seen_return_function SEMICOLON .)


state 127

    (58) expresion -> exp seen_comparacion expresionaux . exp seen_comparacion
    (70) exp -> . termino seen_termino
    (71) exp -> . termino seen_termino expaux
    (74) termino -> . factor seen_factor
    (75) termino -> . factor seen_factor terminoaux
    (84) factor -> . factoraux
    (85) factor -> . varcte
    (86) factoraux -> . LEFTPARENTHESES seen_insert_fondo expresion RIGHTPARENTHESES seen_remove_fondo
    (87) varcte -> . ID seen_ID
    (88) varcte -> . INT_CTE seen_CTE_INT
    (89) varcte -> . FLOAT_CTE seen_CTE_FLOAT

    LEFTPARENTHESES shift and go to state 101
    ID              shift and go to state 102
    INT_CTE         shift and go to state 76
    FLOAT_CTE       shift and go to state 77

    exp                            shift and go to state 147
    termino                        shift and go to state 97
    factor                         shift and go to state 98
    factoraux                      shift and go to state 99
    varcte                         shift and go to state 100

state 128

    (59) expresionaux -> GREATERTHAN . seen_operador
    (95) seen_operador -> .

    LEFTPARENTHESES reduce using rule 95 (seen_operador -> .)
    ID              reduce using rule 95 (seen_operador -> .)
    INT_CTE         reduce using rule 95 (seen_operador -> .)
    FLOAT_CTE       reduce using rule 95 (seen_operador -> .)

    seen_operador                  shift and go to state 148

state 129

    (60) expresionaux -> LESSTHAN . seen_operador
    (95) seen_operador -> .

    LEFTPARENTHESES reduce using rule 95 (seen_operador -> .)
    ID              reduce using rule 95 (seen_operador -> .)
    INT_CTE         reduce using rule 95 (seen_operador -> .)
    FLOAT_CTE       reduce using rule 95 (seen_operador -> .)

    seen_operador                  shift and go to state 149

state 130

    (61) expresionaux -> NOTEQUALS . seen_operador
    (95) seen_operador -> .

    LEFTPARENTHESES reduce using rule 95 (seen_operador -> .)
    ID              reduce using rule 95 (seen_operador -> .)
    INT_CTE         reduce using rule 95 (seen_operador -> .)
    FLOAT_CTE       reduce using rule 95 (seen_operador -> .)

    seen_operador                  shift and go to state 150

state 131

    (62) expresionaux -> EQUALS . seen_operador
    (95) seen_operador -> .

    LEFTPARENTHESES reduce using rule 95 (seen_operador -> .)
    ID              reduce using rule 95 (seen_operador -> .)
    INT_CTE         reduce using rule 95 (seen_operador -> .)
    FLOAT_CTE       reduce using rule 95 (seen_operador -> .)

    seen_operador                  shift and go to state 151

state 132

    (71) exp -> termino seen_termino expaux .

    GREATERTHAN     reduce using rule 71 (exp -> termino seen_termino expaux .)
    LESSTHAN        reduce using rule 71 (exp -> termino seen_termino expaux .)
    NOTEQUALS       reduce using rule 71 (exp -> termino seen_termino expaux .)
    EQUALS          reduce using rule 71 (exp -> termino seen_termino expaux .)
    LEFTPARENTHESES reduce using rule 71 (exp -> termino seen_termino expaux .)
    ID              reduce using rule 71 (exp -> termino seen_termino expaux .)
    INT_CTE         reduce using rule 71 (exp -> termino seen_termino expaux .)
    FLOAT_CTE       reduce using rule 71 (exp -> termino seen_termino expaux .)
    SEMICOLON       reduce using rule 71 (exp -> termino seen_termino expaux .)
    RIGHTPARENTHESES reduce using rule 71 (exp -> termino seen_termino expaux .)
    COMMA           reduce using rule 71 (exp -> termino seen_termino expaux .)


state 133

    (72) expaux -> PLUS . seen_operador exp
    (95) seen_operador -> .

    LEFTPARENTHESES reduce using rule 95 (seen_operador -> .)
    ID              reduce using rule 95 (seen_operador -> .)
    INT_CTE         reduce using rule 95 (seen_operador -> .)
    FLOAT_CTE       reduce using rule 95 (seen_operador -> .)

    seen_operador                  shift and go to state 152

state 134

    (73) expaux -> MINUS . seen_operador exp
    (95) seen_operador -> .

    LEFTPARENTHESES reduce using rule 95 (seen_operador -> .)
    ID              reduce using rule 95 (seen_operador -> .)
    INT_CTE         reduce using rule 95 (seen_operador -> .)
    FLOAT_CTE       reduce using rule 95 (seen_operador -> .)

    seen_operador                  shift and go to state 153

state 135

    (75) termino -> factor seen_factor terminoaux .

    PLUS            reduce using rule 75 (termino -> factor seen_factor terminoaux .)
    MINUS           reduce using rule 75 (termino -> factor seen_factor terminoaux .)
    GREATERTHAN     reduce using rule 75 (termino -> factor seen_factor terminoaux .)
    LESSTHAN        reduce using rule 75 (termino -> factor seen_factor terminoaux .)
    NOTEQUALS       reduce using rule 75 (termino -> factor seen_factor terminoaux .)
    EQUALS          reduce using rule 75 (termino -> factor seen_factor terminoaux .)
    LEFTPARENTHESES reduce using rule 75 (termino -> factor seen_factor terminoaux .)
    ID              reduce using rule 75 (termino -> factor seen_factor terminoaux .)
    INT_CTE         reduce using rule 75 (termino -> factor seen_factor terminoaux .)
    FLOAT_CTE       reduce using rule 75 (termino -> factor seen_factor terminoaux .)
    SEMICOLON       reduce using rule 75 (termino -> factor seen_factor terminoaux .)
    RIGHTPARENTHESES reduce using rule 75 (termino -> factor seen_factor terminoaux .)
    COMMA           reduce using rule 75 (termino -> factor seen_factor terminoaux .)


state 136

    (76) terminoaux -> DIVIDE . seen_operador termino
    (95) seen_operador -> .

    LEFTPARENTHESES reduce using rule 95 (seen_operador -> .)
    ID              reduce using rule 95 (seen_operador -> .)
    INT_CTE         reduce using rule 95 (seen_operador -> .)
    FLOAT_CTE       reduce using rule 95 (seen_operador -> .)

    seen_operador                  shift and go to state 154

state 137

    (77) terminoaux -> MULTIPLY . seen_operador termino
    (95) seen_operador -> .

    LEFTPARENTHESES reduce using rule 95 (seen_operador -> .)
    ID              reduce using rule 95 (seen_operador -> .)
    INT_CTE         reduce using rule 95 (seen_operador -> .)
    FLOAT_CTE       reduce using rule 95 (seen_operador -> .)

    seen_operador                  shift and go to state 155

state 138

    (86) factoraux -> LEFTPARENTHESES seen_insert_fondo expresion . RIGHTPARENTHESES seen_remove_fondo

    RIGHTPARENTHESES shift and go to state 156


state 139

    (54) asignacion -> varcte ASIGNATION seen_equals expresion seen_final_asignacion . SEMICOLON

    SEMICOLON       shift and go to state 157


state 140

    (78) condicion -> IF LEFTPARENTHESES expresion RIGHTPARENTHESES seen_right_parentheses_condicion . bloque condicionaux
    (42) bloque -> . LEFTBRACE seen_start_bloqueaux vars bloqueaux returnaux RIGHTBRACE

    LEFTBRACE       shift and go to state 44

    bloque                         shift and go to state 158

state 141

    (64) escritura -> PRINT LEFTPARENTHESES escrituraaux RIGHTPARENTHESES SEMICOLON .

    IF              reduce using rule 64 (escritura -> PRINT LEFTPARENTHESES escrituraaux RIGHTPARENTHESES SEMICOLON .)
    PRINT           reduce using rule 64 (escritura -> PRINT LEFTPARENTHESES escrituraaux RIGHTPARENTHESES SEMICOLON .)
    WHILE           reduce using rule 64 (escritura -> PRINT LEFTPARENTHESES escrituraaux RIGHTPARENTHESES SEMICOLON .)
    ID              reduce using rule 64 (escritura -> PRINT LEFTPARENTHESES escrituraaux RIGHTPARENTHESES SEMICOLON .)
    INT_CTE         reduce using rule 64 (escritura -> PRINT LEFTPARENTHESES escrituraaux RIGHTPARENTHESES SEMICOLON .)
    FLOAT_CTE       reduce using rule 64 (escritura -> PRINT LEFTPARENTHESES escrituraaux RIGHTPARENTHESES SEMICOLON .)
    RETURN          reduce using rule 64 (escritura -> PRINT LEFTPARENTHESES escrituraaux RIGHTPARENTHESES SEMICOLON .)
    RIGHTBRACE      reduce using rule 64 (escritura -> PRINT LEFTPARENTHESES escrituraaux RIGHTPARENTHESES SEMICOLON .)


state 142

    (66) escrituraaux -> escrituraaux2 COMMA escrituraaux .

    RIGHTPARENTHESES reduce using rule 66 (escrituraaux -> escrituraaux2 COMMA escrituraaux .)


state 143

    (99) while -> WHILE seen_while LEFTPARENTHESES expresion RIGHTPARENTHESES . seen_right_parentheses_while bloque SEMICOLON seen_end_while
    (101) seen_right_parentheses_while -> .

    LEFTBRACE       reduce using rule 101 (seen_right_parentheses_while -> .)

    seen_right_parentheses_while   shift and go to state 159

state 144

    (103) functionCall -> ID seen_fCall_id LEFTPARENTHESES seen_leftp_fCall paramsFunctionCall . seen_end_paramsFCall RIGHTPARENTHESES seen_rightp_fCall SEMICOLON
    (110) seen_end_paramsFCall -> .

    RIGHTPARENTHESES reduce using rule 110 (seen_end_paramsFCall -> .)

    seen_end_paramsFCall           shift and go to state 160

state 145

    (106) paramsFunctionCall -> expresion . seen_parameter_fCall COMMA seen_comma_params_fCall paramsFunctionCall
    (107) paramsFunctionCall -> expresion . seen_parameter_fCall seen_comma_params_fCall
    (108) seen_parameter_fCall -> .

    COMMA           reduce using rule 108 (seen_parameter_fCall -> .)
    RIGHTPARENTHESES reduce using rule 108 (seen_parameter_fCall -> .)

    seen_parameter_fCall           shift and go to state 161

state 146

    (13) arrayDimesionAux -> INT_CTE seen_lim_inf INT_CTE seen_lim_sup COMMA seen_extra_dimension_array arrayDimesionAux .

    RIGHTBRACKET    reduce using rule 13 (arrayDimesionAux -> INT_CTE seen_lim_inf INT_CTE seen_lim_sup COMMA seen_extra_dimension_array arrayDimesionAux .)


state 147

    (58) expresion -> exp seen_comparacion expresionaux exp . seen_comparacion
    (98) seen_comparacion -> .

    SEMICOLON       reduce using rule 98 (seen_comparacion -> .)
    RIGHTPARENTHESES reduce using rule 98 (seen_comparacion -> .)
    COMMA           reduce using rule 98 (seen_comparacion -> .)

    seen_comparacion               shift and go to state 162

state 148

    (59) expresionaux -> GREATERTHAN seen_operador .

    LEFTPARENTHESES reduce using rule 59 (expresionaux -> GREATERTHAN seen_operador .)
    ID              reduce using rule 59 (expresionaux -> GREATERTHAN seen_operador .)
    INT_CTE         reduce using rule 59 (expresionaux -> GREATERTHAN seen_operador .)
    FLOAT_CTE       reduce using rule 59 (expresionaux -> GREATERTHAN seen_operador .)


state 149

    (60) expresionaux -> LESSTHAN seen_operador .

    LEFTPARENTHESES reduce using rule 60 (expresionaux -> LESSTHAN seen_operador .)
    ID              reduce using rule 60 (expresionaux -> LESSTHAN seen_operador .)
    INT_CTE         reduce using rule 60 (expresionaux -> LESSTHAN seen_operador .)
    FLOAT_CTE       reduce using rule 60 (expresionaux -> LESSTHAN seen_operador .)


state 150

    (61) expresionaux -> NOTEQUALS seen_operador .

    LEFTPARENTHESES reduce using rule 61 (expresionaux -> NOTEQUALS seen_operador .)
    ID              reduce using rule 61 (expresionaux -> NOTEQUALS seen_operador .)
    INT_CTE         reduce using rule 61 (expresionaux -> NOTEQUALS seen_operador .)
    FLOAT_CTE       reduce using rule 61 (expresionaux -> NOTEQUALS seen_operador .)


state 151

    (62) expresionaux -> EQUALS seen_operador .

    LEFTPARENTHESES reduce using rule 62 (expresionaux -> EQUALS seen_operador .)
    ID              reduce using rule 62 (expresionaux -> EQUALS seen_operador .)
    INT_CTE         reduce using rule 62 (expresionaux -> EQUALS seen_operador .)
    FLOAT_CTE       reduce using rule 62 (expresionaux -> EQUALS seen_operador .)


state 152

    (72) expaux -> PLUS seen_operador . exp
    (70) exp -> . termino seen_termino
    (71) exp -> . termino seen_termino expaux
    (74) termino -> . factor seen_factor
    (75) termino -> . factor seen_factor terminoaux
    (84) factor -> . factoraux
    (85) factor -> . varcte
    (86) factoraux -> . LEFTPARENTHESES seen_insert_fondo expresion RIGHTPARENTHESES seen_remove_fondo
    (87) varcte -> . ID seen_ID
    (88) varcte -> . INT_CTE seen_CTE_INT
    (89) varcte -> . FLOAT_CTE seen_CTE_FLOAT

    LEFTPARENTHESES shift and go to state 101
    ID              shift and go to state 102
    INT_CTE         shift and go to state 76
    FLOAT_CTE       shift and go to state 77

    exp                            shift and go to state 163
    termino                        shift and go to state 97
    factor                         shift and go to state 98
    factoraux                      shift and go to state 99
    varcte                         shift and go to state 100

state 153

    (73) expaux -> MINUS seen_operador . exp
    (70) exp -> . termino seen_termino
    (71) exp -> . termino seen_termino expaux
    (74) termino -> . factor seen_factor
    (75) termino -> . factor seen_factor terminoaux
    (84) factor -> . factoraux
    (85) factor -> . varcte
    (86) factoraux -> . LEFTPARENTHESES seen_insert_fondo expresion RIGHTPARENTHESES seen_remove_fondo
    (87) varcte -> . ID seen_ID
    (88) varcte -> . INT_CTE seen_CTE_INT
    (89) varcte -> . FLOAT_CTE seen_CTE_FLOAT

    LEFTPARENTHESES shift and go to state 101
    ID              shift and go to state 102
    INT_CTE         shift and go to state 76
    FLOAT_CTE       shift and go to state 77

    exp                            shift and go to state 164
    termino                        shift and go to state 97
    factor                         shift and go to state 98
    factoraux                      shift and go to state 99
    varcte                         shift and go to state 100

state 154

    (76) terminoaux -> DIVIDE seen_operador . termino
    (74) termino -> . factor seen_factor
    (75) termino -> . factor seen_factor terminoaux
    (84) factor -> . factoraux
    (85) factor -> . varcte
    (86) factoraux -> . LEFTPARENTHESES seen_insert_fondo expresion RIGHTPARENTHESES seen_remove_fondo
    (87) varcte -> . ID seen_ID
    (88) varcte -> . INT_CTE seen_CTE_INT
    (89) varcte -> . FLOAT_CTE seen_CTE_FLOAT

    LEFTPARENTHESES shift and go to state 101
    ID              shift and go to state 102
    INT_CTE         shift and go to state 76
    FLOAT_CTE       shift and go to state 77

    termino                        shift and go to state 165
    factor                         shift and go to state 98
    factoraux                      shift and go to state 99
    varcte                         shift and go to state 100

state 155

    (77) terminoaux -> MULTIPLY seen_operador . termino
    (74) termino -> . factor seen_factor
    (75) termino -> . factor seen_factor terminoaux
    (84) factor -> . factoraux
    (85) factor -> . varcte
    (86) factoraux -> . LEFTPARENTHESES seen_insert_fondo expresion RIGHTPARENTHESES seen_remove_fondo
    (87) varcte -> . ID seen_ID
    (88) varcte -> . INT_CTE seen_CTE_INT
    (89) varcte -> . FLOAT_CTE seen_CTE_FLOAT

    LEFTPARENTHESES shift and go to state 101
    ID              shift and go to state 102
    INT_CTE         shift and go to state 76
    FLOAT_CTE       shift and go to state 77

    termino                        shift and go to state 166
    factor                         shift and go to state 98
    factoraux                      shift and go to state 99
    varcte                         shift and go to state 100

state 156

    (86) factoraux -> LEFTPARENTHESES seen_insert_fondo expresion RIGHTPARENTHESES . seen_remove_fondo
    (93) seen_remove_fondo -> .

    DIVIDE          reduce using rule 93 (seen_remove_fondo -> .)
    MULTIPLY        reduce using rule 93 (seen_remove_fondo -> .)
    PLUS            reduce using rule 93 (seen_remove_fondo -> .)
    MINUS           reduce using rule 93 (seen_remove_fondo -> .)
    GREATERTHAN     reduce using rule 93 (seen_remove_fondo -> .)
    LESSTHAN        reduce using rule 93 (seen_remove_fondo -> .)
    NOTEQUALS       reduce using rule 93 (seen_remove_fondo -> .)
    EQUALS          reduce using rule 93 (seen_remove_fondo -> .)
    LEFTPARENTHESES reduce using rule 93 (seen_remove_fondo -> .)
    ID              reduce using rule 93 (seen_remove_fondo -> .)
    INT_CTE         reduce using rule 93 (seen_remove_fondo -> .)
    FLOAT_CTE       reduce using rule 93 (seen_remove_fondo -> .)
    SEMICOLON       reduce using rule 93 (seen_remove_fondo -> .)
    RIGHTPARENTHESES reduce using rule 93 (seen_remove_fondo -> .)
    COMMA           reduce using rule 93 (seen_remove_fondo -> .)

    seen_remove_fondo              shift and go to state 167

state 157

    (54) asignacion -> varcte ASIGNATION seen_equals expresion seen_final_asignacion SEMICOLON .

    IF              reduce using rule 54 (asignacion -> varcte ASIGNATION seen_equals expresion seen_final_asignacion SEMICOLON .)
    PRINT           reduce using rule 54 (asignacion -> varcte ASIGNATION seen_equals expresion seen_final_asignacion SEMICOLON .)
    WHILE           reduce using rule 54 (asignacion -> varcte ASIGNATION seen_equals expresion seen_final_asignacion SEMICOLON .)
    ID              reduce using rule 54 (asignacion -> varcte ASIGNATION seen_equals expresion seen_final_asignacion SEMICOLON .)
    INT_CTE         reduce using rule 54 (asignacion -> varcte ASIGNATION seen_equals expresion seen_final_asignacion SEMICOLON .)
    FLOAT_CTE       reduce using rule 54 (asignacion -> varcte ASIGNATION seen_equals expresion seen_final_asignacion SEMICOLON .)
    RETURN          reduce using rule 54 (asignacion -> varcte ASIGNATION seen_equals expresion seen_final_asignacion SEMICOLON .)
    RIGHTBRACE      reduce using rule 54 (asignacion -> varcte ASIGNATION seen_equals expresion seen_final_asignacion SEMICOLON .)


state 158

    (78) condicion -> IF LEFTPARENTHESES expresion RIGHTPARENTHESES seen_right_parentheses_condicion bloque . condicionaux
    (79) condicionaux -> . ELSE seen_else bloque SEMICOLON seen_end_condicion
    (80) condicionaux -> . SEMICOLON seen_end_condicion

    ELSE            shift and go to state 169
    SEMICOLON       shift and go to state 170

    condicionaux                   shift and go to state 168

state 159

    (99) while -> WHILE seen_while LEFTPARENTHESES expresion RIGHTPARENTHESES seen_right_parentheses_while . bloque SEMICOLON seen_end_while
    (42) bloque -> . LEFTBRACE seen_start_bloqueaux vars bloqueaux returnaux RIGHTBRACE

    LEFTBRACE       shift and go to state 44

    bloque                         shift and go to state 171

state 160

    (103) functionCall -> ID seen_fCall_id LEFTPARENTHESES seen_leftp_fCall paramsFunctionCall seen_end_paramsFCall . RIGHTPARENTHESES seen_rightp_fCall SEMICOLON

    RIGHTPARENTHESES shift and go to state 172


state 161

    (106) paramsFunctionCall -> expresion seen_parameter_fCall . COMMA seen_comma_params_fCall paramsFunctionCall
    (107) paramsFunctionCall -> expresion seen_parameter_fCall . seen_comma_params_fCall
    (109) seen_comma_params_fCall -> .

    COMMA           shift and go to state 173
    RIGHTPARENTHESES reduce using rule 109 (seen_comma_params_fCall -> .)

    seen_comma_params_fCall        shift and go to state 174

state 162

    (58) expresion -> exp seen_comparacion expresionaux exp seen_comparacion .

    SEMICOLON       reduce using rule 58 (expresion -> exp seen_comparacion expresionaux exp seen_comparacion .)
    RIGHTPARENTHESES reduce using rule 58 (expresion -> exp seen_comparacion expresionaux exp seen_comparacion .)
    COMMA           reduce using rule 58 (expresion -> exp seen_comparacion expresionaux exp seen_comparacion .)


state 163

    (72) expaux -> PLUS seen_operador exp .

    GREATERTHAN     reduce using rule 72 (expaux -> PLUS seen_operador exp .)
    LESSTHAN        reduce using rule 72 (expaux -> PLUS seen_operador exp .)
    NOTEQUALS       reduce using rule 72 (expaux -> PLUS seen_operador exp .)
    EQUALS          reduce using rule 72 (expaux -> PLUS seen_operador exp .)
    LEFTPARENTHESES reduce using rule 72 (expaux -> PLUS seen_operador exp .)
    ID              reduce using rule 72 (expaux -> PLUS seen_operador exp .)
    INT_CTE         reduce using rule 72 (expaux -> PLUS seen_operador exp .)
    FLOAT_CTE       reduce using rule 72 (expaux -> PLUS seen_operador exp .)
    SEMICOLON       reduce using rule 72 (expaux -> PLUS seen_operador exp .)
    RIGHTPARENTHESES reduce using rule 72 (expaux -> PLUS seen_operador exp .)
    COMMA           reduce using rule 72 (expaux -> PLUS seen_operador exp .)


state 164

    (73) expaux -> MINUS seen_operador exp .

    GREATERTHAN     reduce using rule 73 (expaux -> MINUS seen_operador exp .)
    LESSTHAN        reduce using rule 73 (expaux -> MINUS seen_operador exp .)
    NOTEQUALS       reduce using rule 73 (expaux -> MINUS seen_operador exp .)
    EQUALS          reduce using rule 73 (expaux -> MINUS seen_operador exp .)
    LEFTPARENTHESES reduce using rule 73 (expaux -> MINUS seen_operador exp .)
    ID              reduce using rule 73 (expaux -> MINUS seen_operador exp .)
    INT_CTE         reduce using rule 73 (expaux -> MINUS seen_operador exp .)
    FLOAT_CTE       reduce using rule 73 (expaux -> MINUS seen_operador exp .)
    SEMICOLON       reduce using rule 73 (expaux -> MINUS seen_operador exp .)
    RIGHTPARENTHESES reduce using rule 73 (expaux -> MINUS seen_operador exp .)
    COMMA           reduce using rule 73 (expaux -> MINUS seen_operador exp .)


state 165

    (76) terminoaux -> DIVIDE seen_operador termino .

    PLUS            reduce using rule 76 (terminoaux -> DIVIDE seen_operador termino .)
    MINUS           reduce using rule 76 (terminoaux -> DIVIDE seen_operador termino .)
    GREATERTHAN     reduce using rule 76 (terminoaux -> DIVIDE seen_operador termino .)
    LESSTHAN        reduce using rule 76 (terminoaux -> DIVIDE seen_operador termino .)
    NOTEQUALS       reduce using rule 76 (terminoaux -> DIVIDE seen_operador termino .)
    EQUALS          reduce using rule 76 (terminoaux -> DIVIDE seen_operador termino .)
    LEFTPARENTHESES reduce using rule 76 (terminoaux -> DIVIDE seen_operador termino .)
    ID              reduce using rule 76 (terminoaux -> DIVIDE seen_operador termino .)
    INT_CTE         reduce using rule 76 (terminoaux -> DIVIDE seen_operador termino .)
    FLOAT_CTE       reduce using rule 76 (terminoaux -> DIVIDE seen_operador termino .)
    SEMICOLON       reduce using rule 76 (terminoaux -> DIVIDE seen_operador termino .)
    RIGHTPARENTHESES reduce using rule 76 (terminoaux -> DIVIDE seen_operador termino .)
    COMMA           reduce using rule 76 (terminoaux -> DIVIDE seen_operador termino .)


state 166

    (77) terminoaux -> MULTIPLY seen_operador termino .

    PLUS            reduce using rule 77 (terminoaux -> MULTIPLY seen_operador termino .)
    MINUS           reduce using rule 77 (terminoaux -> MULTIPLY seen_operador termino .)
    GREATERTHAN     reduce using rule 77 (terminoaux -> MULTIPLY seen_operador termino .)
    LESSTHAN        reduce using rule 77 (terminoaux -> MULTIPLY seen_operador termino .)
    NOTEQUALS       reduce using rule 77 (terminoaux -> MULTIPLY seen_operador termino .)
    EQUALS          reduce using rule 77 (terminoaux -> MULTIPLY seen_operador termino .)
    LEFTPARENTHESES reduce using rule 77 (terminoaux -> MULTIPLY seen_operador termino .)
    ID              reduce using rule 77 (terminoaux -> MULTIPLY seen_operador termino .)
    INT_CTE         reduce using rule 77 (terminoaux -> MULTIPLY seen_operador termino .)
    FLOAT_CTE       reduce using rule 77 (terminoaux -> MULTIPLY seen_operador termino .)
    SEMICOLON       reduce using rule 77 (terminoaux -> MULTIPLY seen_operador termino .)
    RIGHTPARENTHESES reduce using rule 77 (terminoaux -> MULTIPLY seen_operador termino .)
    COMMA           reduce using rule 77 (terminoaux -> MULTIPLY seen_operador termino .)


state 167

    (86) factoraux -> LEFTPARENTHESES seen_insert_fondo expresion RIGHTPARENTHESES seen_remove_fondo .

    DIVIDE          reduce using rule 86 (factoraux -> LEFTPARENTHESES seen_insert_fondo expresion RIGHTPARENTHESES seen_remove_fondo .)
    MULTIPLY        reduce using rule 86 (factoraux -> LEFTPARENTHESES seen_insert_fondo expresion RIGHTPARENTHESES seen_remove_fondo .)
    PLUS            reduce using rule 86 (factoraux -> LEFTPARENTHESES seen_insert_fondo expresion RIGHTPARENTHESES seen_remove_fondo .)
    MINUS           reduce using rule 86 (factoraux -> LEFTPARENTHESES seen_insert_fondo expresion RIGHTPARENTHESES seen_remove_fondo .)
    GREATERTHAN     reduce using rule 86 (factoraux -> LEFTPARENTHESES seen_insert_fondo expresion RIGHTPARENTHESES seen_remove_fondo .)
    LESSTHAN        reduce using rule 86 (factoraux -> LEFTPARENTHESES seen_insert_fondo expresion RIGHTPARENTHESES seen_remove_fondo .)
    NOTEQUALS       reduce using rule 86 (factoraux -> LEFTPARENTHESES seen_insert_fondo expresion RIGHTPARENTHESES seen_remove_fondo .)
    EQUALS          reduce using rule 86 (factoraux -> LEFTPARENTHESES seen_insert_fondo expresion RIGHTPARENTHESES seen_remove_fondo .)
    LEFTPARENTHESES reduce using rule 86 (factoraux -> LEFTPARENTHESES seen_insert_fondo expresion RIGHTPARENTHESES seen_remove_fondo .)
    ID              reduce using rule 86 (factoraux -> LEFTPARENTHESES seen_insert_fondo expresion RIGHTPARENTHESES seen_remove_fondo .)
    INT_CTE         reduce using rule 86 (factoraux -> LEFTPARENTHESES seen_insert_fondo expresion RIGHTPARENTHESES seen_remove_fondo .)
    FLOAT_CTE       reduce using rule 86 (factoraux -> LEFTPARENTHESES seen_insert_fondo expresion RIGHTPARENTHESES seen_remove_fondo .)
    SEMICOLON       reduce using rule 86 (factoraux -> LEFTPARENTHESES seen_insert_fondo expresion RIGHTPARENTHESES seen_remove_fondo .)
    RIGHTPARENTHESES reduce using rule 86 (factoraux -> LEFTPARENTHESES seen_insert_fondo expresion RIGHTPARENTHESES seen_remove_fondo .)
    COMMA           reduce using rule 86 (factoraux -> LEFTPARENTHESES seen_insert_fondo expresion RIGHTPARENTHESES seen_remove_fondo .)


state 168

    (78) condicion -> IF LEFTPARENTHESES expresion RIGHTPARENTHESES seen_right_parentheses_condicion bloque condicionaux .

    IF              reduce using rule 78 (condicion -> IF LEFTPARENTHESES expresion RIGHTPARENTHESES seen_right_parentheses_condicion bloque condicionaux .)
    PRINT           reduce using rule 78 (condicion -> IF LEFTPARENTHESES expresion RIGHTPARENTHESES seen_right_parentheses_condicion bloque condicionaux .)
    WHILE           reduce using rule 78 (condicion -> IF LEFTPARENTHESES expresion RIGHTPARENTHESES seen_right_parentheses_condicion bloque condicionaux .)
    ID              reduce using rule 78 (condicion -> IF LEFTPARENTHESES expresion RIGHTPARENTHESES seen_right_parentheses_condicion bloque condicionaux .)
    INT_CTE         reduce using rule 78 (condicion -> IF LEFTPARENTHESES expresion RIGHTPARENTHESES seen_right_parentheses_condicion bloque condicionaux .)
    FLOAT_CTE       reduce using rule 78 (condicion -> IF LEFTPARENTHESES expresion RIGHTPARENTHESES seen_right_parentheses_condicion bloque condicionaux .)
    RETURN          reduce using rule 78 (condicion -> IF LEFTPARENTHESES expresion RIGHTPARENTHESES seen_right_parentheses_condicion bloque condicionaux .)
    RIGHTBRACE      reduce using rule 78 (condicion -> IF LEFTPARENTHESES expresion RIGHTPARENTHESES seen_right_parentheses_condicion bloque condicionaux .)


state 169

    (79) condicionaux -> ELSE . seen_else bloque SEMICOLON seen_end_condicion
    (82) seen_else -> .

    LEFTBRACE       reduce using rule 82 (seen_else -> .)

    seen_else                      shift and go to state 175

state 170

    (80) condicionaux -> SEMICOLON . seen_end_condicion
    (83) seen_end_condicion -> .

    IF              reduce using rule 83 (seen_end_condicion -> .)
    PRINT           reduce using rule 83 (seen_end_condicion -> .)
    WHILE           reduce using rule 83 (seen_end_condicion -> .)
    ID              reduce using rule 83 (seen_end_condicion -> .)
    INT_CTE         reduce using rule 83 (seen_end_condicion -> .)
    FLOAT_CTE       reduce using rule 83 (seen_end_condicion -> .)
    RETURN          reduce using rule 83 (seen_end_condicion -> .)
    RIGHTBRACE      reduce using rule 83 (seen_end_condicion -> .)

    seen_end_condicion             shift and go to state 176

state 171

    (99) while -> WHILE seen_while LEFTPARENTHESES expresion RIGHTPARENTHESES seen_right_parentheses_while bloque . SEMICOLON seen_end_while

    SEMICOLON       shift and go to state 177


state 172

    (103) functionCall -> ID seen_fCall_id LEFTPARENTHESES seen_leftp_fCall paramsFunctionCall seen_end_paramsFCall RIGHTPARENTHESES . seen_rightp_fCall SEMICOLON
    (111) seen_rightp_fCall -> .

    SEMICOLON       reduce using rule 111 (seen_rightp_fCall -> .)

    seen_rightp_fCall              shift and go to state 178

state 173

    (106) paramsFunctionCall -> expresion seen_parameter_fCall COMMA . seen_comma_params_fCall paramsFunctionCall
    (109) seen_comma_params_fCall -> .

    LEFTPARENTHESES reduce using rule 109 (seen_comma_params_fCall -> .)
    ID              reduce using rule 109 (seen_comma_params_fCall -> .)
    INT_CTE         reduce using rule 109 (seen_comma_params_fCall -> .)
    FLOAT_CTE       reduce using rule 109 (seen_comma_params_fCall -> .)

    seen_comma_params_fCall        shift and go to state 179

state 174

    (107) paramsFunctionCall -> expresion seen_parameter_fCall seen_comma_params_fCall .

    RIGHTPARENTHESES reduce using rule 107 (paramsFunctionCall -> expresion seen_parameter_fCall seen_comma_params_fCall .)


state 175

    (79) condicionaux -> ELSE seen_else . bloque SEMICOLON seen_end_condicion
    (42) bloque -> . LEFTBRACE seen_start_bloqueaux vars bloqueaux returnaux RIGHTBRACE

    LEFTBRACE       shift and go to state 44

    bloque                         shift and go to state 180

state 176

    (80) condicionaux -> SEMICOLON seen_end_condicion .

    IF              reduce using rule 80 (condicionaux -> SEMICOLON seen_end_condicion .)
    PRINT           reduce using rule 80 (condicionaux -> SEMICOLON seen_end_condicion .)
    WHILE           reduce using rule 80 (condicionaux -> SEMICOLON seen_end_condicion .)
    ID              reduce using rule 80 (condicionaux -> SEMICOLON seen_end_condicion .)
    INT_CTE         reduce using rule 80 (condicionaux -> SEMICOLON seen_end_condicion .)
    FLOAT_CTE       reduce using rule 80 (condicionaux -> SEMICOLON seen_end_condicion .)
    RETURN          reduce using rule 80 (condicionaux -> SEMICOLON seen_end_condicion .)
    RIGHTBRACE      reduce using rule 80 (condicionaux -> SEMICOLON seen_end_condicion .)


state 177

    (99) while -> WHILE seen_while LEFTPARENTHESES expresion RIGHTPARENTHESES seen_right_parentheses_while bloque SEMICOLON . seen_end_while
    (102) seen_end_while -> .

    IF              reduce using rule 102 (seen_end_while -> .)
    PRINT           reduce using rule 102 (seen_end_while -> .)
    WHILE           reduce using rule 102 (seen_end_while -> .)
    ID              reduce using rule 102 (seen_end_while -> .)
    INT_CTE         reduce using rule 102 (seen_end_while -> .)
    FLOAT_CTE       reduce using rule 102 (seen_end_while -> .)
    RETURN          reduce using rule 102 (seen_end_while -> .)
    RIGHTBRACE      reduce using rule 102 (seen_end_while -> .)

    seen_end_while                 shift and go to state 181

state 178

    (103) functionCall -> ID seen_fCall_id LEFTPARENTHESES seen_leftp_fCall paramsFunctionCall seen_end_paramsFCall RIGHTPARENTHESES seen_rightp_fCall . SEMICOLON

    SEMICOLON       shift and go to state 182


state 179

    (106) paramsFunctionCall -> expresion seen_parameter_fCall COMMA seen_comma_params_fCall . paramsFunctionCall
    (106) paramsFunctionCall -> . expresion seen_parameter_fCall COMMA seen_comma_params_fCall paramsFunctionCall
    (107) paramsFunctionCall -> . expresion seen_parameter_fCall seen_comma_params_fCall
    (57) expresion -> . exp seen_comparacion
    (58) expresion -> . exp seen_comparacion expresionaux exp seen_comparacion
    (70) exp -> . termino seen_termino
    (71) exp -> . termino seen_termino expaux
    (74) termino -> . factor seen_factor
    (75) termino -> . factor seen_factor terminoaux
    (84) factor -> . factoraux
    (85) factor -> . varcte
    (86) factoraux -> . LEFTPARENTHESES seen_insert_fondo expresion RIGHTPARENTHESES seen_remove_fondo
    (87) varcte -> . ID seen_ID
    (88) varcte -> . INT_CTE seen_CTE_INT
    (89) varcte -> . FLOAT_CTE seen_CTE_FLOAT

    LEFTPARENTHESES shift and go to state 101
    ID              shift and go to state 102
    INT_CTE         shift and go to state 76
    FLOAT_CTE       shift and go to state 77

    expresion                      shift and go to state 145
    paramsFunctionCall             shift and go to state 183
    exp                            shift and go to state 96
    termino                        shift and go to state 97
    factor                         shift and go to state 98
    factoraux                      shift and go to state 99
    varcte                         shift and go to state 100

state 180

    (79) condicionaux -> ELSE seen_else bloque . SEMICOLON seen_end_condicion

    SEMICOLON       shift and go to state 184


state 181

    (99) while -> WHILE seen_while LEFTPARENTHESES expresion RIGHTPARENTHESES seen_right_parentheses_while bloque SEMICOLON seen_end_while .

    IF              reduce using rule 99 (while -> WHILE seen_while LEFTPARENTHESES expresion RIGHTPARENTHESES seen_right_parentheses_while bloque SEMICOLON seen_end_while .)
    PRINT           reduce using rule 99 (while -> WHILE seen_while LEFTPARENTHESES expresion RIGHTPARENTHESES seen_right_parentheses_while bloque SEMICOLON seen_end_while .)
    WHILE           reduce using rule 99 (while -> WHILE seen_while LEFTPARENTHESES expresion RIGHTPARENTHESES seen_right_parentheses_while bloque SEMICOLON seen_end_while .)
    ID              reduce using rule 99 (while -> WHILE seen_while LEFTPARENTHESES expresion RIGHTPARENTHESES seen_right_parentheses_while bloque SEMICOLON seen_end_while .)
    INT_CTE         reduce using rule 99 (while -> WHILE seen_while LEFTPARENTHESES expresion RIGHTPARENTHESES seen_right_parentheses_while bloque SEMICOLON seen_end_while .)
    FLOAT_CTE       reduce using rule 99 (while -> WHILE seen_while LEFTPARENTHESES expresion RIGHTPARENTHESES seen_right_parentheses_while bloque SEMICOLON seen_end_while .)
    RETURN          reduce using rule 99 (while -> WHILE seen_while LEFTPARENTHESES expresion RIGHTPARENTHESES seen_right_parentheses_while bloque SEMICOLON seen_end_while .)
    RIGHTBRACE      reduce using rule 99 (while -> WHILE seen_while LEFTPARENTHESES expresion RIGHTPARENTHESES seen_right_parentheses_while bloque SEMICOLON seen_end_while .)


state 182

    (103) functionCall -> ID seen_fCall_id LEFTPARENTHESES seen_leftp_fCall paramsFunctionCall seen_end_paramsFCall RIGHTPARENTHESES seen_rightp_fCall SEMICOLON .

    IF              reduce using rule 103 (functionCall -> ID seen_fCall_id LEFTPARENTHESES seen_leftp_fCall paramsFunctionCall seen_end_paramsFCall RIGHTPARENTHESES seen_rightp_fCall SEMICOLON .)
    PRINT           reduce using rule 103 (functionCall -> ID seen_fCall_id LEFTPARENTHESES seen_leftp_fCall paramsFunctionCall seen_end_paramsFCall RIGHTPARENTHESES seen_rightp_fCall SEMICOLON .)
    WHILE           reduce using rule 103 (functionCall -> ID seen_fCall_id LEFTPARENTHESES seen_leftp_fCall paramsFunctionCall seen_end_paramsFCall RIGHTPARENTHESES seen_rightp_fCall SEMICOLON .)
    ID              reduce using rule 103 (functionCall -> ID seen_fCall_id LEFTPARENTHESES seen_leftp_fCall paramsFunctionCall seen_end_paramsFCall RIGHTPARENTHESES seen_rightp_fCall SEMICOLON .)
    INT_CTE         reduce using rule 103 (functionCall -> ID seen_fCall_id LEFTPARENTHESES seen_leftp_fCall paramsFunctionCall seen_end_paramsFCall RIGHTPARENTHESES seen_rightp_fCall SEMICOLON .)
    FLOAT_CTE       reduce using rule 103 (functionCall -> ID seen_fCall_id LEFTPARENTHESES seen_leftp_fCall paramsFunctionCall seen_end_paramsFCall RIGHTPARENTHESES seen_rightp_fCall SEMICOLON .)
    RETURN          reduce using rule 103 (functionCall -> ID seen_fCall_id LEFTPARENTHESES seen_leftp_fCall paramsFunctionCall seen_end_paramsFCall RIGHTPARENTHESES seen_rightp_fCall SEMICOLON .)
    RIGHTBRACE      reduce using rule 103 (functionCall -> ID seen_fCall_id LEFTPARENTHESES seen_leftp_fCall paramsFunctionCall seen_end_paramsFCall RIGHTPARENTHESES seen_rightp_fCall SEMICOLON .)


state 183

    (106) paramsFunctionCall -> expresion seen_parameter_fCall COMMA seen_comma_params_fCall paramsFunctionCall .

    RIGHTPARENTHESES reduce using rule 106 (paramsFunctionCall -> expresion seen_parameter_fCall COMMA seen_comma_params_fCall paramsFunctionCall .)


state 184

    (79) condicionaux -> ELSE seen_else bloque SEMICOLON . seen_end_condicion
    (83) seen_end_condicion -> .

    IF              reduce using rule 83 (seen_end_condicion -> .)
    PRINT           reduce using rule 83 (seen_end_condicion -> .)
    WHILE           reduce using rule 83 (seen_end_condicion -> .)
    ID              reduce using rule 83 (seen_end_condicion -> .)
    INT_CTE         reduce using rule 83 (seen_end_condicion -> .)
    FLOAT_CTE       reduce using rule 83 (seen_end_condicion -> .)
    RETURN          reduce using rule 83 (seen_end_condicion -> .)
    RIGHTBRACE      reduce using rule 83 (seen_end_condicion -> .)

    seen_end_condicion             shift and go to state 185

state 185

    (79) condicionaux -> ELSE seen_else bloque SEMICOLON seen_end_condicion .

    IF              reduce using rule 79 (condicionaux -> ELSE seen_else bloque SEMICOLON seen_end_condicion .)
    PRINT           reduce using rule 79 (condicionaux -> ELSE seen_else bloque SEMICOLON seen_end_condicion .)
    WHILE           reduce using rule 79 (condicionaux -> ELSE seen_else bloque SEMICOLON seen_end_condicion .)
    ID              reduce using rule 79 (condicionaux -> ELSE seen_else bloque SEMICOLON seen_end_condicion .)
    INT_CTE         reduce using rule 79 (condicionaux -> ELSE seen_else bloque SEMICOLON seen_end_condicion .)
    FLOAT_CTE       reduce using rule 79 (condicionaux -> ELSE seen_else bloque SEMICOLON seen_end_condicion .)
    RETURN          reduce using rule 79 (condicionaux -> ELSE seen_else bloque SEMICOLON seen_end_condicion .)
    RIGHTBRACE      reduce using rule 79 (condicionaux -> ELSE seen_else bloque SEMICOLON seen_end_condicion .)

