Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    BOOLEAN_CTE
    COLON
    NOTEQUAL
    READ

Grammar

Rule 0     S' -> calc
Rule 1     calc -> PROGRAMA ID seen_program SEMICOLON vars modulesaux functionmain
Rule 2     modulesaux -> function modulesaux
Rule 3     modulesaux -> <empty>
Rule 4     seen_program -> <empty>
Rule 5     vars -> VAR seen_vars tipo ID seen_ID_var varsaux SEMICOLON vars
Rule 6     vars -> empty
Rule 7     seen_vars -> <empty>
Rule 8     seen_vars_end -> <empty>
Rule 9     varsaux -> COMMA ID seen_ID_var varsaux
Rule 10    varsaux -> <empty>
Rule 11    seen_ID_var -> <empty>
Rule 12    tipo -> INT seen_tipo
Rule 13    tipo -> FLOAT seen_tipo
Rule 14    tipo -> BOOLEAN seen_tipo
Rule 15    seen_tipo -> <empty>
Rule 16    function -> FUNCTION returnfunctionaux ID seen_id_function params bloque seen_function_end
Rule 17    seen_id_function -> <empty>
Rule 18    seen_function_end -> <empty>
Rule 19    functionmain -> MAIN seen_function_main LEFTPARENTHESES RIGHTPARENTHESES bloque
Rule 20    seen_function_main -> <empty>
Rule 21    returnfunctionaux -> tipo
Rule 22    returnfunctionaux -> VOID seen_void
Rule 23    seen_void -> <empty>
Rule 24    params -> LEFTPARENTHESES seen_params_init paramsaux RIGHTPARENTHESES
Rule 25    seen_params_init -> <empty>
Rule 26    seen_params_end -> <empty>
Rule 27    paramsaux -> tipo ID seen_ID_params paramsaux
Rule 28    paramsaux -> COMMA paramsaux
Rule 29    paramsaux -> empty
Rule 30    seen_ID_params -> <empty>
Rule 31    bloque -> LEFTBRACE vars bloqueaux RIGHTBRACE
Rule 32    bloqueaux -> estatuto bloqueaux
Rule 33    bloqueaux -> <empty>
Rule 34    estatuto -> asignacion
Rule 35    estatuto -> condicion
Rule 36    estatuto -> escritura
Rule 37    estatuto -> while
Rule 38    asignacion -> varcte EQUALS seen_equals expresion seen_final_asignacion SEMICOLON
Rule 39    seen_equals -> <empty>
Rule 40    seen_final_asignacion -> <empty>
Rule 41    expresion -> exp seen_comparacion
Rule 42    expresion -> exp seen_comparacion expresionaux exp seen_comparacion
Rule 43    expresionaux -> GREATERTHAN seen_operador
Rule 44    expresionaux -> LESSTHAN seen_operador
Rule 45    expresionaux -> NOTEQUALS seen_operador
Rule 46    expresionaux -> <empty>
Rule 47    escritura -> PRINT LEFTPARENTHESES escrituraaux RIGHTPARENTHESES SEMICOLON
Rule 48    escrituraaux -> expresion
Rule 49    escrituraaux -> STRING_CTE
Rule 50    escrituraaux -> expresion COMMA escrituraaux
Rule 51    escrituraaux -> STRING_CTE COMMA escrituraaux
Rule 52    exp -> termino seen_termino
Rule 53    exp -> termino seen_termino expaux
Rule 54    expaux -> PLUS seen_operador exp
Rule 55    expaux -> MINUS seen_operador exp
Rule 56    termino -> factor seen_factor
Rule 57    termino -> factor seen_factor terminoaux
Rule 58    terminoaux -> DIVIDE seen_operador termino
Rule 59    terminoaux -> MULTIPLY seen_operador termino
Rule 60    condicion -> IF LEFTPARENTHESES expresion RIGHTPARENTHESES seen_right_parentheses_condicion bloque condicionaux
Rule 61    condicionaux -> ELSE seen_else bloque SEMICOLON seen_end_condicion
Rule 62    condicionaux -> SEMICOLON seen_end_condicion
Rule 63    seen_right_parentheses_condicion -> <empty>
Rule 64    seen_else -> <empty>
Rule 65    seen_end_condicion -> <empty>
Rule 66    factor -> factoraux
Rule 67    factor -> varcte
Rule 68    factoraux -> LEFTPARENTHESES seen_insert_fondo expresion RIGHTPARENTHESES seen_remove_fondo
Rule 69    varcte -> ID seen_ID
Rule 70    varcte -> INT_CTE seen_CTE_INT
Rule 71    varcte -> FLOAT_CTE seen_CTE_FLOAT
Rule 72    seen_CTE_INT -> <empty>
Rule 73    seen_CTE_FLOAT -> <empty>
Rule 74    seen_insert_fondo -> <empty>
Rule 75    seen_remove_fondo -> <empty>
Rule 76    seen_ID -> <empty>
Rule 77    seen_operador -> <empty>
Rule 78    seen_termino -> <empty>
Rule 79    seen_factor -> <empty>
Rule 80    seen_comparacion -> <empty>
Rule 81    while -> WHILE seen_while LEFTPARENTHESES expresion RIGHTPARENTHESES seen_right_parentheses_while bloque SEMICOLON seen_end_while
Rule 82    seen_while -> <empty>
Rule 83    seen_right_parentheses_while -> <empty>
Rule 84    seen_end_while -> <empty>
Rule 85    arrayIntDefinition -> LEFTBRACKET INT_CTE RIGHTBRACKET
Rule 86    empty -> <empty>

Terminals, with rules where they appear

BOOLEAN              : 14
BOOLEAN_CTE          : 
COLON                : 
COMMA                : 9 28 50 51
DIVIDE               : 58
ELSE                 : 61
EQUALS               : 38
FLOAT                : 13
FLOAT_CTE            : 71
FUNCTION             : 16
GREATERTHAN          : 43
ID                   : 1 5 9 16 27 69
IF                   : 60
INT                  : 12
INT_CTE              : 70 85
LEFTBRACE            : 31
LEFTBRACKET          : 85
LEFTPARENTHESES      : 19 24 47 60 68 81
LESSTHAN             : 44
MAIN                 : 19
MINUS                : 55
MULTIPLY             : 59
NOTEQUAL             : 
NOTEQUALS            : 45
PLUS                 : 54
PRINT                : 47
PROGRAMA             : 1
READ                 : 
RIGHTBRACE           : 31
RIGHTBRACKET         : 85
RIGHTPARENTHESES     : 19 24 47 60 68 81
SEMICOLON            : 1 5 38 47 61 62 81
STRING_CTE           : 49 51
VAR                  : 5
VOID                 : 22
WHILE                : 81
error                : 

Nonterminals, with rules where they appear

arrayIntDefinition   : 
asignacion           : 34
bloque               : 16 19 60 61 81
bloqueaux            : 31 32
calc                 : 0
condicion            : 35
condicionaux         : 60
empty                : 6 29
escritura            : 36
escrituraaux         : 47 50 51
estatuto             : 32
exp                  : 41 42 42 54 55
expaux               : 53
expresion            : 38 48 50 60 68 81
expresionaux         : 42
factor               : 56 57
factoraux            : 66
function             : 2
functionmain         : 1
modulesaux           : 1 2
params               : 16
paramsaux            : 24 27 28
returnfunctionaux    : 16
seen_CTE_FLOAT       : 71
seen_CTE_INT         : 70
seen_ID              : 69
seen_ID_params       : 27
seen_ID_var          : 5 9
seen_comparacion     : 41 42 42
seen_else            : 61
seen_end_condicion   : 61 62
seen_end_while       : 81
seen_equals          : 38
seen_factor          : 56 57
seen_final_asignacion : 38
seen_function_end    : 16
seen_function_main   : 19
seen_id_function     : 16
seen_insert_fondo    : 68
seen_operador        : 43 44 45 54 55 58 59
seen_params_end      : 
seen_params_init     : 24
seen_program         : 1
seen_remove_fondo    : 68
seen_right_parentheses_condicion : 60
seen_right_parentheses_while : 81
seen_termino         : 52 53
seen_tipo            : 12 13 14
seen_vars            : 5
seen_vars_end        : 
seen_void            : 22
seen_while           : 81
termino              : 52 53 58 59
terminoaux           : 57
tipo                 : 5 21 27
varcte               : 38 67
vars                 : 1 5 31
varsaux              : 5 9
while                : 37

Parsing method: LALR

state 0

    (0) S' -> . calc
    (1) calc -> . PROGRAMA ID seen_program SEMICOLON vars modulesaux functionmain

    PROGRAMA        shift and go to state 2

    calc                           shift and go to state 1

state 1

    (0) S' -> calc .



state 2

    (1) calc -> PROGRAMA . ID seen_program SEMICOLON vars modulesaux functionmain

    ID              shift and go to state 3


state 3

    (1) calc -> PROGRAMA ID . seen_program SEMICOLON vars modulesaux functionmain
    (4) seen_program -> .

    SEMICOLON       reduce using rule 4 (seen_program -> .)

    seen_program                   shift and go to state 4

state 4

    (1) calc -> PROGRAMA ID seen_program . SEMICOLON vars modulesaux functionmain

    SEMICOLON       shift and go to state 5


state 5

    (1) calc -> PROGRAMA ID seen_program SEMICOLON . vars modulesaux functionmain
    (5) vars -> . VAR seen_vars tipo ID seen_ID_var varsaux SEMICOLON vars
    (6) vars -> . empty
    (86) empty -> .

    VAR             shift and go to state 7
    FUNCTION        reduce using rule 86 (empty -> .)
    MAIN            reduce using rule 86 (empty -> .)

    vars                           shift and go to state 6
    empty                          shift and go to state 8

state 6

    (1) calc -> PROGRAMA ID seen_program SEMICOLON vars . modulesaux functionmain
    (2) modulesaux -> . function modulesaux
    (3) modulesaux -> .
    (16) function -> . FUNCTION returnfunctionaux ID seen_id_function params bloque seen_function_end

    MAIN            reduce using rule 3 (modulesaux -> .)
    FUNCTION        shift and go to state 11

    modulesaux                     shift and go to state 9
    function                       shift and go to state 10

state 7

    (5) vars -> VAR . seen_vars tipo ID seen_ID_var varsaux SEMICOLON vars
    (7) seen_vars -> .

    INT             reduce using rule 7 (seen_vars -> .)
    FLOAT           reduce using rule 7 (seen_vars -> .)
    BOOLEAN         reduce using rule 7 (seen_vars -> .)

    seen_vars                      shift and go to state 12

state 8

    (6) vars -> empty .

    FUNCTION        reduce using rule 6 (vars -> empty .)
    MAIN            reduce using rule 6 (vars -> empty .)
    IF              reduce using rule 6 (vars -> empty .)
    PRINT           reduce using rule 6 (vars -> empty .)
    WHILE           reduce using rule 6 (vars -> empty .)
    ID              reduce using rule 6 (vars -> empty .)
    INT_CTE         reduce using rule 6 (vars -> empty .)
    FLOAT_CTE       reduce using rule 6 (vars -> empty .)
    RIGHTBRACE      reduce using rule 6 (vars -> empty .)


state 9

    (1) calc -> PROGRAMA ID seen_program SEMICOLON vars modulesaux . functionmain
    (19) functionmain -> . MAIN seen_function_main LEFTPARENTHESES RIGHTPARENTHESES bloque

    MAIN            shift and go to state 14

    functionmain                   shift and go to state 13

state 10

    (2) modulesaux -> function . modulesaux
    (2) modulesaux -> . function modulesaux
    (3) modulesaux -> .
    (16) function -> . FUNCTION returnfunctionaux ID seen_id_function params bloque seen_function_end

    MAIN            reduce using rule 3 (modulesaux -> .)
    FUNCTION        shift and go to state 11

    function                       shift and go to state 10
    modulesaux                     shift and go to state 15

state 11

    (16) function -> FUNCTION . returnfunctionaux ID seen_id_function params bloque seen_function_end
    (21) returnfunctionaux -> . tipo
    (22) returnfunctionaux -> . VOID seen_void
    (12) tipo -> . INT seen_tipo
    (13) tipo -> . FLOAT seen_tipo
    (14) tipo -> . BOOLEAN seen_tipo

    VOID            shift and go to state 18
    INT             shift and go to state 19
    FLOAT           shift and go to state 20
    BOOLEAN         shift and go to state 21

    returnfunctionaux              shift and go to state 16
    tipo                           shift and go to state 17

state 12

    (5) vars -> VAR seen_vars . tipo ID seen_ID_var varsaux SEMICOLON vars
    (12) tipo -> . INT seen_tipo
    (13) tipo -> . FLOAT seen_tipo
    (14) tipo -> . BOOLEAN seen_tipo

    INT             shift and go to state 19
    FLOAT           shift and go to state 20
    BOOLEAN         shift and go to state 21

    tipo                           shift and go to state 22

state 13

    (1) calc -> PROGRAMA ID seen_program SEMICOLON vars modulesaux functionmain .

    $end            reduce using rule 1 (calc -> PROGRAMA ID seen_program SEMICOLON vars modulesaux functionmain .)


state 14

    (19) functionmain -> MAIN . seen_function_main LEFTPARENTHESES RIGHTPARENTHESES bloque
    (20) seen_function_main -> .

    LEFTPARENTHESES reduce using rule 20 (seen_function_main -> .)

    seen_function_main             shift and go to state 23

state 15

    (2) modulesaux -> function modulesaux .

    MAIN            reduce using rule 2 (modulesaux -> function modulesaux .)


state 16

    (16) function -> FUNCTION returnfunctionaux . ID seen_id_function params bloque seen_function_end

    ID              shift and go to state 24


state 17

    (21) returnfunctionaux -> tipo .

    ID              reduce using rule 21 (returnfunctionaux -> tipo .)


state 18

    (22) returnfunctionaux -> VOID . seen_void
    (23) seen_void -> .

    ID              reduce using rule 23 (seen_void -> .)

    seen_void                      shift and go to state 25

state 19

    (12) tipo -> INT . seen_tipo
    (15) seen_tipo -> .

    ID              reduce using rule 15 (seen_tipo -> .)

    seen_tipo                      shift and go to state 26

state 20

    (13) tipo -> FLOAT . seen_tipo
    (15) seen_tipo -> .

    ID              reduce using rule 15 (seen_tipo -> .)

    seen_tipo                      shift and go to state 27

state 21

    (14) tipo -> BOOLEAN . seen_tipo
    (15) seen_tipo -> .

    ID              reduce using rule 15 (seen_tipo -> .)

    seen_tipo                      shift and go to state 28

state 22

    (5) vars -> VAR seen_vars tipo . ID seen_ID_var varsaux SEMICOLON vars

    ID              shift and go to state 29


state 23

    (19) functionmain -> MAIN seen_function_main . LEFTPARENTHESES RIGHTPARENTHESES bloque

    LEFTPARENTHESES shift and go to state 30


state 24

    (16) function -> FUNCTION returnfunctionaux ID . seen_id_function params bloque seen_function_end
    (17) seen_id_function -> .

    LEFTPARENTHESES reduce using rule 17 (seen_id_function -> .)

    seen_id_function               shift and go to state 31

state 25

    (22) returnfunctionaux -> VOID seen_void .

    ID              reduce using rule 22 (returnfunctionaux -> VOID seen_void .)


state 26

    (12) tipo -> INT seen_tipo .

    ID              reduce using rule 12 (tipo -> INT seen_tipo .)


state 27

    (13) tipo -> FLOAT seen_tipo .

    ID              reduce using rule 13 (tipo -> FLOAT seen_tipo .)


state 28

    (14) tipo -> BOOLEAN seen_tipo .

    ID              reduce using rule 14 (tipo -> BOOLEAN seen_tipo .)


state 29

    (5) vars -> VAR seen_vars tipo ID . seen_ID_var varsaux SEMICOLON vars
    (11) seen_ID_var -> .

    COMMA           reduce using rule 11 (seen_ID_var -> .)
    SEMICOLON       reduce using rule 11 (seen_ID_var -> .)

    seen_ID_var                    shift and go to state 32

state 30

    (19) functionmain -> MAIN seen_function_main LEFTPARENTHESES . RIGHTPARENTHESES bloque

    RIGHTPARENTHESES shift and go to state 33


state 31

    (16) function -> FUNCTION returnfunctionaux ID seen_id_function . params bloque seen_function_end
    (24) params -> . LEFTPARENTHESES seen_params_init paramsaux RIGHTPARENTHESES

    LEFTPARENTHESES shift and go to state 35

    params                         shift and go to state 34

state 32

    (5) vars -> VAR seen_vars tipo ID seen_ID_var . varsaux SEMICOLON vars
    (9) varsaux -> . COMMA ID seen_ID_var varsaux
    (10) varsaux -> .

    COMMA           shift and go to state 37
    SEMICOLON       reduce using rule 10 (varsaux -> .)

    varsaux                        shift and go to state 36

state 33

    (19) functionmain -> MAIN seen_function_main LEFTPARENTHESES RIGHTPARENTHESES . bloque
    (31) bloque -> . LEFTBRACE vars bloqueaux RIGHTBRACE

    LEFTBRACE       shift and go to state 39

    bloque                         shift and go to state 38

state 34

    (16) function -> FUNCTION returnfunctionaux ID seen_id_function params . bloque seen_function_end
    (31) bloque -> . LEFTBRACE vars bloqueaux RIGHTBRACE

    LEFTBRACE       shift and go to state 39

    bloque                         shift and go to state 40

state 35

    (24) params -> LEFTPARENTHESES . seen_params_init paramsaux RIGHTPARENTHESES
    (25) seen_params_init -> .

    COMMA           reduce using rule 25 (seen_params_init -> .)
    INT             reduce using rule 25 (seen_params_init -> .)
    FLOAT           reduce using rule 25 (seen_params_init -> .)
    BOOLEAN         reduce using rule 25 (seen_params_init -> .)
    RIGHTPARENTHESES reduce using rule 25 (seen_params_init -> .)

    seen_params_init               shift and go to state 41

state 36

    (5) vars -> VAR seen_vars tipo ID seen_ID_var varsaux . SEMICOLON vars

    SEMICOLON       shift and go to state 42


state 37

    (9) varsaux -> COMMA . ID seen_ID_var varsaux

    ID              shift and go to state 43


state 38

    (19) functionmain -> MAIN seen_function_main LEFTPARENTHESES RIGHTPARENTHESES bloque .

    $end            reduce using rule 19 (functionmain -> MAIN seen_function_main LEFTPARENTHESES RIGHTPARENTHESES bloque .)


state 39

    (31) bloque -> LEFTBRACE . vars bloqueaux RIGHTBRACE
    (5) vars -> . VAR seen_vars tipo ID seen_ID_var varsaux SEMICOLON vars
    (6) vars -> . empty
    (86) empty -> .

    VAR             shift and go to state 7
    IF              reduce using rule 86 (empty -> .)
    PRINT           reduce using rule 86 (empty -> .)
    WHILE           reduce using rule 86 (empty -> .)
    ID              reduce using rule 86 (empty -> .)
    INT_CTE         reduce using rule 86 (empty -> .)
    FLOAT_CTE       reduce using rule 86 (empty -> .)
    RIGHTBRACE      reduce using rule 86 (empty -> .)

    vars                           shift and go to state 44
    empty                          shift and go to state 8

state 40

    (16) function -> FUNCTION returnfunctionaux ID seen_id_function params bloque . seen_function_end
    (18) seen_function_end -> .

    FUNCTION        reduce using rule 18 (seen_function_end -> .)
    MAIN            reduce using rule 18 (seen_function_end -> .)

    seen_function_end              shift and go to state 45

state 41

    (24) params -> LEFTPARENTHESES seen_params_init . paramsaux RIGHTPARENTHESES
    (27) paramsaux -> . tipo ID seen_ID_params paramsaux
    (28) paramsaux -> . COMMA paramsaux
    (29) paramsaux -> . empty
    (12) tipo -> . INT seen_tipo
    (13) tipo -> . FLOAT seen_tipo
    (14) tipo -> . BOOLEAN seen_tipo
    (86) empty -> .

    COMMA           shift and go to state 48
    INT             shift and go to state 19
    FLOAT           shift and go to state 20
    BOOLEAN         shift and go to state 21
    RIGHTPARENTHESES reduce using rule 86 (empty -> .)

    paramsaux                      shift and go to state 46
    tipo                           shift and go to state 47
    empty                          shift and go to state 49

state 42

    (5) vars -> VAR seen_vars tipo ID seen_ID_var varsaux SEMICOLON . vars
    (5) vars -> . VAR seen_vars tipo ID seen_ID_var varsaux SEMICOLON vars
    (6) vars -> . empty
    (86) empty -> .

    VAR             shift and go to state 7
    FUNCTION        reduce using rule 86 (empty -> .)
    MAIN            reduce using rule 86 (empty -> .)
    IF              reduce using rule 86 (empty -> .)
    PRINT           reduce using rule 86 (empty -> .)
    WHILE           reduce using rule 86 (empty -> .)
    ID              reduce using rule 86 (empty -> .)
    INT_CTE         reduce using rule 86 (empty -> .)
    FLOAT_CTE       reduce using rule 86 (empty -> .)
    RIGHTBRACE      reduce using rule 86 (empty -> .)

    vars                           shift and go to state 50
    empty                          shift and go to state 8

state 43

    (9) varsaux -> COMMA ID . seen_ID_var varsaux
    (11) seen_ID_var -> .

    COMMA           reduce using rule 11 (seen_ID_var -> .)
    SEMICOLON       reduce using rule 11 (seen_ID_var -> .)

    seen_ID_var                    shift and go to state 51

state 44

    (31) bloque -> LEFTBRACE vars . bloqueaux RIGHTBRACE
    (32) bloqueaux -> . estatuto bloqueaux
    (33) bloqueaux -> .
    (34) estatuto -> . asignacion
    (35) estatuto -> . condicion
    (36) estatuto -> . escritura
    (37) estatuto -> . while
    (38) asignacion -> . varcte EQUALS seen_equals expresion seen_final_asignacion SEMICOLON
    (60) condicion -> . IF LEFTPARENTHESES expresion RIGHTPARENTHESES seen_right_parentheses_condicion bloque condicionaux
    (47) escritura -> . PRINT LEFTPARENTHESES escrituraaux RIGHTPARENTHESES SEMICOLON
    (81) while -> . WHILE seen_while LEFTPARENTHESES expresion RIGHTPARENTHESES seen_right_parentheses_while bloque SEMICOLON seen_end_while
    (69) varcte -> . ID seen_ID
    (70) varcte -> . INT_CTE seen_CTE_INT
    (71) varcte -> . FLOAT_CTE seen_CTE_FLOAT

    RIGHTBRACE      reduce using rule 33 (bloqueaux -> .)
    IF              shift and go to state 59
    PRINT           shift and go to state 60
    WHILE           shift and go to state 61
    ID              shift and go to state 62
    INT_CTE         shift and go to state 63
    FLOAT_CTE       shift and go to state 64

    bloqueaux                      shift and go to state 52
    estatuto                       shift and go to state 53
    asignacion                     shift and go to state 54
    condicion                      shift and go to state 55
    escritura                      shift and go to state 56
    while                          shift and go to state 57
    varcte                         shift and go to state 58

state 45

    (16) function -> FUNCTION returnfunctionaux ID seen_id_function params bloque seen_function_end .

    FUNCTION        reduce using rule 16 (function -> FUNCTION returnfunctionaux ID seen_id_function params bloque seen_function_end .)
    MAIN            reduce using rule 16 (function -> FUNCTION returnfunctionaux ID seen_id_function params bloque seen_function_end .)


state 46

    (24) params -> LEFTPARENTHESES seen_params_init paramsaux . RIGHTPARENTHESES

    RIGHTPARENTHESES shift and go to state 65


state 47

    (27) paramsaux -> tipo . ID seen_ID_params paramsaux

    ID              shift and go to state 66


state 48

    (28) paramsaux -> COMMA . paramsaux
    (27) paramsaux -> . tipo ID seen_ID_params paramsaux
    (28) paramsaux -> . COMMA paramsaux
    (29) paramsaux -> . empty
    (12) tipo -> . INT seen_tipo
    (13) tipo -> . FLOAT seen_tipo
    (14) tipo -> . BOOLEAN seen_tipo
    (86) empty -> .

    COMMA           shift and go to state 48
    INT             shift and go to state 19
    FLOAT           shift and go to state 20
    BOOLEAN         shift and go to state 21
    RIGHTPARENTHESES reduce using rule 86 (empty -> .)

    paramsaux                      shift and go to state 67
    tipo                           shift and go to state 47
    empty                          shift and go to state 49

state 49

    (29) paramsaux -> empty .

    RIGHTPARENTHESES reduce using rule 29 (paramsaux -> empty .)


state 50

    (5) vars -> VAR seen_vars tipo ID seen_ID_var varsaux SEMICOLON vars .

    FUNCTION        reduce using rule 5 (vars -> VAR seen_vars tipo ID seen_ID_var varsaux SEMICOLON vars .)
    MAIN            reduce using rule 5 (vars -> VAR seen_vars tipo ID seen_ID_var varsaux SEMICOLON vars .)
    IF              reduce using rule 5 (vars -> VAR seen_vars tipo ID seen_ID_var varsaux SEMICOLON vars .)
    PRINT           reduce using rule 5 (vars -> VAR seen_vars tipo ID seen_ID_var varsaux SEMICOLON vars .)
    WHILE           reduce using rule 5 (vars -> VAR seen_vars tipo ID seen_ID_var varsaux SEMICOLON vars .)
    ID              reduce using rule 5 (vars -> VAR seen_vars tipo ID seen_ID_var varsaux SEMICOLON vars .)
    INT_CTE         reduce using rule 5 (vars -> VAR seen_vars tipo ID seen_ID_var varsaux SEMICOLON vars .)
    FLOAT_CTE       reduce using rule 5 (vars -> VAR seen_vars tipo ID seen_ID_var varsaux SEMICOLON vars .)
    RIGHTBRACE      reduce using rule 5 (vars -> VAR seen_vars tipo ID seen_ID_var varsaux SEMICOLON vars .)


state 51

    (9) varsaux -> COMMA ID seen_ID_var . varsaux
    (9) varsaux -> . COMMA ID seen_ID_var varsaux
    (10) varsaux -> .

    COMMA           shift and go to state 37
    SEMICOLON       reduce using rule 10 (varsaux -> .)

    varsaux                        shift and go to state 68

state 52

    (31) bloque -> LEFTBRACE vars bloqueaux . RIGHTBRACE

    RIGHTBRACE      shift and go to state 69


state 53

    (32) bloqueaux -> estatuto . bloqueaux
    (32) bloqueaux -> . estatuto bloqueaux
    (33) bloqueaux -> .
    (34) estatuto -> . asignacion
    (35) estatuto -> . condicion
    (36) estatuto -> . escritura
    (37) estatuto -> . while
    (38) asignacion -> . varcte EQUALS seen_equals expresion seen_final_asignacion SEMICOLON
    (60) condicion -> . IF LEFTPARENTHESES expresion RIGHTPARENTHESES seen_right_parentheses_condicion bloque condicionaux
    (47) escritura -> . PRINT LEFTPARENTHESES escrituraaux RIGHTPARENTHESES SEMICOLON
    (81) while -> . WHILE seen_while LEFTPARENTHESES expresion RIGHTPARENTHESES seen_right_parentheses_while bloque SEMICOLON seen_end_while
    (69) varcte -> . ID seen_ID
    (70) varcte -> . INT_CTE seen_CTE_INT
    (71) varcte -> . FLOAT_CTE seen_CTE_FLOAT

    RIGHTBRACE      reduce using rule 33 (bloqueaux -> .)
    IF              shift and go to state 59
    PRINT           shift and go to state 60
    WHILE           shift and go to state 61
    ID              shift and go to state 62
    INT_CTE         shift and go to state 63
    FLOAT_CTE       shift and go to state 64

    estatuto                       shift and go to state 53
    bloqueaux                      shift and go to state 70
    asignacion                     shift and go to state 54
    condicion                      shift and go to state 55
    escritura                      shift and go to state 56
    while                          shift and go to state 57
    varcte                         shift and go to state 58

state 54

    (34) estatuto -> asignacion .

    IF              reduce using rule 34 (estatuto -> asignacion .)
    PRINT           reduce using rule 34 (estatuto -> asignacion .)
    WHILE           reduce using rule 34 (estatuto -> asignacion .)
    ID              reduce using rule 34 (estatuto -> asignacion .)
    INT_CTE         reduce using rule 34 (estatuto -> asignacion .)
    FLOAT_CTE       reduce using rule 34 (estatuto -> asignacion .)
    RIGHTBRACE      reduce using rule 34 (estatuto -> asignacion .)


state 55

    (35) estatuto -> condicion .

    IF              reduce using rule 35 (estatuto -> condicion .)
    PRINT           reduce using rule 35 (estatuto -> condicion .)
    WHILE           reduce using rule 35 (estatuto -> condicion .)
    ID              reduce using rule 35 (estatuto -> condicion .)
    INT_CTE         reduce using rule 35 (estatuto -> condicion .)
    FLOAT_CTE       reduce using rule 35 (estatuto -> condicion .)
    RIGHTBRACE      reduce using rule 35 (estatuto -> condicion .)


state 56

    (36) estatuto -> escritura .

    IF              reduce using rule 36 (estatuto -> escritura .)
    PRINT           reduce using rule 36 (estatuto -> escritura .)
    WHILE           reduce using rule 36 (estatuto -> escritura .)
    ID              reduce using rule 36 (estatuto -> escritura .)
    INT_CTE         reduce using rule 36 (estatuto -> escritura .)
    FLOAT_CTE       reduce using rule 36 (estatuto -> escritura .)
    RIGHTBRACE      reduce using rule 36 (estatuto -> escritura .)


state 57

    (37) estatuto -> while .

    IF              reduce using rule 37 (estatuto -> while .)
    PRINT           reduce using rule 37 (estatuto -> while .)
    WHILE           reduce using rule 37 (estatuto -> while .)
    ID              reduce using rule 37 (estatuto -> while .)
    INT_CTE         reduce using rule 37 (estatuto -> while .)
    FLOAT_CTE       reduce using rule 37 (estatuto -> while .)
    RIGHTBRACE      reduce using rule 37 (estatuto -> while .)


state 58

    (38) asignacion -> varcte . EQUALS seen_equals expresion seen_final_asignacion SEMICOLON

    EQUALS          shift and go to state 71


state 59

    (60) condicion -> IF . LEFTPARENTHESES expresion RIGHTPARENTHESES seen_right_parentheses_condicion bloque condicionaux

    LEFTPARENTHESES shift and go to state 72


state 60

    (47) escritura -> PRINT . LEFTPARENTHESES escrituraaux RIGHTPARENTHESES SEMICOLON

    LEFTPARENTHESES shift and go to state 73


state 61

    (81) while -> WHILE . seen_while LEFTPARENTHESES expresion RIGHTPARENTHESES seen_right_parentheses_while bloque SEMICOLON seen_end_while
    (82) seen_while -> .

    LEFTPARENTHESES reduce using rule 82 (seen_while -> .)

    seen_while                     shift and go to state 74

state 62

    (69) varcte -> ID . seen_ID
    (76) seen_ID -> .

    EQUALS          reduce using rule 76 (seen_ID -> .)
    DIVIDE          reduce using rule 76 (seen_ID -> .)
    MULTIPLY        reduce using rule 76 (seen_ID -> .)
    PLUS            reduce using rule 76 (seen_ID -> .)
    MINUS           reduce using rule 76 (seen_ID -> .)
    GREATERTHAN     reduce using rule 76 (seen_ID -> .)
    LESSTHAN        reduce using rule 76 (seen_ID -> .)
    NOTEQUALS       reduce using rule 76 (seen_ID -> .)
    LEFTPARENTHESES reduce using rule 76 (seen_ID -> .)
    ID              reduce using rule 76 (seen_ID -> .)
    INT_CTE         reduce using rule 76 (seen_ID -> .)
    FLOAT_CTE       reduce using rule 76 (seen_ID -> .)
    RIGHTPARENTHESES reduce using rule 76 (seen_ID -> .)
    COMMA           reduce using rule 76 (seen_ID -> .)
    SEMICOLON       reduce using rule 76 (seen_ID -> .)

    seen_ID                        shift and go to state 75

state 63

    (70) varcte -> INT_CTE . seen_CTE_INT
    (72) seen_CTE_INT -> .

    EQUALS          reduce using rule 72 (seen_CTE_INT -> .)
    DIVIDE          reduce using rule 72 (seen_CTE_INT -> .)
    MULTIPLY        reduce using rule 72 (seen_CTE_INT -> .)
    PLUS            reduce using rule 72 (seen_CTE_INT -> .)
    MINUS           reduce using rule 72 (seen_CTE_INT -> .)
    GREATERTHAN     reduce using rule 72 (seen_CTE_INT -> .)
    LESSTHAN        reduce using rule 72 (seen_CTE_INT -> .)
    NOTEQUALS       reduce using rule 72 (seen_CTE_INT -> .)
    LEFTPARENTHESES reduce using rule 72 (seen_CTE_INT -> .)
    ID              reduce using rule 72 (seen_CTE_INT -> .)
    INT_CTE         reduce using rule 72 (seen_CTE_INT -> .)
    FLOAT_CTE       reduce using rule 72 (seen_CTE_INT -> .)
    RIGHTPARENTHESES reduce using rule 72 (seen_CTE_INT -> .)
    COMMA           reduce using rule 72 (seen_CTE_INT -> .)
    SEMICOLON       reduce using rule 72 (seen_CTE_INT -> .)

    seen_CTE_INT                   shift and go to state 76

state 64

    (71) varcte -> FLOAT_CTE . seen_CTE_FLOAT
    (73) seen_CTE_FLOAT -> .

    EQUALS          reduce using rule 73 (seen_CTE_FLOAT -> .)
    DIVIDE          reduce using rule 73 (seen_CTE_FLOAT -> .)
    MULTIPLY        reduce using rule 73 (seen_CTE_FLOAT -> .)
    PLUS            reduce using rule 73 (seen_CTE_FLOAT -> .)
    MINUS           reduce using rule 73 (seen_CTE_FLOAT -> .)
    GREATERTHAN     reduce using rule 73 (seen_CTE_FLOAT -> .)
    LESSTHAN        reduce using rule 73 (seen_CTE_FLOAT -> .)
    NOTEQUALS       reduce using rule 73 (seen_CTE_FLOAT -> .)
    LEFTPARENTHESES reduce using rule 73 (seen_CTE_FLOAT -> .)
    ID              reduce using rule 73 (seen_CTE_FLOAT -> .)
    INT_CTE         reduce using rule 73 (seen_CTE_FLOAT -> .)
    FLOAT_CTE       reduce using rule 73 (seen_CTE_FLOAT -> .)
    RIGHTPARENTHESES reduce using rule 73 (seen_CTE_FLOAT -> .)
    COMMA           reduce using rule 73 (seen_CTE_FLOAT -> .)
    SEMICOLON       reduce using rule 73 (seen_CTE_FLOAT -> .)

    seen_CTE_FLOAT                 shift and go to state 77

state 65

    (24) params -> LEFTPARENTHESES seen_params_init paramsaux RIGHTPARENTHESES .

    LEFTBRACE       reduce using rule 24 (params -> LEFTPARENTHESES seen_params_init paramsaux RIGHTPARENTHESES .)


state 66

    (27) paramsaux -> tipo ID . seen_ID_params paramsaux
    (30) seen_ID_params -> .

    COMMA           reduce using rule 30 (seen_ID_params -> .)
    INT             reduce using rule 30 (seen_ID_params -> .)
    FLOAT           reduce using rule 30 (seen_ID_params -> .)
    BOOLEAN         reduce using rule 30 (seen_ID_params -> .)
    RIGHTPARENTHESES reduce using rule 30 (seen_ID_params -> .)

    seen_ID_params                 shift and go to state 78

state 67

    (28) paramsaux -> COMMA paramsaux .

    RIGHTPARENTHESES reduce using rule 28 (paramsaux -> COMMA paramsaux .)


state 68

    (9) varsaux -> COMMA ID seen_ID_var varsaux .

    SEMICOLON       reduce using rule 9 (varsaux -> COMMA ID seen_ID_var varsaux .)


state 69

    (31) bloque -> LEFTBRACE vars bloqueaux RIGHTBRACE .

    $end            reduce using rule 31 (bloque -> LEFTBRACE vars bloqueaux RIGHTBRACE .)
    FUNCTION        reduce using rule 31 (bloque -> LEFTBRACE vars bloqueaux RIGHTBRACE .)
    MAIN            reduce using rule 31 (bloque -> LEFTBRACE vars bloqueaux RIGHTBRACE .)
    ELSE            reduce using rule 31 (bloque -> LEFTBRACE vars bloqueaux RIGHTBRACE .)
    SEMICOLON       reduce using rule 31 (bloque -> LEFTBRACE vars bloqueaux RIGHTBRACE .)


state 70

    (32) bloqueaux -> estatuto bloqueaux .

    RIGHTBRACE      reduce using rule 32 (bloqueaux -> estatuto bloqueaux .)


state 71

    (38) asignacion -> varcte EQUALS . seen_equals expresion seen_final_asignacion SEMICOLON
    (39) seen_equals -> .

    LEFTPARENTHESES reduce using rule 39 (seen_equals -> .)
    ID              reduce using rule 39 (seen_equals -> .)
    INT_CTE         reduce using rule 39 (seen_equals -> .)
    FLOAT_CTE       reduce using rule 39 (seen_equals -> .)

    seen_equals                    shift and go to state 79

state 72

    (60) condicion -> IF LEFTPARENTHESES . expresion RIGHTPARENTHESES seen_right_parentheses_condicion bloque condicionaux
    (41) expresion -> . exp seen_comparacion
    (42) expresion -> . exp seen_comparacion expresionaux exp seen_comparacion
    (52) exp -> . termino seen_termino
    (53) exp -> . termino seen_termino expaux
    (56) termino -> . factor seen_factor
    (57) termino -> . factor seen_factor terminoaux
    (66) factor -> . factoraux
    (67) factor -> . varcte
    (68) factoraux -> . LEFTPARENTHESES seen_insert_fondo expresion RIGHTPARENTHESES seen_remove_fondo
    (69) varcte -> . ID seen_ID
    (70) varcte -> . INT_CTE seen_CTE_INT
    (71) varcte -> . FLOAT_CTE seen_CTE_FLOAT

    LEFTPARENTHESES shift and go to state 80
    ID              shift and go to state 62
    INT_CTE         shift and go to state 63
    FLOAT_CTE       shift and go to state 64

    expresion                      shift and go to state 81
    exp                            shift and go to state 82
    termino                        shift and go to state 83
    factor                         shift and go to state 84
    factoraux                      shift and go to state 85
    varcte                         shift and go to state 86

state 73

    (47) escritura -> PRINT LEFTPARENTHESES . escrituraaux RIGHTPARENTHESES SEMICOLON
    (48) escrituraaux -> . expresion
    (49) escrituraaux -> . STRING_CTE
    (50) escrituraaux -> . expresion COMMA escrituraaux
    (51) escrituraaux -> . STRING_CTE COMMA escrituraaux
    (41) expresion -> . exp seen_comparacion
    (42) expresion -> . exp seen_comparacion expresionaux exp seen_comparacion
    (52) exp -> . termino seen_termino
    (53) exp -> . termino seen_termino expaux
    (56) termino -> . factor seen_factor
    (57) termino -> . factor seen_factor terminoaux
    (66) factor -> . factoraux
    (67) factor -> . varcte
    (68) factoraux -> . LEFTPARENTHESES seen_insert_fondo expresion RIGHTPARENTHESES seen_remove_fondo
    (69) varcte -> . ID seen_ID
    (70) varcte -> . INT_CTE seen_CTE_INT
    (71) varcte -> . FLOAT_CTE seen_CTE_FLOAT

    STRING_CTE      shift and go to state 89
    LEFTPARENTHESES shift and go to state 80
    ID              shift and go to state 62
    INT_CTE         shift and go to state 63
    FLOAT_CTE       shift and go to state 64

    escrituraaux                   shift and go to state 87
    expresion                      shift and go to state 88
    exp                            shift and go to state 82
    termino                        shift and go to state 83
    factor                         shift and go to state 84
    factoraux                      shift and go to state 85
    varcte                         shift and go to state 86

state 74

    (81) while -> WHILE seen_while . LEFTPARENTHESES expresion RIGHTPARENTHESES seen_right_parentheses_while bloque SEMICOLON seen_end_while

    LEFTPARENTHESES shift and go to state 90


state 75

    (69) varcte -> ID seen_ID .

    EQUALS          reduce using rule 69 (varcte -> ID seen_ID .)
    DIVIDE          reduce using rule 69 (varcte -> ID seen_ID .)
    MULTIPLY        reduce using rule 69 (varcte -> ID seen_ID .)
    PLUS            reduce using rule 69 (varcte -> ID seen_ID .)
    MINUS           reduce using rule 69 (varcte -> ID seen_ID .)
    GREATERTHAN     reduce using rule 69 (varcte -> ID seen_ID .)
    LESSTHAN        reduce using rule 69 (varcte -> ID seen_ID .)
    NOTEQUALS       reduce using rule 69 (varcte -> ID seen_ID .)
    LEFTPARENTHESES reduce using rule 69 (varcte -> ID seen_ID .)
    ID              reduce using rule 69 (varcte -> ID seen_ID .)
    INT_CTE         reduce using rule 69 (varcte -> ID seen_ID .)
    FLOAT_CTE       reduce using rule 69 (varcte -> ID seen_ID .)
    RIGHTPARENTHESES reduce using rule 69 (varcte -> ID seen_ID .)
    COMMA           reduce using rule 69 (varcte -> ID seen_ID .)
    SEMICOLON       reduce using rule 69 (varcte -> ID seen_ID .)


state 76

    (70) varcte -> INT_CTE seen_CTE_INT .

    EQUALS          reduce using rule 70 (varcte -> INT_CTE seen_CTE_INT .)
    DIVIDE          reduce using rule 70 (varcte -> INT_CTE seen_CTE_INT .)
    MULTIPLY        reduce using rule 70 (varcte -> INT_CTE seen_CTE_INT .)
    PLUS            reduce using rule 70 (varcte -> INT_CTE seen_CTE_INT .)
    MINUS           reduce using rule 70 (varcte -> INT_CTE seen_CTE_INT .)
    GREATERTHAN     reduce using rule 70 (varcte -> INT_CTE seen_CTE_INT .)
    LESSTHAN        reduce using rule 70 (varcte -> INT_CTE seen_CTE_INT .)
    NOTEQUALS       reduce using rule 70 (varcte -> INT_CTE seen_CTE_INT .)
    LEFTPARENTHESES reduce using rule 70 (varcte -> INT_CTE seen_CTE_INT .)
    ID              reduce using rule 70 (varcte -> INT_CTE seen_CTE_INT .)
    INT_CTE         reduce using rule 70 (varcte -> INT_CTE seen_CTE_INT .)
    FLOAT_CTE       reduce using rule 70 (varcte -> INT_CTE seen_CTE_INT .)
    RIGHTPARENTHESES reduce using rule 70 (varcte -> INT_CTE seen_CTE_INT .)
    COMMA           reduce using rule 70 (varcte -> INT_CTE seen_CTE_INT .)
    SEMICOLON       reduce using rule 70 (varcte -> INT_CTE seen_CTE_INT .)


state 77

    (71) varcte -> FLOAT_CTE seen_CTE_FLOAT .

    EQUALS          reduce using rule 71 (varcte -> FLOAT_CTE seen_CTE_FLOAT .)
    DIVIDE          reduce using rule 71 (varcte -> FLOAT_CTE seen_CTE_FLOAT .)
    MULTIPLY        reduce using rule 71 (varcte -> FLOAT_CTE seen_CTE_FLOAT .)
    PLUS            reduce using rule 71 (varcte -> FLOAT_CTE seen_CTE_FLOAT .)
    MINUS           reduce using rule 71 (varcte -> FLOAT_CTE seen_CTE_FLOAT .)
    GREATERTHAN     reduce using rule 71 (varcte -> FLOAT_CTE seen_CTE_FLOAT .)
    LESSTHAN        reduce using rule 71 (varcte -> FLOAT_CTE seen_CTE_FLOAT .)
    NOTEQUALS       reduce using rule 71 (varcte -> FLOAT_CTE seen_CTE_FLOAT .)
    LEFTPARENTHESES reduce using rule 71 (varcte -> FLOAT_CTE seen_CTE_FLOAT .)
    ID              reduce using rule 71 (varcte -> FLOAT_CTE seen_CTE_FLOAT .)
    INT_CTE         reduce using rule 71 (varcte -> FLOAT_CTE seen_CTE_FLOAT .)
    FLOAT_CTE       reduce using rule 71 (varcte -> FLOAT_CTE seen_CTE_FLOAT .)
    RIGHTPARENTHESES reduce using rule 71 (varcte -> FLOAT_CTE seen_CTE_FLOAT .)
    COMMA           reduce using rule 71 (varcte -> FLOAT_CTE seen_CTE_FLOAT .)
    SEMICOLON       reduce using rule 71 (varcte -> FLOAT_CTE seen_CTE_FLOAT .)


state 78

    (27) paramsaux -> tipo ID seen_ID_params . paramsaux
    (27) paramsaux -> . tipo ID seen_ID_params paramsaux
    (28) paramsaux -> . COMMA paramsaux
    (29) paramsaux -> . empty
    (12) tipo -> . INT seen_tipo
    (13) tipo -> . FLOAT seen_tipo
    (14) tipo -> . BOOLEAN seen_tipo
    (86) empty -> .

    COMMA           shift and go to state 48
    INT             shift and go to state 19
    FLOAT           shift and go to state 20
    BOOLEAN         shift and go to state 21
    RIGHTPARENTHESES reduce using rule 86 (empty -> .)

    tipo                           shift and go to state 47
    paramsaux                      shift and go to state 91
    empty                          shift and go to state 49

state 79

    (38) asignacion -> varcte EQUALS seen_equals . expresion seen_final_asignacion SEMICOLON
    (41) expresion -> . exp seen_comparacion
    (42) expresion -> . exp seen_comparacion expresionaux exp seen_comparacion
    (52) exp -> . termino seen_termino
    (53) exp -> . termino seen_termino expaux
    (56) termino -> . factor seen_factor
    (57) termino -> . factor seen_factor terminoaux
    (66) factor -> . factoraux
    (67) factor -> . varcte
    (68) factoraux -> . LEFTPARENTHESES seen_insert_fondo expresion RIGHTPARENTHESES seen_remove_fondo
    (69) varcte -> . ID seen_ID
    (70) varcte -> . INT_CTE seen_CTE_INT
    (71) varcte -> . FLOAT_CTE seen_CTE_FLOAT

    LEFTPARENTHESES shift and go to state 80
    ID              shift and go to state 62
    INT_CTE         shift and go to state 63
    FLOAT_CTE       shift and go to state 64

    varcte                         shift and go to state 86
    expresion                      shift and go to state 92
    exp                            shift and go to state 82
    termino                        shift and go to state 83
    factor                         shift and go to state 84
    factoraux                      shift and go to state 85

state 80

    (68) factoraux -> LEFTPARENTHESES . seen_insert_fondo expresion RIGHTPARENTHESES seen_remove_fondo
    (74) seen_insert_fondo -> .

    LEFTPARENTHESES reduce using rule 74 (seen_insert_fondo -> .)
    ID              reduce using rule 74 (seen_insert_fondo -> .)
    INT_CTE         reduce using rule 74 (seen_insert_fondo -> .)
    FLOAT_CTE       reduce using rule 74 (seen_insert_fondo -> .)

    seen_insert_fondo              shift and go to state 93

state 81

    (60) condicion -> IF LEFTPARENTHESES expresion . RIGHTPARENTHESES seen_right_parentheses_condicion bloque condicionaux

    RIGHTPARENTHESES shift and go to state 94


state 82

    (41) expresion -> exp . seen_comparacion
    (42) expresion -> exp . seen_comparacion expresionaux exp seen_comparacion
    (80) seen_comparacion -> .

    GREATERTHAN     reduce using rule 80 (seen_comparacion -> .)
    LESSTHAN        reduce using rule 80 (seen_comparacion -> .)
    NOTEQUALS       reduce using rule 80 (seen_comparacion -> .)
    LEFTPARENTHESES reduce using rule 80 (seen_comparacion -> .)
    ID              reduce using rule 80 (seen_comparacion -> .)
    INT_CTE         reduce using rule 80 (seen_comparacion -> .)
    FLOAT_CTE       reduce using rule 80 (seen_comparacion -> .)
    RIGHTPARENTHESES reduce using rule 80 (seen_comparacion -> .)
    COMMA           reduce using rule 80 (seen_comparacion -> .)
    SEMICOLON       reduce using rule 80 (seen_comparacion -> .)

    seen_comparacion               shift and go to state 95

state 83

    (52) exp -> termino . seen_termino
    (53) exp -> termino . seen_termino expaux
    (78) seen_termino -> .

    PLUS            reduce using rule 78 (seen_termino -> .)
    MINUS           reduce using rule 78 (seen_termino -> .)
    GREATERTHAN     reduce using rule 78 (seen_termino -> .)
    LESSTHAN        reduce using rule 78 (seen_termino -> .)
    NOTEQUALS       reduce using rule 78 (seen_termino -> .)
    LEFTPARENTHESES reduce using rule 78 (seen_termino -> .)
    ID              reduce using rule 78 (seen_termino -> .)
    INT_CTE         reduce using rule 78 (seen_termino -> .)
    FLOAT_CTE       reduce using rule 78 (seen_termino -> .)
    RIGHTPARENTHESES reduce using rule 78 (seen_termino -> .)
    COMMA           reduce using rule 78 (seen_termino -> .)
    SEMICOLON       reduce using rule 78 (seen_termino -> .)

    seen_termino                   shift and go to state 96

state 84

    (56) termino -> factor . seen_factor
    (57) termino -> factor . seen_factor terminoaux
    (79) seen_factor -> .

    DIVIDE          reduce using rule 79 (seen_factor -> .)
    MULTIPLY        reduce using rule 79 (seen_factor -> .)
    PLUS            reduce using rule 79 (seen_factor -> .)
    MINUS           reduce using rule 79 (seen_factor -> .)
    GREATERTHAN     reduce using rule 79 (seen_factor -> .)
    LESSTHAN        reduce using rule 79 (seen_factor -> .)
    NOTEQUALS       reduce using rule 79 (seen_factor -> .)
    LEFTPARENTHESES reduce using rule 79 (seen_factor -> .)
    ID              reduce using rule 79 (seen_factor -> .)
    INT_CTE         reduce using rule 79 (seen_factor -> .)
    FLOAT_CTE       reduce using rule 79 (seen_factor -> .)
    RIGHTPARENTHESES reduce using rule 79 (seen_factor -> .)
    COMMA           reduce using rule 79 (seen_factor -> .)
    SEMICOLON       reduce using rule 79 (seen_factor -> .)

    seen_factor                    shift and go to state 97

state 85

    (66) factor -> factoraux .

    DIVIDE          reduce using rule 66 (factor -> factoraux .)
    MULTIPLY        reduce using rule 66 (factor -> factoraux .)
    PLUS            reduce using rule 66 (factor -> factoraux .)
    MINUS           reduce using rule 66 (factor -> factoraux .)
    GREATERTHAN     reduce using rule 66 (factor -> factoraux .)
    LESSTHAN        reduce using rule 66 (factor -> factoraux .)
    NOTEQUALS       reduce using rule 66 (factor -> factoraux .)
    LEFTPARENTHESES reduce using rule 66 (factor -> factoraux .)
    ID              reduce using rule 66 (factor -> factoraux .)
    INT_CTE         reduce using rule 66 (factor -> factoraux .)
    FLOAT_CTE       reduce using rule 66 (factor -> factoraux .)
    RIGHTPARENTHESES reduce using rule 66 (factor -> factoraux .)
    COMMA           reduce using rule 66 (factor -> factoraux .)
    SEMICOLON       reduce using rule 66 (factor -> factoraux .)


state 86

    (67) factor -> varcte .

    DIVIDE          reduce using rule 67 (factor -> varcte .)
    MULTIPLY        reduce using rule 67 (factor -> varcte .)
    PLUS            reduce using rule 67 (factor -> varcte .)
    MINUS           reduce using rule 67 (factor -> varcte .)
    GREATERTHAN     reduce using rule 67 (factor -> varcte .)
    LESSTHAN        reduce using rule 67 (factor -> varcte .)
    NOTEQUALS       reduce using rule 67 (factor -> varcte .)
    LEFTPARENTHESES reduce using rule 67 (factor -> varcte .)
    ID              reduce using rule 67 (factor -> varcte .)
    INT_CTE         reduce using rule 67 (factor -> varcte .)
    FLOAT_CTE       reduce using rule 67 (factor -> varcte .)
    RIGHTPARENTHESES reduce using rule 67 (factor -> varcte .)
    COMMA           reduce using rule 67 (factor -> varcte .)
    SEMICOLON       reduce using rule 67 (factor -> varcte .)


state 87

    (47) escritura -> PRINT LEFTPARENTHESES escrituraaux . RIGHTPARENTHESES SEMICOLON

    RIGHTPARENTHESES shift and go to state 98


state 88

    (48) escrituraaux -> expresion .
    (50) escrituraaux -> expresion . COMMA escrituraaux

    RIGHTPARENTHESES reduce using rule 48 (escrituraaux -> expresion .)
    COMMA           shift and go to state 99


state 89

    (49) escrituraaux -> STRING_CTE .
    (51) escrituraaux -> STRING_CTE . COMMA escrituraaux

    RIGHTPARENTHESES reduce using rule 49 (escrituraaux -> STRING_CTE .)
    COMMA           shift and go to state 100


state 90

    (81) while -> WHILE seen_while LEFTPARENTHESES . expresion RIGHTPARENTHESES seen_right_parentheses_while bloque SEMICOLON seen_end_while
    (41) expresion -> . exp seen_comparacion
    (42) expresion -> . exp seen_comparacion expresionaux exp seen_comparacion
    (52) exp -> . termino seen_termino
    (53) exp -> . termino seen_termino expaux
    (56) termino -> . factor seen_factor
    (57) termino -> . factor seen_factor terminoaux
    (66) factor -> . factoraux
    (67) factor -> . varcte
    (68) factoraux -> . LEFTPARENTHESES seen_insert_fondo expresion RIGHTPARENTHESES seen_remove_fondo
    (69) varcte -> . ID seen_ID
    (70) varcte -> . INT_CTE seen_CTE_INT
    (71) varcte -> . FLOAT_CTE seen_CTE_FLOAT

    LEFTPARENTHESES shift and go to state 80
    ID              shift and go to state 62
    INT_CTE         shift and go to state 63
    FLOAT_CTE       shift and go to state 64

    expresion                      shift and go to state 101
    exp                            shift and go to state 82
    termino                        shift and go to state 83
    factor                         shift and go to state 84
    factoraux                      shift and go to state 85
    varcte                         shift and go to state 86

state 91

    (27) paramsaux -> tipo ID seen_ID_params paramsaux .

    RIGHTPARENTHESES reduce using rule 27 (paramsaux -> tipo ID seen_ID_params paramsaux .)


state 92

    (38) asignacion -> varcte EQUALS seen_equals expresion . seen_final_asignacion SEMICOLON
    (40) seen_final_asignacion -> .

    SEMICOLON       reduce using rule 40 (seen_final_asignacion -> .)

    seen_final_asignacion          shift and go to state 102

state 93

    (68) factoraux -> LEFTPARENTHESES seen_insert_fondo . expresion RIGHTPARENTHESES seen_remove_fondo
    (41) expresion -> . exp seen_comparacion
    (42) expresion -> . exp seen_comparacion expresionaux exp seen_comparacion
    (52) exp -> . termino seen_termino
    (53) exp -> . termino seen_termino expaux
    (56) termino -> . factor seen_factor
    (57) termino -> . factor seen_factor terminoaux
    (66) factor -> . factoraux
    (67) factor -> . varcte
    (68) factoraux -> . LEFTPARENTHESES seen_insert_fondo expresion RIGHTPARENTHESES seen_remove_fondo
    (69) varcte -> . ID seen_ID
    (70) varcte -> . INT_CTE seen_CTE_INT
    (71) varcte -> . FLOAT_CTE seen_CTE_FLOAT

    LEFTPARENTHESES shift and go to state 80
    ID              shift and go to state 62
    INT_CTE         shift and go to state 63
    FLOAT_CTE       shift and go to state 64

    expresion                      shift and go to state 103
    exp                            shift and go to state 82
    termino                        shift and go to state 83
    factor                         shift and go to state 84
    factoraux                      shift and go to state 85
    varcte                         shift and go to state 86

state 94

    (60) condicion -> IF LEFTPARENTHESES expresion RIGHTPARENTHESES . seen_right_parentheses_condicion bloque condicionaux
    (63) seen_right_parentheses_condicion -> .

    LEFTBRACE       reduce using rule 63 (seen_right_parentheses_condicion -> .)

    seen_right_parentheses_condicion shift and go to state 104

state 95

    (41) expresion -> exp seen_comparacion .
    (42) expresion -> exp seen_comparacion . expresionaux exp seen_comparacion
    (43) expresionaux -> . GREATERTHAN seen_operador
    (44) expresionaux -> . LESSTHAN seen_operador
    (45) expresionaux -> . NOTEQUALS seen_operador
    (46) expresionaux -> .

    RIGHTPARENTHESES reduce using rule 41 (expresion -> exp seen_comparacion .)
    COMMA           reduce using rule 41 (expresion -> exp seen_comparacion .)
    SEMICOLON       reduce using rule 41 (expresion -> exp seen_comparacion .)
    GREATERTHAN     shift and go to state 106
    LESSTHAN        shift and go to state 107
    NOTEQUALS       shift and go to state 108
    LEFTPARENTHESES reduce using rule 46 (expresionaux -> .)
    ID              reduce using rule 46 (expresionaux -> .)
    INT_CTE         reduce using rule 46 (expresionaux -> .)
    FLOAT_CTE       reduce using rule 46 (expresionaux -> .)

    expresionaux                   shift and go to state 105

state 96

    (52) exp -> termino seen_termino .
    (53) exp -> termino seen_termino . expaux
    (54) expaux -> . PLUS seen_operador exp
    (55) expaux -> . MINUS seen_operador exp

    GREATERTHAN     reduce using rule 52 (exp -> termino seen_termino .)
    LESSTHAN        reduce using rule 52 (exp -> termino seen_termino .)
    NOTEQUALS       reduce using rule 52 (exp -> termino seen_termino .)
    LEFTPARENTHESES reduce using rule 52 (exp -> termino seen_termino .)
    ID              reduce using rule 52 (exp -> termino seen_termino .)
    INT_CTE         reduce using rule 52 (exp -> termino seen_termino .)
    FLOAT_CTE       reduce using rule 52 (exp -> termino seen_termino .)
    RIGHTPARENTHESES reduce using rule 52 (exp -> termino seen_termino .)
    COMMA           reduce using rule 52 (exp -> termino seen_termino .)
    SEMICOLON       reduce using rule 52 (exp -> termino seen_termino .)
    PLUS            shift and go to state 110
    MINUS           shift and go to state 111

    expaux                         shift and go to state 109

state 97

    (56) termino -> factor seen_factor .
    (57) termino -> factor seen_factor . terminoaux
    (58) terminoaux -> . DIVIDE seen_operador termino
    (59) terminoaux -> . MULTIPLY seen_operador termino

    PLUS            reduce using rule 56 (termino -> factor seen_factor .)
    MINUS           reduce using rule 56 (termino -> factor seen_factor .)
    GREATERTHAN     reduce using rule 56 (termino -> factor seen_factor .)
    LESSTHAN        reduce using rule 56 (termino -> factor seen_factor .)
    NOTEQUALS       reduce using rule 56 (termino -> factor seen_factor .)
    LEFTPARENTHESES reduce using rule 56 (termino -> factor seen_factor .)
    ID              reduce using rule 56 (termino -> factor seen_factor .)
    INT_CTE         reduce using rule 56 (termino -> factor seen_factor .)
    FLOAT_CTE       reduce using rule 56 (termino -> factor seen_factor .)
    RIGHTPARENTHESES reduce using rule 56 (termino -> factor seen_factor .)
    COMMA           reduce using rule 56 (termino -> factor seen_factor .)
    SEMICOLON       reduce using rule 56 (termino -> factor seen_factor .)
    DIVIDE          shift and go to state 113
    MULTIPLY        shift and go to state 114

    terminoaux                     shift and go to state 112

state 98

    (47) escritura -> PRINT LEFTPARENTHESES escrituraaux RIGHTPARENTHESES . SEMICOLON

    SEMICOLON       shift and go to state 115


state 99

    (50) escrituraaux -> expresion COMMA . escrituraaux
    (48) escrituraaux -> . expresion
    (49) escrituraaux -> . STRING_CTE
    (50) escrituraaux -> . expresion COMMA escrituraaux
    (51) escrituraaux -> . STRING_CTE COMMA escrituraaux
    (41) expresion -> . exp seen_comparacion
    (42) expresion -> . exp seen_comparacion expresionaux exp seen_comparacion
    (52) exp -> . termino seen_termino
    (53) exp -> . termino seen_termino expaux
    (56) termino -> . factor seen_factor
    (57) termino -> . factor seen_factor terminoaux
    (66) factor -> . factoraux
    (67) factor -> . varcte
    (68) factoraux -> . LEFTPARENTHESES seen_insert_fondo expresion RIGHTPARENTHESES seen_remove_fondo
    (69) varcte -> . ID seen_ID
    (70) varcte -> . INT_CTE seen_CTE_INT
    (71) varcte -> . FLOAT_CTE seen_CTE_FLOAT

    STRING_CTE      shift and go to state 89
    LEFTPARENTHESES shift and go to state 80
    ID              shift and go to state 62
    INT_CTE         shift and go to state 63
    FLOAT_CTE       shift and go to state 64

    expresion                      shift and go to state 88
    escrituraaux                   shift and go to state 116
    exp                            shift and go to state 82
    termino                        shift and go to state 83
    factor                         shift and go to state 84
    factoraux                      shift and go to state 85
    varcte                         shift and go to state 86

state 100

    (51) escrituraaux -> STRING_CTE COMMA . escrituraaux
    (48) escrituraaux -> . expresion
    (49) escrituraaux -> . STRING_CTE
    (50) escrituraaux -> . expresion COMMA escrituraaux
    (51) escrituraaux -> . STRING_CTE COMMA escrituraaux
    (41) expresion -> . exp seen_comparacion
    (42) expresion -> . exp seen_comparacion expresionaux exp seen_comparacion
    (52) exp -> . termino seen_termino
    (53) exp -> . termino seen_termino expaux
    (56) termino -> . factor seen_factor
    (57) termino -> . factor seen_factor terminoaux
    (66) factor -> . factoraux
    (67) factor -> . varcte
    (68) factoraux -> . LEFTPARENTHESES seen_insert_fondo expresion RIGHTPARENTHESES seen_remove_fondo
    (69) varcte -> . ID seen_ID
    (70) varcte -> . INT_CTE seen_CTE_INT
    (71) varcte -> . FLOAT_CTE seen_CTE_FLOAT

    STRING_CTE      shift and go to state 89
    LEFTPARENTHESES shift and go to state 80
    ID              shift and go to state 62
    INT_CTE         shift and go to state 63
    FLOAT_CTE       shift and go to state 64

    escrituraaux                   shift and go to state 117
    expresion                      shift and go to state 88
    exp                            shift and go to state 82
    termino                        shift and go to state 83
    factor                         shift and go to state 84
    factoraux                      shift and go to state 85
    varcte                         shift and go to state 86

state 101

    (81) while -> WHILE seen_while LEFTPARENTHESES expresion . RIGHTPARENTHESES seen_right_parentheses_while bloque SEMICOLON seen_end_while

    RIGHTPARENTHESES shift and go to state 118


state 102

    (38) asignacion -> varcte EQUALS seen_equals expresion seen_final_asignacion . SEMICOLON

    SEMICOLON       shift and go to state 119


state 103

    (68) factoraux -> LEFTPARENTHESES seen_insert_fondo expresion . RIGHTPARENTHESES seen_remove_fondo

    RIGHTPARENTHESES shift and go to state 120


state 104

    (60) condicion -> IF LEFTPARENTHESES expresion RIGHTPARENTHESES seen_right_parentheses_condicion . bloque condicionaux
    (31) bloque -> . LEFTBRACE vars bloqueaux RIGHTBRACE

    LEFTBRACE       shift and go to state 39

    bloque                         shift and go to state 121

state 105

    (42) expresion -> exp seen_comparacion expresionaux . exp seen_comparacion
    (52) exp -> . termino seen_termino
    (53) exp -> . termino seen_termino expaux
    (56) termino -> . factor seen_factor
    (57) termino -> . factor seen_factor terminoaux
    (66) factor -> . factoraux
    (67) factor -> . varcte
    (68) factoraux -> . LEFTPARENTHESES seen_insert_fondo expresion RIGHTPARENTHESES seen_remove_fondo
    (69) varcte -> . ID seen_ID
    (70) varcte -> . INT_CTE seen_CTE_INT
    (71) varcte -> . FLOAT_CTE seen_CTE_FLOAT

    LEFTPARENTHESES shift and go to state 80
    ID              shift and go to state 62
    INT_CTE         shift and go to state 63
    FLOAT_CTE       shift and go to state 64

    exp                            shift and go to state 122
    termino                        shift and go to state 83
    factor                         shift and go to state 84
    factoraux                      shift and go to state 85
    varcte                         shift and go to state 86

state 106

    (43) expresionaux -> GREATERTHAN . seen_operador
    (77) seen_operador -> .

    LEFTPARENTHESES reduce using rule 77 (seen_operador -> .)
    ID              reduce using rule 77 (seen_operador -> .)
    INT_CTE         reduce using rule 77 (seen_operador -> .)
    FLOAT_CTE       reduce using rule 77 (seen_operador -> .)

    seen_operador                  shift and go to state 123

state 107

    (44) expresionaux -> LESSTHAN . seen_operador
    (77) seen_operador -> .

    LEFTPARENTHESES reduce using rule 77 (seen_operador -> .)
    ID              reduce using rule 77 (seen_operador -> .)
    INT_CTE         reduce using rule 77 (seen_operador -> .)
    FLOAT_CTE       reduce using rule 77 (seen_operador -> .)

    seen_operador                  shift and go to state 124

state 108

    (45) expresionaux -> NOTEQUALS . seen_operador
    (77) seen_operador -> .

    LEFTPARENTHESES reduce using rule 77 (seen_operador -> .)
    ID              reduce using rule 77 (seen_operador -> .)
    INT_CTE         reduce using rule 77 (seen_operador -> .)
    FLOAT_CTE       reduce using rule 77 (seen_operador -> .)

    seen_operador                  shift and go to state 125

state 109

    (53) exp -> termino seen_termino expaux .

    GREATERTHAN     reduce using rule 53 (exp -> termino seen_termino expaux .)
    LESSTHAN        reduce using rule 53 (exp -> termino seen_termino expaux .)
    NOTEQUALS       reduce using rule 53 (exp -> termino seen_termino expaux .)
    LEFTPARENTHESES reduce using rule 53 (exp -> termino seen_termino expaux .)
    ID              reduce using rule 53 (exp -> termino seen_termino expaux .)
    INT_CTE         reduce using rule 53 (exp -> termino seen_termino expaux .)
    FLOAT_CTE       reduce using rule 53 (exp -> termino seen_termino expaux .)
    RIGHTPARENTHESES reduce using rule 53 (exp -> termino seen_termino expaux .)
    COMMA           reduce using rule 53 (exp -> termino seen_termino expaux .)
    SEMICOLON       reduce using rule 53 (exp -> termino seen_termino expaux .)


state 110

    (54) expaux -> PLUS . seen_operador exp
    (77) seen_operador -> .

    LEFTPARENTHESES reduce using rule 77 (seen_operador -> .)
    ID              reduce using rule 77 (seen_operador -> .)
    INT_CTE         reduce using rule 77 (seen_operador -> .)
    FLOAT_CTE       reduce using rule 77 (seen_operador -> .)

    seen_operador                  shift and go to state 126

state 111

    (55) expaux -> MINUS . seen_operador exp
    (77) seen_operador -> .

    LEFTPARENTHESES reduce using rule 77 (seen_operador -> .)
    ID              reduce using rule 77 (seen_operador -> .)
    INT_CTE         reduce using rule 77 (seen_operador -> .)
    FLOAT_CTE       reduce using rule 77 (seen_operador -> .)

    seen_operador                  shift and go to state 127

state 112

    (57) termino -> factor seen_factor terminoaux .

    PLUS            reduce using rule 57 (termino -> factor seen_factor terminoaux .)
    MINUS           reduce using rule 57 (termino -> factor seen_factor terminoaux .)
    GREATERTHAN     reduce using rule 57 (termino -> factor seen_factor terminoaux .)
    LESSTHAN        reduce using rule 57 (termino -> factor seen_factor terminoaux .)
    NOTEQUALS       reduce using rule 57 (termino -> factor seen_factor terminoaux .)
    LEFTPARENTHESES reduce using rule 57 (termino -> factor seen_factor terminoaux .)
    ID              reduce using rule 57 (termino -> factor seen_factor terminoaux .)
    INT_CTE         reduce using rule 57 (termino -> factor seen_factor terminoaux .)
    FLOAT_CTE       reduce using rule 57 (termino -> factor seen_factor terminoaux .)
    RIGHTPARENTHESES reduce using rule 57 (termino -> factor seen_factor terminoaux .)
    COMMA           reduce using rule 57 (termino -> factor seen_factor terminoaux .)
    SEMICOLON       reduce using rule 57 (termino -> factor seen_factor terminoaux .)


state 113

    (58) terminoaux -> DIVIDE . seen_operador termino
    (77) seen_operador -> .

    LEFTPARENTHESES reduce using rule 77 (seen_operador -> .)
    ID              reduce using rule 77 (seen_operador -> .)
    INT_CTE         reduce using rule 77 (seen_operador -> .)
    FLOAT_CTE       reduce using rule 77 (seen_operador -> .)

    seen_operador                  shift and go to state 128

state 114

    (59) terminoaux -> MULTIPLY . seen_operador termino
    (77) seen_operador -> .

    LEFTPARENTHESES reduce using rule 77 (seen_operador -> .)
    ID              reduce using rule 77 (seen_operador -> .)
    INT_CTE         reduce using rule 77 (seen_operador -> .)
    FLOAT_CTE       reduce using rule 77 (seen_operador -> .)

    seen_operador                  shift and go to state 129

state 115

    (47) escritura -> PRINT LEFTPARENTHESES escrituraaux RIGHTPARENTHESES SEMICOLON .

    IF              reduce using rule 47 (escritura -> PRINT LEFTPARENTHESES escrituraaux RIGHTPARENTHESES SEMICOLON .)
    PRINT           reduce using rule 47 (escritura -> PRINT LEFTPARENTHESES escrituraaux RIGHTPARENTHESES SEMICOLON .)
    WHILE           reduce using rule 47 (escritura -> PRINT LEFTPARENTHESES escrituraaux RIGHTPARENTHESES SEMICOLON .)
    ID              reduce using rule 47 (escritura -> PRINT LEFTPARENTHESES escrituraaux RIGHTPARENTHESES SEMICOLON .)
    INT_CTE         reduce using rule 47 (escritura -> PRINT LEFTPARENTHESES escrituraaux RIGHTPARENTHESES SEMICOLON .)
    FLOAT_CTE       reduce using rule 47 (escritura -> PRINT LEFTPARENTHESES escrituraaux RIGHTPARENTHESES SEMICOLON .)
    RIGHTBRACE      reduce using rule 47 (escritura -> PRINT LEFTPARENTHESES escrituraaux RIGHTPARENTHESES SEMICOLON .)


state 116

    (50) escrituraaux -> expresion COMMA escrituraaux .

    RIGHTPARENTHESES reduce using rule 50 (escrituraaux -> expresion COMMA escrituraaux .)


state 117

    (51) escrituraaux -> STRING_CTE COMMA escrituraaux .

    RIGHTPARENTHESES reduce using rule 51 (escrituraaux -> STRING_CTE COMMA escrituraaux .)


state 118

    (81) while -> WHILE seen_while LEFTPARENTHESES expresion RIGHTPARENTHESES . seen_right_parentheses_while bloque SEMICOLON seen_end_while
    (83) seen_right_parentheses_while -> .

    LEFTBRACE       reduce using rule 83 (seen_right_parentheses_while -> .)

    seen_right_parentheses_while   shift and go to state 130

state 119

    (38) asignacion -> varcte EQUALS seen_equals expresion seen_final_asignacion SEMICOLON .

    IF              reduce using rule 38 (asignacion -> varcte EQUALS seen_equals expresion seen_final_asignacion SEMICOLON .)
    PRINT           reduce using rule 38 (asignacion -> varcte EQUALS seen_equals expresion seen_final_asignacion SEMICOLON .)
    WHILE           reduce using rule 38 (asignacion -> varcte EQUALS seen_equals expresion seen_final_asignacion SEMICOLON .)
    ID              reduce using rule 38 (asignacion -> varcte EQUALS seen_equals expresion seen_final_asignacion SEMICOLON .)
    INT_CTE         reduce using rule 38 (asignacion -> varcte EQUALS seen_equals expresion seen_final_asignacion SEMICOLON .)
    FLOAT_CTE       reduce using rule 38 (asignacion -> varcte EQUALS seen_equals expresion seen_final_asignacion SEMICOLON .)
    RIGHTBRACE      reduce using rule 38 (asignacion -> varcte EQUALS seen_equals expresion seen_final_asignacion SEMICOLON .)


state 120

    (68) factoraux -> LEFTPARENTHESES seen_insert_fondo expresion RIGHTPARENTHESES . seen_remove_fondo
    (75) seen_remove_fondo -> .

    DIVIDE          reduce using rule 75 (seen_remove_fondo -> .)
    MULTIPLY        reduce using rule 75 (seen_remove_fondo -> .)
    PLUS            reduce using rule 75 (seen_remove_fondo -> .)
    MINUS           reduce using rule 75 (seen_remove_fondo -> .)
    GREATERTHAN     reduce using rule 75 (seen_remove_fondo -> .)
    LESSTHAN        reduce using rule 75 (seen_remove_fondo -> .)
    NOTEQUALS       reduce using rule 75 (seen_remove_fondo -> .)
    LEFTPARENTHESES reduce using rule 75 (seen_remove_fondo -> .)
    ID              reduce using rule 75 (seen_remove_fondo -> .)
    INT_CTE         reduce using rule 75 (seen_remove_fondo -> .)
    FLOAT_CTE       reduce using rule 75 (seen_remove_fondo -> .)
    RIGHTPARENTHESES reduce using rule 75 (seen_remove_fondo -> .)
    COMMA           reduce using rule 75 (seen_remove_fondo -> .)
    SEMICOLON       reduce using rule 75 (seen_remove_fondo -> .)

    seen_remove_fondo              shift and go to state 131

state 121

    (60) condicion -> IF LEFTPARENTHESES expresion RIGHTPARENTHESES seen_right_parentheses_condicion bloque . condicionaux
    (61) condicionaux -> . ELSE seen_else bloque SEMICOLON seen_end_condicion
    (62) condicionaux -> . SEMICOLON seen_end_condicion

    ELSE            shift and go to state 133
    SEMICOLON       shift and go to state 134

    condicionaux                   shift and go to state 132

state 122

    (42) expresion -> exp seen_comparacion expresionaux exp . seen_comparacion
    (80) seen_comparacion -> .

    RIGHTPARENTHESES reduce using rule 80 (seen_comparacion -> .)
    COMMA           reduce using rule 80 (seen_comparacion -> .)
    SEMICOLON       reduce using rule 80 (seen_comparacion -> .)

    seen_comparacion               shift and go to state 135

state 123

    (43) expresionaux -> GREATERTHAN seen_operador .

    LEFTPARENTHESES reduce using rule 43 (expresionaux -> GREATERTHAN seen_operador .)
    ID              reduce using rule 43 (expresionaux -> GREATERTHAN seen_operador .)
    INT_CTE         reduce using rule 43 (expresionaux -> GREATERTHAN seen_operador .)
    FLOAT_CTE       reduce using rule 43 (expresionaux -> GREATERTHAN seen_operador .)


state 124

    (44) expresionaux -> LESSTHAN seen_operador .

    LEFTPARENTHESES reduce using rule 44 (expresionaux -> LESSTHAN seen_operador .)
    ID              reduce using rule 44 (expresionaux -> LESSTHAN seen_operador .)
    INT_CTE         reduce using rule 44 (expresionaux -> LESSTHAN seen_operador .)
    FLOAT_CTE       reduce using rule 44 (expresionaux -> LESSTHAN seen_operador .)


state 125

    (45) expresionaux -> NOTEQUALS seen_operador .

    LEFTPARENTHESES reduce using rule 45 (expresionaux -> NOTEQUALS seen_operador .)
    ID              reduce using rule 45 (expresionaux -> NOTEQUALS seen_operador .)
    INT_CTE         reduce using rule 45 (expresionaux -> NOTEQUALS seen_operador .)
    FLOAT_CTE       reduce using rule 45 (expresionaux -> NOTEQUALS seen_operador .)


state 126

    (54) expaux -> PLUS seen_operador . exp
    (52) exp -> . termino seen_termino
    (53) exp -> . termino seen_termino expaux
    (56) termino -> . factor seen_factor
    (57) termino -> . factor seen_factor terminoaux
    (66) factor -> . factoraux
    (67) factor -> . varcte
    (68) factoraux -> . LEFTPARENTHESES seen_insert_fondo expresion RIGHTPARENTHESES seen_remove_fondo
    (69) varcte -> . ID seen_ID
    (70) varcte -> . INT_CTE seen_CTE_INT
    (71) varcte -> . FLOAT_CTE seen_CTE_FLOAT

    LEFTPARENTHESES shift and go to state 80
    ID              shift and go to state 62
    INT_CTE         shift and go to state 63
    FLOAT_CTE       shift and go to state 64

    exp                            shift and go to state 136
    termino                        shift and go to state 83
    factor                         shift and go to state 84
    factoraux                      shift and go to state 85
    varcte                         shift and go to state 86

state 127

    (55) expaux -> MINUS seen_operador . exp
    (52) exp -> . termino seen_termino
    (53) exp -> . termino seen_termino expaux
    (56) termino -> . factor seen_factor
    (57) termino -> . factor seen_factor terminoaux
    (66) factor -> . factoraux
    (67) factor -> . varcte
    (68) factoraux -> . LEFTPARENTHESES seen_insert_fondo expresion RIGHTPARENTHESES seen_remove_fondo
    (69) varcte -> . ID seen_ID
    (70) varcte -> . INT_CTE seen_CTE_INT
    (71) varcte -> . FLOAT_CTE seen_CTE_FLOAT

    LEFTPARENTHESES shift and go to state 80
    ID              shift and go to state 62
    INT_CTE         shift and go to state 63
    FLOAT_CTE       shift and go to state 64

    exp                            shift and go to state 137
    termino                        shift and go to state 83
    factor                         shift and go to state 84
    factoraux                      shift and go to state 85
    varcte                         shift and go to state 86

state 128

    (58) terminoaux -> DIVIDE seen_operador . termino
    (56) termino -> . factor seen_factor
    (57) termino -> . factor seen_factor terminoaux
    (66) factor -> . factoraux
    (67) factor -> . varcte
    (68) factoraux -> . LEFTPARENTHESES seen_insert_fondo expresion RIGHTPARENTHESES seen_remove_fondo
    (69) varcte -> . ID seen_ID
    (70) varcte -> . INT_CTE seen_CTE_INT
    (71) varcte -> . FLOAT_CTE seen_CTE_FLOAT

    LEFTPARENTHESES shift and go to state 80
    ID              shift and go to state 62
    INT_CTE         shift and go to state 63
    FLOAT_CTE       shift and go to state 64

    termino                        shift and go to state 138
    factor                         shift and go to state 84
    factoraux                      shift and go to state 85
    varcte                         shift and go to state 86

state 129

    (59) terminoaux -> MULTIPLY seen_operador . termino
    (56) termino -> . factor seen_factor
    (57) termino -> . factor seen_factor terminoaux
    (66) factor -> . factoraux
    (67) factor -> . varcte
    (68) factoraux -> . LEFTPARENTHESES seen_insert_fondo expresion RIGHTPARENTHESES seen_remove_fondo
    (69) varcte -> . ID seen_ID
    (70) varcte -> . INT_CTE seen_CTE_INT
    (71) varcte -> . FLOAT_CTE seen_CTE_FLOAT

    LEFTPARENTHESES shift and go to state 80
    ID              shift and go to state 62
    INT_CTE         shift and go to state 63
    FLOAT_CTE       shift and go to state 64

    termino                        shift and go to state 139
    factor                         shift and go to state 84
    factoraux                      shift and go to state 85
    varcte                         shift and go to state 86

state 130

    (81) while -> WHILE seen_while LEFTPARENTHESES expresion RIGHTPARENTHESES seen_right_parentheses_while . bloque SEMICOLON seen_end_while
    (31) bloque -> . LEFTBRACE vars bloqueaux RIGHTBRACE

    LEFTBRACE       shift and go to state 39

    bloque                         shift and go to state 140

state 131

    (68) factoraux -> LEFTPARENTHESES seen_insert_fondo expresion RIGHTPARENTHESES seen_remove_fondo .

    DIVIDE          reduce using rule 68 (factoraux -> LEFTPARENTHESES seen_insert_fondo expresion RIGHTPARENTHESES seen_remove_fondo .)
    MULTIPLY        reduce using rule 68 (factoraux -> LEFTPARENTHESES seen_insert_fondo expresion RIGHTPARENTHESES seen_remove_fondo .)
    PLUS            reduce using rule 68 (factoraux -> LEFTPARENTHESES seen_insert_fondo expresion RIGHTPARENTHESES seen_remove_fondo .)
    MINUS           reduce using rule 68 (factoraux -> LEFTPARENTHESES seen_insert_fondo expresion RIGHTPARENTHESES seen_remove_fondo .)
    GREATERTHAN     reduce using rule 68 (factoraux -> LEFTPARENTHESES seen_insert_fondo expresion RIGHTPARENTHESES seen_remove_fondo .)
    LESSTHAN        reduce using rule 68 (factoraux -> LEFTPARENTHESES seen_insert_fondo expresion RIGHTPARENTHESES seen_remove_fondo .)
    NOTEQUALS       reduce using rule 68 (factoraux -> LEFTPARENTHESES seen_insert_fondo expresion RIGHTPARENTHESES seen_remove_fondo .)
    LEFTPARENTHESES reduce using rule 68 (factoraux -> LEFTPARENTHESES seen_insert_fondo expresion RIGHTPARENTHESES seen_remove_fondo .)
    ID              reduce using rule 68 (factoraux -> LEFTPARENTHESES seen_insert_fondo expresion RIGHTPARENTHESES seen_remove_fondo .)
    INT_CTE         reduce using rule 68 (factoraux -> LEFTPARENTHESES seen_insert_fondo expresion RIGHTPARENTHESES seen_remove_fondo .)
    FLOAT_CTE       reduce using rule 68 (factoraux -> LEFTPARENTHESES seen_insert_fondo expresion RIGHTPARENTHESES seen_remove_fondo .)
    RIGHTPARENTHESES reduce using rule 68 (factoraux -> LEFTPARENTHESES seen_insert_fondo expresion RIGHTPARENTHESES seen_remove_fondo .)
    COMMA           reduce using rule 68 (factoraux -> LEFTPARENTHESES seen_insert_fondo expresion RIGHTPARENTHESES seen_remove_fondo .)
    SEMICOLON       reduce using rule 68 (factoraux -> LEFTPARENTHESES seen_insert_fondo expresion RIGHTPARENTHESES seen_remove_fondo .)


state 132

    (60) condicion -> IF LEFTPARENTHESES expresion RIGHTPARENTHESES seen_right_parentheses_condicion bloque condicionaux .

    IF              reduce using rule 60 (condicion -> IF LEFTPARENTHESES expresion RIGHTPARENTHESES seen_right_parentheses_condicion bloque condicionaux .)
    PRINT           reduce using rule 60 (condicion -> IF LEFTPARENTHESES expresion RIGHTPARENTHESES seen_right_parentheses_condicion bloque condicionaux .)
    WHILE           reduce using rule 60 (condicion -> IF LEFTPARENTHESES expresion RIGHTPARENTHESES seen_right_parentheses_condicion bloque condicionaux .)
    ID              reduce using rule 60 (condicion -> IF LEFTPARENTHESES expresion RIGHTPARENTHESES seen_right_parentheses_condicion bloque condicionaux .)
    INT_CTE         reduce using rule 60 (condicion -> IF LEFTPARENTHESES expresion RIGHTPARENTHESES seen_right_parentheses_condicion bloque condicionaux .)
    FLOAT_CTE       reduce using rule 60 (condicion -> IF LEFTPARENTHESES expresion RIGHTPARENTHESES seen_right_parentheses_condicion bloque condicionaux .)
    RIGHTBRACE      reduce using rule 60 (condicion -> IF LEFTPARENTHESES expresion RIGHTPARENTHESES seen_right_parentheses_condicion bloque condicionaux .)


state 133

    (61) condicionaux -> ELSE . seen_else bloque SEMICOLON seen_end_condicion
    (64) seen_else -> .

    LEFTBRACE       reduce using rule 64 (seen_else -> .)

    seen_else                      shift and go to state 141

state 134

    (62) condicionaux -> SEMICOLON . seen_end_condicion
    (65) seen_end_condicion -> .

    IF              reduce using rule 65 (seen_end_condicion -> .)
    PRINT           reduce using rule 65 (seen_end_condicion -> .)
    WHILE           reduce using rule 65 (seen_end_condicion -> .)
    ID              reduce using rule 65 (seen_end_condicion -> .)
    INT_CTE         reduce using rule 65 (seen_end_condicion -> .)
    FLOAT_CTE       reduce using rule 65 (seen_end_condicion -> .)
    RIGHTBRACE      reduce using rule 65 (seen_end_condicion -> .)

    seen_end_condicion             shift and go to state 142

state 135

    (42) expresion -> exp seen_comparacion expresionaux exp seen_comparacion .

    RIGHTPARENTHESES reduce using rule 42 (expresion -> exp seen_comparacion expresionaux exp seen_comparacion .)
    COMMA           reduce using rule 42 (expresion -> exp seen_comparacion expresionaux exp seen_comparacion .)
    SEMICOLON       reduce using rule 42 (expresion -> exp seen_comparacion expresionaux exp seen_comparacion .)


state 136

    (54) expaux -> PLUS seen_operador exp .

    GREATERTHAN     reduce using rule 54 (expaux -> PLUS seen_operador exp .)
    LESSTHAN        reduce using rule 54 (expaux -> PLUS seen_operador exp .)
    NOTEQUALS       reduce using rule 54 (expaux -> PLUS seen_operador exp .)
    LEFTPARENTHESES reduce using rule 54 (expaux -> PLUS seen_operador exp .)
    ID              reduce using rule 54 (expaux -> PLUS seen_operador exp .)
    INT_CTE         reduce using rule 54 (expaux -> PLUS seen_operador exp .)
    FLOAT_CTE       reduce using rule 54 (expaux -> PLUS seen_operador exp .)
    RIGHTPARENTHESES reduce using rule 54 (expaux -> PLUS seen_operador exp .)
    COMMA           reduce using rule 54 (expaux -> PLUS seen_operador exp .)
    SEMICOLON       reduce using rule 54 (expaux -> PLUS seen_operador exp .)


state 137

    (55) expaux -> MINUS seen_operador exp .

    GREATERTHAN     reduce using rule 55 (expaux -> MINUS seen_operador exp .)
    LESSTHAN        reduce using rule 55 (expaux -> MINUS seen_operador exp .)
    NOTEQUALS       reduce using rule 55 (expaux -> MINUS seen_operador exp .)
    LEFTPARENTHESES reduce using rule 55 (expaux -> MINUS seen_operador exp .)
    ID              reduce using rule 55 (expaux -> MINUS seen_operador exp .)
    INT_CTE         reduce using rule 55 (expaux -> MINUS seen_operador exp .)
    FLOAT_CTE       reduce using rule 55 (expaux -> MINUS seen_operador exp .)
    RIGHTPARENTHESES reduce using rule 55 (expaux -> MINUS seen_operador exp .)
    COMMA           reduce using rule 55 (expaux -> MINUS seen_operador exp .)
    SEMICOLON       reduce using rule 55 (expaux -> MINUS seen_operador exp .)


state 138

    (58) terminoaux -> DIVIDE seen_operador termino .

    PLUS            reduce using rule 58 (terminoaux -> DIVIDE seen_operador termino .)
    MINUS           reduce using rule 58 (terminoaux -> DIVIDE seen_operador termino .)
    GREATERTHAN     reduce using rule 58 (terminoaux -> DIVIDE seen_operador termino .)
    LESSTHAN        reduce using rule 58 (terminoaux -> DIVIDE seen_operador termino .)
    NOTEQUALS       reduce using rule 58 (terminoaux -> DIVIDE seen_operador termino .)
    LEFTPARENTHESES reduce using rule 58 (terminoaux -> DIVIDE seen_operador termino .)
    ID              reduce using rule 58 (terminoaux -> DIVIDE seen_operador termino .)
    INT_CTE         reduce using rule 58 (terminoaux -> DIVIDE seen_operador termino .)
    FLOAT_CTE       reduce using rule 58 (terminoaux -> DIVIDE seen_operador termino .)
    RIGHTPARENTHESES reduce using rule 58 (terminoaux -> DIVIDE seen_operador termino .)
    COMMA           reduce using rule 58 (terminoaux -> DIVIDE seen_operador termino .)
    SEMICOLON       reduce using rule 58 (terminoaux -> DIVIDE seen_operador termino .)


state 139

    (59) terminoaux -> MULTIPLY seen_operador termino .

    PLUS            reduce using rule 59 (terminoaux -> MULTIPLY seen_operador termino .)
    MINUS           reduce using rule 59 (terminoaux -> MULTIPLY seen_operador termino .)
    GREATERTHAN     reduce using rule 59 (terminoaux -> MULTIPLY seen_operador termino .)
    LESSTHAN        reduce using rule 59 (terminoaux -> MULTIPLY seen_operador termino .)
    NOTEQUALS       reduce using rule 59 (terminoaux -> MULTIPLY seen_operador termino .)
    LEFTPARENTHESES reduce using rule 59 (terminoaux -> MULTIPLY seen_operador termino .)
    ID              reduce using rule 59 (terminoaux -> MULTIPLY seen_operador termino .)
    INT_CTE         reduce using rule 59 (terminoaux -> MULTIPLY seen_operador termino .)
    FLOAT_CTE       reduce using rule 59 (terminoaux -> MULTIPLY seen_operador termino .)
    RIGHTPARENTHESES reduce using rule 59 (terminoaux -> MULTIPLY seen_operador termino .)
    COMMA           reduce using rule 59 (terminoaux -> MULTIPLY seen_operador termino .)
    SEMICOLON       reduce using rule 59 (terminoaux -> MULTIPLY seen_operador termino .)


state 140

    (81) while -> WHILE seen_while LEFTPARENTHESES expresion RIGHTPARENTHESES seen_right_parentheses_while bloque . SEMICOLON seen_end_while

    SEMICOLON       shift and go to state 143


state 141

    (61) condicionaux -> ELSE seen_else . bloque SEMICOLON seen_end_condicion
    (31) bloque -> . LEFTBRACE vars bloqueaux RIGHTBRACE

    LEFTBRACE       shift and go to state 39

    bloque                         shift and go to state 144

state 142

    (62) condicionaux -> SEMICOLON seen_end_condicion .

    IF              reduce using rule 62 (condicionaux -> SEMICOLON seen_end_condicion .)
    PRINT           reduce using rule 62 (condicionaux -> SEMICOLON seen_end_condicion .)
    WHILE           reduce using rule 62 (condicionaux -> SEMICOLON seen_end_condicion .)
    ID              reduce using rule 62 (condicionaux -> SEMICOLON seen_end_condicion .)
    INT_CTE         reduce using rule 62 (condicionaux -> SEMICOLON seen_end_condicion .)
    FLOAT_CTE       reduce using rule 62 (condicionaux -> SEMICOLON seen_end_condicion .)
    RIGHTBRACE      reduce using rule 62 (condicionaux -> SEMICOLON seen_end_condicion .)


state 143

    (81) while -> WHILE seen_while LEFTPARENTHESES expresion RIGHTPARENTHESES seen_right_parentheses_while bloque SEMICOLON . seen_end_while
    (84) seen_end_while -> .

    IF              reduce using rule 84 (seen_end_while -> .)
    PRINT           reduce using rule 84 (seen_end_while -> .)
    WHILE           reduce using rule 84 (seen_end_while -> .)
    ID              reduce using rule 84 (seen_end_while -> .)
    INT_CTE         reduce using rule 84 (seen_end_while -> .)
    FLOAT_CTE       reduce using rule 84 (seen_end_while -> .)
    RIGHTBRACE      reduce using rule 84 (seen_end_while -> .)

    seen_end_while                 shift and go to state 145

state 144

    (61) condicionaux -> ELSE seen_else bloque . SEMICOLON seen_end_condicion

    SEMICOLON       shift and go to state 146


state 145

    (81) while -> WHILE seen_while LEFTPARENTHESES expresion RIGHTPARENTHESES seen_right_parentheses_while bloque SEMICOLON seen_end_while .

    IF              reduce using rule 81 (while -> WHILE seen_while LEFTPARENTHESES expresion RIGHTPARENTHESES seen_right_parentheses_while bloque SEMICOLON seen_end_while .)
    PRINT           reduce using rule 81 (while -> WHILE seen_while LEFTPARENTHESES expresion RIGHTPARENTHESES seen_right_parentheses_while bloque SEMICOLON seen_end_while .)
    WHILE           reduce using rule 81 (while -> WHILE seen_while LEFTPARENTHESES expresion RIGHTPARENTHESES seen_right_parentheses_while bloque SEMICOLON seen_end_while .)
    ID              reduce using rule 81 (while -> WHILE seen_while LEFTPARENTHESES expresion RIGHTPARENTHESES seen_right_parentheses_while bloque SEMICOLON seen_end_while .)
    INT_CTE         reduce using rule 81 (while -> WHILE seen_while LEFTPARENTHESES expresion RIGHTPARENTHESES seen_right_parentheses_while bloque SEMICOLON seen_end_while .)
    FLOAT_CTE       reduce using rule 81 (while -> WHILE seen_while LEFTPARENTHESES expresion RIGHTPARENTHESES seen_right_parentheses_while bloque SEMICOLON seen_end_while .)
    RIGHTBRACE      reduce using rule 81 (while -> WHILE seen_while LEFTPARENTHESES expresion RIGHTPARENTHESES seen_right_parentheses_while bloque SEMICOLON seen_end_while .)


state 146

    (61) condicionaux -> ELSE seen_else bloque SEMICOLON . seen_end_condicion
    (65) seen_end_condicion -> .

    IF              reduce using rule 65 (seen_end_condicion -> .)
    PRINT           reduce using rule 65 (seen_end_condicion -> .)
    WHILE           reduce using rule 65 (seen_end_condicion -> .)
    ID              reduce using rule 65 (seen_end_condicion -> .)
    INT_CTE         reduce using rule 65 (seen_end_condicion -> .)
    FLOAT_CTE       reduce using rule 65 (seen_end_condicion -> .)
    RIGHTBRACE      reduce using rule 65 (seen_end_condicion -> .)

    seen_end_condicion             shift and go to state 147

state 147

    (61) condicionaux -> ELSE seen_else bloque SEMICOLON seen_end_condicion .

    IF              reduce using rule 61 (condicionaux -> ELSE seen_else bloque SEMICOLON seen_end_condicion .)
    PRINT           reduce using rule 61 (condicionaux -> ELSE seen_else bloque SEMICOLON seen_end_condicion .)
    WHILE           reduce using rule 61 (condicionaux -> ELSE seen_else bloque SEMICOLON seen_end_condicion .)
    ID              reduce using rule 61 (condicionaux -> ELSE seen_else bloque SEMICOLON seen_end_condicion .)
    INT_CTE         reduce using rule 61 (condicionaux -> ELSE seen_else bloque SEMICOLON seen_end_condicion .)
    FLOAT_CTE       reduce using rule 61 (condicionaux -> ELSE seen_else bloque SEMICOLON seen_end_condicion .)
    RIGHTBRACE      reduce using rule 61 (condicionaux -> ELSE seen_else bloque SEMICOLON seen_end_condicion .)

