Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    BOOLEAN_CTE
    CALL
    COLON
    LEFTBRACKET
    NOTEQUAL
    READ
    RIGHTBRACKET

Grammar

Rule 0     S' -> calc
Rule 1     calc -> PROGRAMA ID seen_program SEMICOLON vars modulesaux functionmain
Rule 2     modulesaux -> function modulesaux
Rule 3     modulesaux -> <empty>
Rule 4     seen_program -> <empty>
Rule 5     vars -> VAR seen_vars tipo ID seen_ID_var varsaux SEMICOLON vars
Rule 6     vars -> empty
Rule 7     seen_vars -> <empty>
Rule 8     seen_vars_end -> <empty>
Rule 9     varsaux -> COMMA ID seen_ID_var varsaux
Rule 10    varsaux -> <empty>
Rule 11    seen_ID_var -> <empty>
Rule 12    tipo -> INT seen_tipo
Rule 13    tipo -> FLOAT seen_tipo
Rule 14    tipo -> BOOLEAN seen_tipo
Rule 15    seen_tipo -> <empty>
Rule 16    function -> FUNCTION returnfunctionaux ID seen_id_function params bloque seen_function_end
Rule 17    seen_id_function -> <empty>
Rule 18    seen_function_end -> <empty>
Rule 19    functionmain -> MAIN seen_function_main LEFTPARENTHESES RIGHTPARENTHESES bloque
Rule 20    seen_function_main -> <empty>
Rule 21    returnfunctionaux -> tipo
Rule 22    returnfunctionaux -> VOID seen_void
Rule 23    seen_void -> <empty>
Rule 24    params -> LEFTPARENTHESES seen_params_init paramsaux RIGHTPARENTHESES
Rule 25    seen_params_init -> <empty>
Rule 26    seen_params_end -> <empty>
Rule 27    paramsaux -> tipo ID seen_ID_params paramsaux
Rule 28    paramsaux -> COMMA paramsaux
Rule 29    paramsaux -> empty
Rule 30    seen_ID_params -> <empty>
Rule 31    bloque -> LEFTBRACE vars seen_start_bloqueaux bloqueaux RIGHTBRACE
Rule 32    seen_start_bloqueaux -> <empty>
Rule 33    bloqueaux -> estatuto bloqueaux
Rule 34    bloqueaux -> <empty>
Rule 35    estatuto -> asignacion
Rule 36    estatuto -> condicion
Rule 37    estatuto -> escritura
Rule 38    estatuto -> while
Rule 39    estatuto -> functionCall
Rule 40    asignacion -> varcte EQUALS seen_equals expresion seen_final_asignacion SEMICOLON
Rule 41    seen_equals -> <empty>
Rule 42    seen_final_asignacion -> <empty>
Rule 43    expresion -> exp seen_comparacion
Rule 44    expresion -> exp seen_comparacion expresionaux exp seen_comparacion
Rule 45    expresionaux -> GREATERTHAN seen_operador
Rule 46    expresionaux -> LESSTHAN seen_operador
Rule 47    expresionaux -> NOTEQUALS seen_operador
Rule 48    expresionaux -> <empty>
Rule 49    escritura -> PRINT LEFTPARENTHESES escrituraaux RIGHTPARENTHESES SEMICOLON
Rule 50    escrituraaux -> escrituraaux2
Rule 51    escrituraaux -> escrituraaux2 COMMA escrituraaux
Rule 52    escrituraaux2 -> expresion seen_print_cuadruplo
Rule 53    escrituraaux2 -> STRING_CTE seen_print_cuadruplo
Rule 54    seen_print_cuadruplo -> <empty>
Rule 55    exp -> termino seen_termino
Rule 56    exp -> termino seen_termino expaux
Rule 57    expaux -> PLUS seen_operador exp
Rule 58    expaux -> MINUS seen_operador exp
Rule 59    termino -> factor seen_factor
Rule 60    termino -> factor seen_factor terminoaux
Rule 61    terminoaux -> DIVIDE seen_operador termino
Rule 62    terminoaux -> MULTIPLY seen_operador termino
Rule 63    condicion -> IF LEFTPARENTHESES expresion RIGHTPARENTHESES seen_right_parentheses_condicion bloque condicionaux
Rule 64    condicionaux -> ELSE seen_else bloque SEMICOLON seen_end_condicion
Rule 65    condicionaux -> SEMICOLON seen_end_condicion
Rule 66    seen_right_parentheses_condicion -> <empty>
Rule 67    seen_else -> <empty>
Rule 68    seen_end_condicion -> <empty>
Rule 69    factor -> factoraux
Rule 70    factor -> varcte
Rule 71    factoraux -> LEFTPARENTHESES seen_insert_fondo expresion RIGHTPARENTHESES seen_remove_fondo
Rule 72    varcte -> ID seen_ID
Rule 73    varcte -> INT_CTE seen_CTE_INT
Rule 74    varcte -> FLOAT_CTE seen_CTE_FLOAT
Rule 75    seen_CTE_INT -> <empty>
Rule 76    seen_CTE_FLOAT -> <empty>
Rule 77    seen_insert_fondo -> <empty>
Rule 78    seen_remove_fondo -> <empty>
Rule 79    seen_ID -> <empty>
Rule 80    seen_operador -> <empty>
Rule 81    seen_termino -> <empty>
Rule 82    seen_factor -> <empty>
Rule 83    seen_comparacion -> <empty>
Rule 84    while -> WHILE seen_while LEFTPARENTHESES expresion RIGHTPARENTHESES seen_right_parentheses_while bloque SEMICOLON seen_end_while
Rule 85    seen_while -> <empty>
Rule 86    seen_right_parentheses_while -> <empty>
Rule 87    seen_end_while -> <empty>
Rule 88    functionCall -> ID seen_fCall_id LEFTPARENTHESES seen_leftp_fCall paramsFunctionCall seen_end_paramsFCall RIGHTPARENTHESES seen_rightp_fCall SEMICOLON
Rule 89    seen_fCall_id -> <empty>
Rule 90    seen_leftp_fCall -> <empty>
Rule 91    paramsFunctionCall -> expresion seen_parameter_fCall COMMA seen_comma_params_fCall paramsFunctionCall
Rule 92    paramsFunctionCall -> expresion seen_parameter_fCall
Rule 93    seen_parameter_fCall -> <empty>
Rule 94    seen_comma_params_fCall -> <empty>
Rule 95    seen_end_paramsFCall -> <empty>
Rule 96    seen_rightp_fCall -> <empty>
Rule 97    empty -> <empty>

Terminals, with rules where they appear

BOOLEAN              : 14
BOOLEAN_CTE          : 
CALL                 : 
COLON                : 
COMMA                : 9 28 51 91
DIVIDE               : 61
ELSE                 : 64
EQUALS               : 40
FLOAT                : 13
FLOAT_CTE            : 74
FUNCTION             : 16
GREATERTHAN          : 45
ID                   : 1 5 9 16 27 72 88
IF                   : 63
INT                  : 12
INT_CTE              : 73
LEFTBRACE            : 31
LEFTBRACKET          : 
LEFTPARENTHESES      : 19 24 49 63 71 84 88
LESSTHAN             : 46
MAIN                 : 19
MINUS                : 58
MULTIPLY             : 62
NOTEQUAL             : 
NOTEQUALS            : 47
PLUS                 : 57
PRINT                : 49
PROGRAMA             : 1
READ                 : 
RIGHTBRACE           : 31
RIGHTBRACKET         : 
RIGHTPARENTHESES     : 19 24 49 63 71 84 88
SEMICOLON            : 1 5 40 49 64 65 84 88
STRING_CTE           : 53
VAR                  : 5
VOID                 : 22
WHILE                : 84
error                : 

Nonterminals, with rules where they appear

asignacion           : 35
bloque               : 16 19 63 64 84
bloqueaux            : 31 33
calc                 : 0
condicion            : 36
condicionaux         : 63
empty                : 6 29
escritura            : 37
escrituraaux         : 49 51
escrituraaux2        : 50 51
estatuto             : 33
exp                  : 43 44 44 57 58
expaux               : 56
expresion            : 40 52 63 71 84 91 92
expresionaux         : 44
factor               : 59 60
factoraux            : 69
function             : 2
functionCall         : 39
functionmain         : 1
modulesaux           : 1 2
params               : 16
paramsFunctionCall   : 88 91
paramsaux            : 24 27 28
returnfunctionaux    : 16
seen_CTE_FLOAT       : 74
seen_CTE_INT         : 73
seen_ID              : 72
seen_ID_params       : 27
seen_ID_var          : 5 9
seen_comma_params_fCall : 91
seen_comparacion     : 43 44 44
seen_else            : 64
seen_end_condicion   : 64 65
seen_end_paramsFCall : 88
seen_end_while       : 84
seen_equals          : 40
seen_fCall_id        : 88
seen_factor          : 59 60
seen_final_asignacion : 40
seen_function_end    : 16
seen_function_main   : 19
seen_id_function     : 16
seen_insert_fondo    : 71
seen_leftp_fCall     : 88
seen_operador        : 45 46 47 57 58 61 62
seen_parameter_fCall : 91 92
seen_params_end      : 
seen_params_init     : 24
seen_print_cuadruplo : 52 53
seen_program         : 1
seen_remove_fondo    : 71
seen_right_parentheses_condicion : 63
seen_right_parentheses_while : 84
seen_rightp_fCall    : 88
seen_start_bloqueaux : 31
seen_termino         : 55 56
seen_tipo            : 12 13 14
seen_vars            : 5
seen_vars_end        : 
seen_void            : 22
seen_while           : 84
termino              : 55 56 61 62
terminoaux           : 60
tipo                 : 5 21 27
varcte               : 40 70
vars                 : 1 5 31
varsaux              : 5 9
while                : 38

Parsing method: LALR

state 0

    (0) S' -> . calc
    (1) calc -> . PROGRAMA ID seen_program SEMICOLON vars modulesaux functionmain

    PROGRAMA        shift and go to state 2

    calc                           shift and go to state 1

state 1

    (0) S' -> calc .



state 2

    (1) calc -> PROGRAMA . ID seen_program SEMICOLON vars modulesaux functionmain

    ID              shift and go to state 3


state 3

    (1) calc -> PROGRAMA ID . seen_program SEMICOLON vars modulesaux functionmain
    (4) seen_program -> .

    SEMICOLON       reduce using rule 4 (seen_program -> .)

    seen_program                   shift and go to state 4

state 4

    (1) calc -> PROGRAMA ID seen_program . SEMICOLON vars modulesaux functionmain

    SEMICOLON       shift and go to state 5


state 5

    (1) calc -> PROGRAMA ID seen_program SEMICOLON . vars modulesaux functionmain
    (5) vars -> . VAR seen_vars tipo ID seen_ID_var varsaux SEMICOLON vars
    (6) vars -> . empty
    (97) empty -> .

    VAR             shift and go to state 7
    FUNCTION        reduce using rule 97 (empty -> .)
    MAIN            reduce using rule 97 (empty -> .)

    vars                           shift and go to state 6
    empty                          shift and go to state 8

state 6

    (1) calc -> PROGRAMA ID seen_program SEMICOLON vars . modulesaux functionmain
    (2) modulesaux -> . function modulesaux
    (3) modulesaux -> .
    (16) function -> . FUNCTION returnfunctionaux ID seen_id_function params bloque seen_function_end

    MAIN            reduce using rule 3 (modulesaux -> .)
    FUNCTION        shift and go to state 11

    modulesaux                     shift and go to state 9
    function                       shift and go to state 10

state 7

    (5) vars -> VAR . seen_vars tipo ID seen_ID_var varsaux SEMICOLON vars
    (7) seen_vars -> .

    INT             reduce using rule 7 (seen_vars -> .)
    FLOAT           reduce using rule 7 (seen_vars -> .)
    BOOLEAN         reduce using rule 7 (seen_vars -> .)

    seen_vars                      shift and go to state 12

state 8

    (6) vars -> empty .

    FUNCTION        reduce using rule 6 (vars -> empty .)
    MAIN            reduce using rule 6 (vars -> empty .)
    IF              reduce using rule 6 (vars -> empty .)
    PRINT           reduce using rule 6 (vars -> empty .)
    WHILE           reduce using rule 6 (vars -> empty .)
    ID              reduce using rule 6 (vars -> empty .)
    INT_CTE         reduce using rule 6 (vars -> empty .)
    FLOAT_CTE       reduce using rule 6 (vars -> empty .)
    RIGHTBRACE      reduce using rule 6 (vars -> empty .)


state 9

    (1) calc -> PROGRAMA ID seen_program SEMICOLON vars modulesaux . functionmain
    (19) functionmain -> . MAIN seen_function_main LEFTPARENTHESES RIGHTPARENTHESES bloque

    MAIN            shift and go to state 14

    functionmain                   shift and go to state 13

state 10

    (2) modulesaux -> function . modulesaux
    (2) modulesaux -> . function modulesaux
    (3) modulesaux -> .
    (16) function -> . FUNCTION returnfunctionaux ID seen_id_function params bloque seen_function_end

    MAIN            reduce using rule 3 (modulesaux -> .)
    FUNCTION        shift and go to state 11

    function                       shift and go to state 10
    modulesaux                     shift and go to state 15

state 11

    (16) function -> FUNCTION . returnfunctionaux ID seen_id_function params bloque seen_function_end
    (21) returnfunctionaux -> . tipo
    (22) returnfunctionaux -> . VOID seen_void
    (12) tipo -> . INT seen_tipo
    (13) tipo -> . FLOAT seen_tipo
    (14) tipo -> . BOOLEAN seen_tipo

    VOID            shift and go to state 18
    INT             shift and go to state 19
    FLOAT           shift and go to state 20
    BOOLEAN         shift and go to state 21

    returnfunctionaux              shift and go to state 16
    tipo                           shift and go to state 17

state 12

    (5) vars -> VAR seen_vars . tipo ID seen_ID_var varsaux SEMICOLON vars
    (12) tipo -> . INT seen_tipo
    (13) tipo -> . FLOAT seen_tipo
    (14) tipo -> . BOOLEAN seen_tipo

    INT             shift and go to state 19
    FLOAT           shift and go to state 20
    BOOLEAN         shift and go to state 21

    tipo                           shift and go to state 22

state 13

    (1) calc -> PROGRAMA ID seen_program SEMICOLON vars modulesaux functionmain .

    $end            reduce using rule 1 (calc -> PROGRAMA ID seen_program SEMICOLON vars modulesaux functionmain .)


state 14

    (19) functionmain -> MAIN . seen_function_main LEFTPARENTHESES RIGHTPARENTHESES bloque
    (20) seen_function_main -> .

    LEFTPARENTHESES reduce using rule 20 (seen_function_main -> .)

    seen_function_main             shift and go to state 23

state 15

    (2) modulesaux -> function modulesaux .

    MAIN            reduce using rule 2 (modulesaux -> function modulesaux .)


state 16

    (16) function -> FUNCTION returnfunctionaux . ID seen_id_function params bloque seen_function_end

    ID              shift and go to state 24


state 17

    (21) returnfunctionaux -> tipo .

    ID              reduce using rule 21 (returnfunctionaux -> tipo .)


state 18

    (22) returnfunctionaux -> VOID . seen_void
    (23) seen_void -> .

    ID              reduce using rule 23 (seen_void -> .)

    seen_void                      shift and go to state 25

state 19

    (12) tipo -> INT . seen_tipo
    (15) seen_tipo -> .

    ID              reduce using rule 15 (seen_tipo -> .)

    seen_tipo                      shift and go to state 26

state 20

    (13) tipo -> FLOAT . seen_tipo
    (15) seen_tipo -> .

    ID              reduce using rule 15 (seen_tipo -> .)

    seen_tipo                      shift and go to state 27

state 21

    (14) tipo -> BOOLEAN . seen_tipo
    (15) seen_tipo -> .

    ID              reduce using rule 15 (seen_tipo -> .)

    seen_tipo                      shift and go to state 28

state 22

    (5) vars -> VAR seen_vars tipo . ID seen_ID_var varsaux SEMICOLON vars

    ID              shift and go to state 29


state 23

    (19) functionmain -> MAIN seen_function_main . LEFTPARENTHESES RIGHTPARENTHESES bloque

    LEFTPARENTHESES shift and go to state 30


state 24

    (16) function -> FUNCTION returnfunctionaux ID . seen_id_function params bloque seen_function_end
    (17) seen_id_function -> .

    LEFTPARENTHESES reduce using rule 17 (seen_id_function -> .)

    seen_id_function               shift and go to state 31

state 25

    (22) returnfunctionaux -> VOID seen_void .

    ID              reduce using rule 22 (returnfunctionaux -> VOID seen_void .)


state 26

    (12) tipo -> INT seen_tipo .

    ID              reduce using rule 12 (tipo -> INT seen_tipo .)


state 27

    (13) tipo -> FLOAT seen_tipo .

    ID              reduce using rule 13 (tipo -> FLOAT seen_tipo .)


state 28

    (14) tipo -> BOOLEAN seen_tipo .

    ID              reduce using rule 14 (tipo -> BOOLEAN seen_tipo .)


state 29

    (5) vars -> VAR seen_vars tipo ID . seen_ID_var varsaux SEMICOLON vars
    (11) seen_ID_var -> .

    COMMA           reduce using rule 11 (seen_ID_var -> .)
    SEMICOLON       reduce using rule 11 (seen_ID_var -> .)

    seen_ID_var                    shift and go to state 32

state 30

    (19) functionmain -> MAIN seen_function_main LEFTPARENTHESES . RIGHTPARENTHESES bloque

    RIGHTPARENTHESES shift and go to state 33


state 31

    (16) function -> FUNCTION returnfunctionaux ID seen_id_function . params bloque seen_function_end
    (24) params -> . LEFTPARENTHESES seen_params_init paramsaux RIGHTPARENTHESES

    LEFTPARENTHESES shift and go to state 35

    params                         shift and go to state 34

state 32

    (5) vars -> VAR seen_vars tipo ID seen_ID_var . varsaux SEMICOLON vars
    (9) varsaux -> . COMMA ID seen_ID_var varsaux
    (10) varsaux -> .

    COMMA           shift and go to state 37
    SEMICOLON       reduce using rule 10 (varsaux -> .)

    varsaux                        shift and go to state 36

state 33

    (19) functionmain -> MAIN seen_function_main LEFTPARENTHESES RIGHTPARENTHESES . bloque
    (31) bloque -> . LEFTBRACE vars seen_start_bloqueaux bloqueaux RIGHTBRACE

    LEFTBRACE       shift and go to state 39

    bloque                         shift and go to state 38

state 34

    (16) function -> FUNCTION returnfunctionaux ID seen_id_function params . bloque seen_function_end
    (31) bloque -> . LEFTBRACE vars seen_start_bloqueaux bloqueaux RIGHTBRACE

    LEFTBRACE       shift and go to state 39

    bloque                         shift and go to state 40

state 35

    (24) params -> LEFTPARENTHESES . seen_params_init paramsaux RIGHTPARENTHESES
    (25) seen_params_init -> .

    COMMA           reduce using rule 25 (seen_params_init -> .)
    INT             reduce using rule 25 (seen_params_init -> .)
    FLOAT           reduce using rule 25 (seen_params_init -> .)
    BOOLEAN         reduce using rule 25 (seen_params_init -> .)
    RIGHTPARENTHESES reduce using rule 25 (seen_params_init -> .)

    seen_params_init               shift and go to state 41

state 36

    (5) vars -> VAR seen_vars tipo ID seen_ID_var varsaux . SEMICOLON vars

    SEMICOLON       shift and go to state 42


state 37

    (9) varsaux -> COMMA . ID seen_ID_var varsaux

    ID              shift and go to state 43


state 38

    (19) functionmain -> MAIN seen_function_main LEFTPARENTHESES RIGHTPARENTHESES bloque .

    $end            reduce using rule 19 (functionmain -> MAIN seen_function_main LEFTPARENTHESES RIGHTPARENTHESES bloque .)


state 39

    (31) bloque -> LEFTBRACE . vars seen_start_bloqueaux bloqueaux RIGHTBRACE
    (5) vars -> . VAR seen_vars tipo ID seen_ID_var varsaux SEMICOLON vars
    (6) vars -> . empty
    (97) empty -> .

    VAR             shift and go to state 7
    IF              reduce using rule 97 (empty -> .)
    PRINT           reduce using rule 97 (empty -> .)
    WHILE           reduce using rule 97 (empty -> .)
    ID              reduce using rule 97 (empty -> .)
    INT_CTE         reduce using rule 97 (empty -> .)
    FLOAT_CTE       reduce using rule 97 (empty -> .)
    RIGHTBRACE      reduce using rule 97 (empty -> .)

    vars                           shift and go to state 44
    empty                          shift and go to state 8

state 40

    (16) function -> FUNCTION returnfunctionaux ID seen_id_function params bloque . seen_function_end
    (18) seen_function_end -> .

    FUNCTION        reduce using rule 18 (seen_function_end -> .)
    MAIN            reduce using rule 18 (seen_function_end -> .)

    seen_function_end              shift and go to state 45

state 41

    (24) params -> LEFTPARENTHESES seen_params_init . paramsaux RIGHTPARENTHESES
    (27) paramsaux -> . tipo ID seen_ID_params paramsaux
    (28) paramsaux -> . COMMA paramsaux
    (29) paramsaux -> . empty
    (12) tipo -> . INT seen_tipo
    (13) tipo -> . FLOAT seen_tipo
    (14) tipo -> . BOOLEAN seen_tipo
    (97) empty -> .

    COMMA           shift and go to state 48
    INT             shift and go to state 19
    FLOAT           shift and go to state 20
    BOOLEAN         shift and go to state 21
    RIGHTPARENTHESES reduce using rule 97 (empty -> .)

    paramsaux                      shift and go to state 46
    tipo                           shift and go to state 47
    empty                          shift and go to state 49

state 42

    (5) vars -> VAR seen_vars tipo ID seen_ID_var varsaux SEMICOLON . vars
    (5) vars -> . VAR seen_vars tipo ID seen_ID_var varsaux SEMICOLON vars
    (6) vars -> . empty
    (97) empty -> .

    VAR             shift and go to state 7
    FUNCTION        reduce using rule 97 (empty -> .)
    MAIN            reduce using rule 97 (empty -> .)
    IF              reduce using rule 97 (empty -> .)
    PRINT           reduce using rule 97 (empty -> .)
    WHILE           reduce using rule 97 (empty -> .)
    ID              reduce using rule 97 (empty -> .)
    INT_CTE         reduce using rule 97 (empty -> .)
    FLOAT_CTE       reduce using rule 97 (empty -> .)
    RIGHTBRACE      reduce using rule 97 (empty -> .)

    vars                           shift and go to state 50
    empty                          shift and go to state 8

state 43

    (9) varsaux -> COMMA ID . seen_ID_var varsaux
    (11) seen_ID_var -> .

    COMMA           reduce using rule 11 (seen_ID_var -> .)
    SEMICOLON       reduce using rule 11 (seen_ID_var -> .)

    seen_ID_var                    shift and go to state 51

state 44

    (31) bloque -> LEFTBRACE vars . seen_start_bloqueaux bloqueaux RIGHTBRACE
    (32) seen_start_bloqueaux -> .

    IF              reduce using rule 32 (seen_start_bloqueaux -> .)
    PRINT           reduce using rule 32 (seen_start_bloqueaux -> .)
    WHILE           reduce using rule 32 (seen_start_bloqueaux -> .)
    ID              reduce using rule 32 (seen_start_bloqueaux -> .)
    INT_CTE         reduce using rule 32 (seen_start_bloqueaux -> .)
    FLOAT_CTE       reduce using rule 32 (seen_start_bloqueaux -> .)
    RIGHTBRACE      reduce using rule 32 (seen_start_bloqueaux -> .)

    seen_start_bloqueaux           shift and go to state 52

state 45

    (16) function -> FUNCTION returnfunctionaux ID seen_id_function params bloque seen_function_end .

    FUNCTION        reduce using rule 16 (function -> FUNCTION returnfunctionaux ID seen_id_function params bloque seen_function_end .)
    MAIN            reduce using rule 16 (function -> FUNCTION returnfunctionaux ID seen_id_function params bloque seen_function_end .)


state 46

    (24) params -> LEFTPARENTHESES seen_params_init paramsaux . RIGHTPARENTHESES

    RIGHTPARENTHESES shift and go to state 53


state 47

    (27) paramsaux -> tipo . ID seen_ID_params paramsaux

    ID              shift and go to state 54


state 48

    (28) paramsaux -> COMMA . paramsaux
    (27) paramsaux -> . tipo ID seen_ID_params paramsaux
    (28) paramsaux -> . COMMA paramsaux
    (29) paramsaux -> . empty
    (12) tipo -> . INT seen_tipo
    (13) tipo -> . FLOAT seen_tipo
    (14) tipo -> . BOOLEAN seen_tipo
    (97) empty -> .

    COMMA           shift and go to state 48
    INT             shift and go to state 19
    FLOAT           shift and go to state 20
    BOOLEAN         shift and go to state 21
    RIGHTPARENTHESES reduce using rule 97 (empty -> .)

    paramsaux                      shift and go to state 55
    tipo                           shift and go to state 47
    empty                          shift and go to state 49

state 49

    (29) paramsaux -> empty .

    RIGHTPARENTHESES reduce using rule 29 (paramsaux -> empty .)


state 50

    (5) vars -> VAR seen_vars tipo ID seen_ID_var varsaux SEMICOLON vars .

    FUNCTION        reduce using rule 5 (vars -> VAR seen_vars tipo ID seen_ID_var varsaux SEMICOLON vars .)
    MAIN            reduce using rule 5 (vars -> VAR seen_vars tipo ID seen_ID_var varsaux SEMICOLON vars .)
    IF              reduce using rule 5 (vars -> VAR seen_vars tipo ID seen_ID_var varsaux SEMICOLON vars .)
    PRINT           reduce using rule 5 (vars -> VAR seen_vars tipo ID seen_ID_var varsaux SEMICOLON vars .)
    WHILE           reduce using rule 5 (vars -> VAR seen_vars tipo ID seen_ID_var varsaux SEMICOLON vars .)
    ID              reduce using rule 5 (vars -> VAR seen_vars tipo ID seen_ID_var varsaux SEMICOLON vars .)
    INT_CTE         reduce using rule 5 (vars -> VAR seen_vars tipo ID seen_ID_var varsaux SEMICOLON vars .)
    FLOAT_CTE       reduce using rule 5 (vars -> VAR seen_vars tipo ID seen_ID_var varsaux SEMICOLON vars .)
    RIGHTBRACE      reduce using rule 5 (vars -> VAR seen_vars tipo ID seen_ID_var varsaux SEMICOLON vars .)


state 51

    (9) varsaux -> COMMA ID seen_ID_var . varsaux
    (9) varsaux -> . COMMA ID seen_ID_var varsaux
    (10) varsaux -> .

    COMMA           shift and go to state 37
    SEMICOLON       reduce using rule 10 (varsaux -> .)

    varsaux                        shift and go to state 56

state 52

    (31) bloque -> LEFTBRACE vars seen_start_bloqueaux . bloqueaux RIGHTBRACE
    (33) bloqueaux -> . estatuto bloqueaux
    (34) bloqueaux -> .
    (35) estatuto -> . asignacion
    (36) estatuto -> . condicion
    (37) estatuto -> . escritura
    (38) estatuto -> . while
    (39) estatuto -> . functionCall
    (40) asignacion -> . varcte EQUALS seen_equals expresion seen_final_asignacion SEMICOLON
    (63) condicion -> . IF LEFTPARENTHESES expresion RIGHTPARENTHESES seen_right_parentheses_condicion bloque condicionaux
    (49) escritura -> . PRINT LEFTPARENTHESES escrituraaux RIGHTPARENTHESES SEMICOLON
    (84) while -> . WHILE seen_while LEFTPARENTHESES expresion RIGHTPARENTHESES seen_right_parentheses_while bloque SEMICOLON seen_end_while
    (88) functionCall -> . ID seen_fCall_id LEFTPARENTHESES seen_leftp_fCall paramsFunctionCall seen_end_paramsFCall RIGHTPARENTHESES seen_rightp_fCall SEMICOLON
    (72) varcte -> . ID seen_ID
    (73) varcte -> . INT_CTE seen_CTE_INT
    (74) varcte -> . FLOAT_CTE seen_CTE_FLOAT

    RIGHTBRACE      reduce using rule 34 (bloqueaux -> .)
    IF              shift and go to state 65
    PRINT           shift and go to state 66
    WHILE           shift and go to state 67
    ID              shift and go to state 68
    INT_CTE         shift and go to state 69
    FLOAT_CTE       shift and go to state 70

    bloqueaux                      shift and go to state 57
    estatuto                       shift and go to state 58
    asignacion                     shift and go to state 59
    condicion                      shift and go to state 60
    escritura                      shift and go to state 61
    while                          shift and go to state 62
    functionCall                   shift and go to state 63
    varcte                         shift and go to state 64

state 53

    (24) params -> LEFTPARENTHESES seen_params_init paramsaux RIGHTPARENTHESES .

    LEFTBRACE       reduce using rule 24 (params -> LEFTPARENTHESES seen_params_init paramsaux RIGHTPARENTHESES .)


state 54

    (27) paramsaux -> tipo ID . seen_ID_params paramsaux
    (30) seen_ID_params -> .

    COMMA           reduce using rule 30 (seen_ID_params -> .)
    INT             reduce using rule 30 (seen_ID_params -> .)
    FLOAT           reduce using rule 30 (seen_ID_params -> .)
    BOOLEAN         reduce using rule 30 (seen_ID_params -> .)
    RIGHTPARENTHESES reduce using rule 30 (seen_ID_params -> .)

    seen_ID_params                 shift and go to state 71

state 55

    (28) paramsaux -> COMMA paramsaux .

    RIGHTPARENTHESES reduce using rule 28 (paramsaux -> COMMA paramsaux .)


state 56

    (9) varsaux -> COMMA ID seen_ID_var varsaux .

    SEMICOLON       reduce using rule 9 (varsaux -> COMMA ID seen_ID_var varsaux .)


state 57

    (31) bloque -> LEFTBRACE vars seen_start_bloqueaux bloqueaux . RIGHTBRACE

    RIGHTBRACE      shift and go to state 72


state 58

    (33) bloqueaux -> estatuto . bloqueaux
    (33) bloqueaux -> . estatuto bloqueaux
    (34) bloqueaux -> .
    (35) estatuto -> . asignacion
    (36) estatuto -> . condicion
    (37) estatuto -> . escritura
    (38) estatuto -> . while
    (39) estatuto -> . functionCall
    (40) asignacion -> . varcte EQUALS seen_equals expresion seen_final_asignacion SEMICOLON
    (63) condicion -> . IF LEFTPARENTHESES expresion RIGHTPARENTHESES seen_right_parentheses_condicion bloque condicionaux
    (49) escritura -> . PRINT LEFTPARENTHESES escrituraaux RIGHTPARENTHESES SEMICOLON
    (84) while -> . WHILE seen_while LEFTPARENTHESES expresion RIGHTPARENTHESES seen_right_parentheses_while bloque SEMICOLON seen_end_while
    (88) functionCall -> . ID seen_fCall_id LEFTPARENTHESES seen_leftp_fCall paramsFunctionCall seen_end_paramsFCall RIGHTPARENTHESES seen_rightp_fCall SEMICOLON
    (72) varcte -> . ID seen_ID
    (73) varcte -> . INT_CTE seen_CTE_INT
    (74) varcte -> . FLOAT_CTE seen_CTE_FLOAT

    RIGHTBRACE      reduce using rule 34 (bloqueaux -> .)
    IF              shift and go to state 65
    PRINT           shift and go to state 66
    WHILE           shift and go to state 67
    ID              shift and go to state 68
    INT_CTE         shift and go to state 69
    FLOAT_CTE       shift and go to state 70

    estatuto                       shift and go to state 58
    bloqueaux                      shift and go to state 73
    asignacion                     shift and go to state 59
    condicion                      shift and go to state 60
    escritura                      shift and go to state 61
    while                          shift and go to state 62
    functionCall                   shift and go to state 63
    varcte                         shift and go to state 64

state 59

    (35) estatuto -> asignacion .

    IF              reduce using rule 35 (estatuto -> asignacion .)
    PRINT           reduce using rule 35 (estatuto -> asignacion .)
    WHILE           reduce using rule 35 (estatuto -> asignacion .)
    ID              reduce using rule 35 (estatuto -> asignacion .)
    INT_CTE         reduce using rule 35 (estatuto -> asignacion .)
    FLOAT_CTE       reduce using rule 35 (estatuto -> asignacion .)
    RIGHTBRACE      reduce using rule 35 (estatuto -> asignacion .)


state 60

    (36) estatuto -> condicion .

    IF              reduce using rule 36 (estatuto -> condicion .)
    PRINT           reduce using rule 36 (estatuto -> condicion .)
    WHILE           reduce using rule 36 (estatuto -> condicion .)
    ID              reduce using rule 36 (estatuto -> condicion .)
    INT_CTE         reduce using rule 36 (estatuto -> condicion .)
    FLOAT_CTE       reduce using rule 36 (estatuto -> condicion .)
    RIGHTBRACE      reduce using rule 36 (estatuto -> condicion .)


state 61

    (37) estatuto -> escritura .

    IF              reduce using rule 37 (estatuto -> escritura .)
    PRINT           reduce using rule 37 (estatuto -> escritura .)
    WHILE           reduce using rule 37 (estatuto -> escritura .)
    ID              reduce using rule 37 (estatuto -> escritura .)
    INT_CTE         reduce using rule 37 (estatuto -> escritura .)
    FLOAT_CTE       reduce using rule 37 (estatuto -> escritura .)
    RIGHTBRACE      reduce using rule 37 (estatuto -> escritura .)


state 62

    (38) estatuto -> while .

    IF              reduce using rule 38 (estatuto -> while .)
    PRINT           reduce using rule 38 (estatuto -> while .)
    WHILE           reduce using rule 38 (estatuto -> while .)
    ID              reduce using rule 38 (estatuto -> while .)
    INT_CTE         reduce using rule 38 (estatuto -> while .)
    FLOAT_CTE       reduce using rule 38 (estatuto -> while .)
    RIGHTBRACE      reduce using rule 38 (estatuto -> while .)


state 63

    (39) estatuto -> functionCall .

    IF              reduce using rule 39 (estatuto -> functionCall .)
    PRINT           reduce using rule 39 (estatuto -> functionCall .)
    WHILE           reduce using rule 39 (estatuto -> functionCall .)
    ID              reduce using rule 39 (estatuto -> functionCall .)
    INT_CTE         reduce using rule 39 (estatuto -> functionCall .)
    FLOAT_CTE       reduce using rule 39 (estatuto -> functionCall .)
    RIGHTBRACE      reduce using rule 39 (estatuto -> functionCall .)


state 64

    (40) asignacion -> varcte . EQUALS seen_equals expresion seen_final_asignacion SEMICOLON

    EQUALS          shift and go to state 74


state 65

    (63) condicion -> IF . LEFTPARENTHESES expresion RIGHTPARENTHESES seen_right_parentheses_condicion bloque condicionaux

    LEFTPARENTHESES shift and go to state 75


state 66

    (49) escritura -> PRINT . LEFTPARENTHESES escrituraaux RIGHTPARENTHESES SEMICOLON

    LEFTPARENTHESES shift and go to state 76


state 67

    (84) while -> WHILE . seen_while LEFTPARENTHESES expresion RIGHTPARENTHESES seen_right_parentheses_while bloque SEMICOLON seen_end_while
    (85) seen_while -> .

    LEFTPARENTHESES reduce using rule 85 (seen_while -> .)

    seen_while                     shift and go to state 77

state 68

    (88) functionCall -> ID . seen_fCall_id LEFTPARENTHESES seen_leftp_fCall paramsFunctionCall seen_end_paramsFCall RIGHTPARENTHESES seen_rightp_fCall SEMICOLON
    (72) varcte -> ID . seen_ID
    (89) seen_fCall_id -> .
    (79) seen_ID -> .

    LEFTPARENTHESES reduce using rule 89 (seen_fCall_id -> .)
    EQUALS          reduce using rule 79 (seen_ID -> .)

    seen_fCall_id                  shift and go to state 78
    seen_ID                        shift and go to state 79

state 69

    (73) varcte -> INT_CTE . seen_CTE_INT
    (75) seen_CTE_INT -> .

    EQUALS          reduce using rule 75 (seen_CTE_INT -> .)
    DIVIDE          reduce using rule 75 (seen_CTE_INT -> .)
    MULTIPLY        reduce using rule 75 (seen_CTE_INT -> .)
    PLUS            reduce using rule 75 (seen_CTE_INT -> .)
    MINUS           reduce using rule 75 (seen_CTE_INT -> .)
    GREATERTHAN     reduce using rule 75 (seen_CTE_INT -> .)
    LESSTHAN        reduce using rule 75 (seen_CTE_INT -> .)
    NOTEQUALS       reduce using rule 75 (seen_CTE_INT -> .)
    LEFTPARENTHESES reduce using rule 75 (seen_CTE_INT -> .)
    ID              reduce using rule 75 (seen_CTE_INT -> .)
    INT_CTE         reduce using rule 75 (seen_CTE_INT -> .)
    FLOAT_CTE       reduce using rule 75 (seen_CTE_INT -> .)
    RIGHTPARENTHESES reduce using rule 75 (seen_CTE_INT -> .)
    COMMA           reduce using rule 75 (seen_CTE_INT -> .)
    SEMICOLON       reduce using rule 75 (seen_CTE_INT -> .)

    seen_CTE_INT                   shift and go to state 80

state 70

    (74) varcte -> FLOAT_CTE . seen_CTE_FLOAT
    (76) seen_CTE_FLOAT -> .

    EQUALS          reduce using rule 76 (seen_CTE_FLOAT -> .)
    DIVIDE          reduce using rule 76 (seen_CTE_FLOAT -> .)
    MULTIPLY        reduce using rule 76 (seen_CTE_FLOAT -> .)
    PLUS            reduce using rule 76 (seen_CTE_FLOAT -> .)
    MINUS           reduce using rule 76 (seen_CTE_FLOAT -> .)
    GREATERTHAN     reduce using rule 76 (seen_CTE_FLOAT -> .)
    LESSTHAN        reduce using rule 76 (seen_CTE_FLOAT -> .)
    NOTEQUALS       reduce using rule 76 (seen_CTE_FLOAT -> .)
    LEFTPARENTHESES reduce using rule 76 (seen_CTE_FLOAT -> .)
    ID              reduce using rule 76 (seen_CTE_FLOAT -> .)
    INT_CTE         reduce using rule 76 (seen_CTE_FLOAT -> .)
    FLOAT_CTE       reduce using rule 76 (seen_CTE_FLOAT -> .)
    RIGHTPARENTHESES reduce using rule 76 (seen_CTE_FLOAT -> .)
    COMMA           reduce using rule 76 (seen_CTE_FLOAT -> .)
    SEMICOLON       reduce using rule 76 (seen_CTE_FLOAT -> .)

    seen_CTE_FLOAT                 shift and go to state 81

state 71

    (27) paramsaux -> tipo ID seen_ID_params . paramsaux
    (27) paramsaux -> . tipo ID seen_ID_params paramsaux
    (28) paramsaux -> . COMMA paramsaux
    (29) paramsaux -> . empty
    (12) tipo -> . INT seen_tipo
    (13) tipo -> . FLOAT seen_tipo
    (14) tipo -> . BOOLEAN seen_tipo
    (97) empty -> .

    COMMA           shift and go to state 48
    INT             shift and go to state 19
    FLOAT           shift and go to state 20
    BOOLEAN         shift and go to state 21
    RIGHTPARENTHESES reduce using rule 97 (empty -> .)

    tipo                           shift and go to state 47
    paramsaux                      shift and go to state 82
    empty                          shift and go to state 49

state 72

    (31) bloque -> LEFTBRACE vars seen_start_bloqueaux bloqueaux RIGHTBRACE .

    $end            reduce using rule 31 (bloque -> LEFTBRACE vars seen_start_bloqueaux bloqueaux RIGHTBRACE .)
    FUNCTION        reduce using rule 31 (bloque -> LEFTBRACE vars seen_start_bloqueaux bloqueaux RIGHTBRACE .)
    MAIN            reduce using rule 31 (bloque -> LEFTBRACE vars seen_start_bloqueaux bloqueaux RIGHTBRACE .)
    ELSE            reduce using rule 31 (bloque -> LEFTBRACE vars seen_start_bloqueaux bloqueaux RIGHTBRACE .)
    SEMICOLON       reduce using rule 31 (bloque -> LEFTBRACE vars seen_start_bloqueaux bloqueaux RIGHTBRACE .)


state 73

    (33) bloqueaux -> estatuto bloqueaux .

    RIGHTBRACE      reduce using rule 33 (bloqueaux -> estatuto bloqueaux .)


state 74

    (40) asignacion -> varcte EQUALS . seen_equals expresion seen_final_asignacion SEMICOLON
    (41) seen_equals -> .

    LEFTPARENTHESES reduce using rule 41 (seen_equals -> .)
    ID              reduce using rule 41 (seen_equals -> .)
    INT_CTE         reduce using rule 41 (seen_equals -> .)
    FLOAT_CTE       reduce using rule 41 (seen_equals -> .)

    seen_equals                    shift and go to state 83

state 75

    (63) condicion -> IF LEFTPARENTHESES . expresion RIGHTPARENTHESES seen_right_parentheses_condicion bloque condicionaux
    (43) expresion -> . exp seen_comparacion
    (44) expresion -> . exp seen_comparacion expresionaux exp seen_comparacion
    (55) exp -> . termino seen_termino
    (56) exp -> . termino seen_termino expaux
    (59) termino -> . factor seen_factor
    (60) termino -> . factor seen_factor terminoaux
    (69) factor -> . factoraux
    (70) factor -> . varcte
    (71) factoraux -> . LEFTPARENTHESES seen_insert_fondo expresion RIGHTPARENTHESES seen_remove_fondo
    (72) varcte -> . ID seen_ID
    (73) varcte -> . INT_CTE seen_CTE_INT
    (74) varcte -> . FLOAT_CTE seen_CTE_FLOAT

    LEFTPARENTHESES shift and go to state 84
    ID              shift and go to state 91
    INT_CTE         shift and go to state 69
    FLOAT_CTE       shift and go to state 70

    expresion                      shift and go to state 85
    exp                            shift and go to state 86
    termino                        shift and go to state 87
    factor                         shift and go to state 88
    factoraux                      shift and go to state 89
    varcte                         shift and go to state 90

state 76

    (49) escritura -> PRINT LEFTPARENTHESES . escrituraaux RIGHTPARENTHESES SEMICOLON
    (50) escrituraaux -> . escrituraaux2
    (51) escrituraaux -> . escrituraaux2 COMMA escrituraaux
    (52) escrituraaux2 -> . expresion seen_print_cuadruplo
    (53) escrituraaux2 -> . STRING_CTE seen_print_cuadruplo
    (43) expresion -> . exp seen_comparacion
    (44) expresion -> . exp seen_comparacion expresionaux exp seen_comparacion
    (55) exp -> . termino seen_termino
    (56) exp -> . termino seen_termino expaux
    (59) termino -> . factor seen_factor
    (60) termino -> . factor seen_factor terminoaux
    (69) factor -> . factoraux
    (70) factor -> . varcte
    (71) factoraux -> . LEFTPARENTHESES seen_insert_fondo expresion RIGHTPARENTHESES seen_remove_fondo
    (72) varcte -> . ID seen_ID
    (73) varcte -> . INT_CTE seen_CTE_INT
    (74) varcte -> . FLOAT_CTE seen_CTE_FLOAT

    STRING_CTE      shift and go to state 95
    LEFTPARENTHESES shift and go to state 84
    ID              shift and go to state 91
    INT_CTE         shift and go to state 69
    FLOAT_CTE       shift and go to state 70

    escrituraaux                   shift and go to state 92
    escrituraaux2                  shift and go to state 93
    expresion                      shift and go to state 94
    exp                            shift and go to state 86
    termino                        shift and go to state 87
    factor                         shift and go to state 88
    factoraux                      shift and go to state 89
    varcte                         shift and go to state 90

state 77

    (84) while -> WHILE seen_while . LEFTPARENTHESES expresion RIGHTPARENTHESES seen_right_parentheses_while bloque SEMICOLON seen_end_while

    LEFTPARENTHESES shift and go to state 96


state 78

    (88) functionCall -> ID seen_fCall_id . LEFTPARENTHESES seen_leftp_fCall paramsFunctionCall seen_end_paramsFCall RIGHTPARENTHESES seen_rightp_fCall SEMICOLON

    LEFTPARENTHESES shift and go to state 97


state 79

    (72) varcte -> ID seen_ID .

    EQUALS          reduce using rule 72 (varcte -> ID seen_ID .)
    DIVIDE          reduce using rule 72 (varcte -> ID seen_ID .)
    MULTIPLY        reduce using rule 72 (varcte -> ID seen_ID .)
    PLUS            reduce using rule 72 (varcte -> ID seen_ID .)
    MINUS           reduce using rule 72 (varcte -> ID seen_ID .)
    GREATERTHAN     reduce using rule 72 (varcte -> ID seen_ID .)
    LESSTHAN        reduce using rule 72 (varcte -> ID seen_ID .)
    NOTEQUALS       reduce using rule 72 (varcte -> ID seen_ID .)
    LEFTPARENTHESES reduce using rule 72 (varcte -> ID seen_ID .)
    ID              reduce using rule 72 (varcte -> ID seen_ID .)
    INT_CTE         reduce using rule 72 (varcte -> ID seen_ID .)
    FLOAT_CTE       reduce using rule 72 (varcte -> ID seen_ID .)
    RIGHTPARENTHESES reduce using rule 72 (varcte -> ID seen_ID .)
    COMMA           reduce using rule 72 (varcte -> ID seen_ID .)
    SEMICOLON       reduce using rule 72 (varcte -> ID seen_ID .)


state 80

    (73) varcte -> INT_CTE seen_CTE_INT .

    EQUALS          reduce using rule 73 (varcte -> INT_CTE seen_CTE_INT .)
    DIVIDE          reduce using rule 73 (varcte -> INT_CTE seen_CTE_INT .)
    MULTIPLY        reduce using rule 73 (varcte -> INT_CTE seen_CTE_INT .)
    PLUS            reduce using rule 73 (varcte -> INT_CTE seen_CTE_INT .)
    MINUS           reduce using rule 73 (varcte -> INT_CTE seen_CTE_INT .)
    GREATERTHAN     reduce using rule 73 (varcte -> INT_CTE seen_CTE_INT .)
    LESSTHAN        reduce using rule 73 (varcte -> INT_CTE seen_CTE_INT .)
    NOTEQUALS       reduce using rule 73 (varcte -> INT_CTE seen_CTE_INT .)
    LEFTPARENTHESES reduce using rule 73 (varcte -> INT_CTE seen_CTE_INT .)
    ID              reduce using rule 73 (varcte -> INT_CTE seen_CTE_INT .)
    INT_CTE         reduce using rule 73 (varcte -> INT_CTE seen_CTE_INT .)
    FLOAT_CTE       reduce using rule 73 (varcte -> INT_CTE seen_CTE_INT .)
    RIGHTPARENTHESES reduce using rule 73 (varcte -> INT_CTE seen_CTE_INT .)
    COMMA           reduce using rule 73 (varcte -> INT_CTE seen_CTE_INT .)
    SEMICOLON       reduce using rule 73 (varcte -> INT_CTE seen_CTE_INT .)


state 81

    (74) varcte -> FLOAT_CTE seen_CTE_FLOAT .

    EQUALS          reduce using rule 74 (varcte -> FLOAT_CTE seen_CTE_FLOAT .)
    DIVIDE          reduce using rule 74 (varcte -> FLOAT_CTE seen_CTE_FLOAT .)
    MULTIPLY        reduce using rule 74 (varcte -> FLOAT_CTE seen_CTE_FLOAT .)
    PLUS            reduce using rule 74 (varcte -> FLOAT_CTE seen_CTE_FLOAT .)
    MINUS           reduce using rule 74 (varcte -> FLOAT_CTE seen_CTE_FLOAT .)
    GREATERTHAN     reduce using rule 74 (varcte -> FLOAT_CTE seen_CTE_FLOAT .)
    LESSTHAN        reduce using rule 74 (varcte -> FLOAT_CTE seen_CTE_FLOAT .)
    NOTEQUALS       reduce using rule 74 (varcte -> FLOAT_CTE seen_CTE_FLOAT .)
    LEFTPARENTHESES reduce using rule 74 (varcte -> FLOAT_CTE seen_CTE_FLOAT .)
    ID              reduce using rule 74 (varcte -> FLOAT_CTE seen_CTE_FLOAT .)
    INT_CTE         reduce using rule 74 (varcte -> FLOAT_CTE seen_CTE_FLOAT .)
    FLOAT_CTE       reduce using rule 74 (varcte -> FLOAT_CTE seen_CTE_FLOAT .)
    RIGHTPARENTHESES reduce using rule 74 (varcte -> FLOAT_CTE seen_CTE_FLOAT .)
    COMMA           reduce using rule 74 (varcte -> FLOAT_CTE seen_CTE_FLOAT .)
    SEMICOLON       reduce using rule 74 (varcte -> FLOAT_CTE seen_CTE_FLOAT .)


state 82

    (27) paramsaux -> tipo ID seen_ID_params paramsaux .

    RIGHTPARENTHESES reduce using rule 27 (paramsaux -> tipo ID seen_ID_params paramsaux .)


state 83

    (40) asignacion -> varcte EQUALS seen_equals . expresion seen_final_asignacion SEMICOLON
    (43) expresion -> . exp seen_comparacion
    (44) expresion -> . exp seen_comparacion expresionaux exp seen_comparacion
    (55) exp -> . termino seen_termino
    (56) exp -> . termino seen_termino expaux
    (59) termino -> . factor seen_factor
    (60) termino -> . factor seen_factor terminoaux
    (69) factor -> . factoraux
    (70) factor -> . varcte
    (71) factoraux -> . LEFTPARENTHESES seen_insert_fondo expresion RIGHTPARENTHESES seen_remove_fondo
    (72) varcte -> . ID seen_ID
    (73) varcte -> . INT_CTE seen_CTE_INT
    (74) varcte -> . FLOAT_CTE seen_CTE_FLOAT

    LEFTPARENTHESES shift and go to state 84
    ID              shift and go to state 91
    INT_CTE         shift and go to state 69
    FLOAT_CTE       shift and go to state 70

    varcte                         shift and go to state 90
    expresion                      shift and go to state 98
    exp                            shift and go to state 86
    termino                        shift and go to state 87
    factor                         shift and go to state 88
    factoraux                      shift and go to state 89

state 84

    (71) factoraux -> LEFTPARENTHESES . seen_insert_fondo expresion RIGHTPARENTHESES seen_remove_fondo
    (77) seen_insert_fondo -> .

    LEFTPARENTHESES reduce using rule 77 (seen_insert_fondo -> .)
    ID              reduce using rule 77 (seen_insert_fondo -> .)
    INT_CTE         reduce using rule 77 (seen_insert_fondo -> .)
    FLOAT_CTE       reduce using rule 77 (seen_insert_fondo -> .)

    seen_insert_fondo              shift and go to state 99

state 85

    (63) condicion -> IF LEFTPARENTHESES expresion . RIGHTPARENTHESES seen_right_parentheses_condicion bloque condicionaux

    RIGHTPARENTHESES shift and go to state 100


state 86

    (43) expresion -> exp . seen_comparacion
    (44) expresion -> exp . seen_comparacion expresionaux exp seen_comparacion
    (83) seen_comparacion -> .

    GREATERTHAN     reduce using rule 83 (seen_comparacion -> .)
    LESSTHAN        reduce using rule 83 (seen_comparacion -> .)
    NOTEQUALS       reduce using rule 83 (seen_comparacion -> .)
    LEFTPARENTHESES reduce using rule 83 (seen_comparacion -> .)
    ID              reduce using rule 83 (seen_comparacion -> .)
    INT_CTE         reduce using rule 83 (seen_comparacion -> .)
    FLOAT_CTE       reduce using rule 83 (seen_comparacion -> .)
    RIGHTPARENTHESES reduce using rule 83 (seen_comparacion -> .)
    COMMA           reduce using rule 83 (seen_comparacion -> .)
    SEMICOLON       reduce using rule 83 (seen_comparacion -> .)

    seen_comparacion               shift and go to state 101

state 87

    (55) exp -> termino . seen_termino
    (56) exp -> termino . seen_termino expaux
    (81) seen_termino -> .

    PLUS            reduce using rule 81 (seen_termino -> .)
    MINUS           reduce using rule 81 (seen_termino -> .)
    GREATERTHAN     reduce using rule 81 (seen_termino -> .)
    LESSTHAN        reduce using rule 81 (seen_termino -> .)
    NOTEQUALS       reduce using rule 81 (seen_termino -> .)
    LEFTPARENTHESES reduce using rule 81 (seen_termino -> .)
    ID              reduce using rule 81 (seen_termino -> .)
    INT_CTE         reduce using rule 81 (seen_termino -> .)
    FLOAT_CTE       reduce using rule 81 (seen_termino -> .)
    RIGHTPARENTHESES reduce using rule 81 (seen_termino -> .)
    COMMA           reduce using rule 81 (seen_termino -> .)
    SEMICOLON       reduce using rule 81 (seen_termino -> .)

    seen_termino                   shift and go to state 102

state 88

    (59) termino -> factor . seen_factor
    (60) termino -> factor . seen_factor terminoaux
    (82) seen_factor -> .

    DIVIDE          reduce using rule 82 (seen_factor -> .)
    MULTIPLY        reduce using rule 82 (seen_factor -> .)
    PLUS            reduce using rule 82 (seen_factor -> .)
    MINUS           reduce using rule 82 (seen_factor -> .)
    GREATERTHAN     reduce using rule 82 (seen_factor -> .)
    LESSTHAN        reduce using rule 82 (seen_factor -> .)
    NOTEQUALS       reduce using rule 82 (seen_factor -> .)
    LEFTPARENTHESES reduce using rule 82 (seen_factor -> .)
    ID              reduce using rule 82 (seen_factor -> .)
    INT_CTE         reduce using rule 82 (seen_factor -> .)
    FLOAT_CTE       reduce using rule 82 (seen_factor -> .)
    RIGHTPARENTHESES reduce using rule 82 (seen_factor -> .)
    COMMA           reduce using rule 82 (seen_factor -> .)
    SEMICOLON       reduce using rule 82 (seen_factor -> .)

    seen_factor                    shift and go to state 103

state 89

    (69) factor -> factoraux .

    DIVIDE          reduce using rule 69 (factor -> factoraux .)
    MULTIPLY        reduce using rule 69 (factor -> factoraux .)
    PLUS            reduce using rule 69 (factor -> factoraux .)
    MINUS           reduce using rule 69 (factor -> factoraux .)
    GREATERTHAN     reduce using rule 69 (factor -> factoraux .)
    LESSTHAN        reduce using rule 69 (factor -> factoraux .)
    NOTEQUALS       reduce using rule 69 (factor -> factoraux .)
    LEFTPARENTHESES reduce using rule 69 (factor -> factoraux .)
    ID              reduce using rule 69 (factor -> factoraux .)
    INT_CTE         reduce using rule 69 (factor -> factoraux .)
    FLOAT_CTE       reduce using rule 69 (factor -> factoraux .)
    RIGHTPARENTHESES reduce using rule 69 (factor -> factoraux .)
    COMMA           reduce using rule 69 (factor -> factoraux .)
    SEMICOLON       reduce using rule 69 (factor -> factoraux .)


state 90

    (70) factor -> varcte .

    DIVIDE          reduce using rule 70 (factor -> varcte .)
    MULTIPLY        reduce using rule 70 (factor -> varcte .)
    PLUS            reduce using rule 70 (factor -> varcte .)
    MINUS           reduce using rule 70 (factor -> varcte .)
    GREATERTHAN     reduce using rule 70 (factor -> varcte .)
    LESSTHAN        reduce using rule 70 (factor -> varcte .)
    NOTEQUALS       reduce using rule 70 (factor -> varcte .)
    LEFTPARENTHESES reduce using rule 70 (factor -> varcte .)
    ID              reduce using rule 70 (factor -> varcte .)
    INT_CTE         reduce using rule 70 (factor -> varcte .)
    FLOAT_CTE       reduce using rule 70 (factor -> varcte .)
    RIGHTPARENTHESES reduce using rule 70 (factor -> varcte .)
    COMMA           reduce using rule 70 (factor -> varcte .)
    SEMICOLON       reduce using rule 70 (factor -> varcte .)


state 91

    (72) varcte -> ID . seen_ID
    (79) seen_ID -> .

    DIVIDE          reduce using rule 79 (seen_ID -> .)
    MULTIPLY        reduce using rule 79 (seen_ID -> .)
    PLUS            reduce using rule 79 (seen_ID -> .)
    MINUS           reduce using rule 79 (seen_ID -> .)
    GREATERTHAN     reduce using rule 79 (seen_ID -> .)
    LESSTHAN        reduce using rule 79 (seen_ID -> .)
    NOTEQUALS       reduce using rule 79 (seen_ID -> .)
    LEFTPARENTHESES reduce using rule 79 (seen_ID -> .)
    ID              reduce using rule 79 (seen_ID -> .)
    INT_CTE         reduce using rule 79 (seen_ID -> .)
    FLOAT_CTE       reduce using rule 79 (seen_ID -> .)
    RIGHTPARENTHESES reduce using rule 79 (seen_ID -> .)
    COMMA           reduce using rule 79 (seen_ID -> .)
    SEMICOLON       reduce using rule 79 (seen_ID -> .)

    seen_ID                        shift and go to state 79

state 92

    (49) escritura -> PRINT LEFTPARENTHESES escrituraaux . RIGHTPARENTHESES SEMICOLON

    RIGHTPARENTHESES shift and go to state 104


state 93

    (50) escrituraaux -> escrituraaux2 .
    (51) escrituraaux -> escrituraaux2 . COMMA escrituraaux

    RIGHTPARENTHESES reduce using rule 50 (escrituraaux -> escrituraaux2 .)
    COMMA           shift and go to state 105


state 94

    (52) escrituraaux2 -> expresion . seen_print_cuadruplo
    (54) seen_print_cuadruplo -> .

    COMMA           reduce using rule 54 (seen_print_cuadruplo -> .)
    RIGHTPARENTHESES reduce using rule 54 (seen_print_cuadruplo -> .)

    seen_print_cuadruplo           shift and go to state 106

state 95

    (53) escrituraaux2 -> STRING_CTE . seen_print_cuadruplo
    (54) seen_print_cuadruplo -> .

    COMMA           reduce using rule 54 (seen_print_cuadruplo -> .)
    RIGHTPARENTHESES reduce using rule 54 (seen_print_cuadruplo -> .)

    seen_print_cuadruplo           shift and go to state 107

state 96

    (84) while -> WHILE seen_while LEFTPARENTHESES . expresion RIGHTPARENTHESES seen_right_parentheses_while bloque SEMICOLON seen_end_while
    (43) expresion -> . exp seen_comparacion
    (44) expresion -> . exp seen_comparacion expresionaux exp seen_comparacion
    (55) exp -> . termino seen_termino
    (56) exp -> . termino seen_termino expaux
    (59) termino -> . factor seen_factor
    (60) termino -> . factor seen_factor terminoaux
    (69) factor -> . factoraux
    (70) factor -> . varcte
    (71) factoraux -> . LEFTPARENTHESES seen_insert_fondo expresion RIGHTPARENTHESES seen_remove_fondo
    (72) varcte -> . ID seen_ID
    (73) varcte -> . INT_CTE seen_CTE_INT
    (74) varcte -> . FLOAT_CTE seen_CTE_FLOAT

    LEFTPARENTHESES shift and go to state 84
    ID              shift and go to state 91
    INT_CTE         shift and go to state 69
    FLOAT_CTE       shift and go to state 70

    expresion                      shift and go to state 108
    exp                            shift and go to state 86
    termino                        shift and go to state 87
    factor                         shift and go to state 88
    factoraux                      shift and go to state 89
    varcte                         shift and go to state 90

state 97

    (88) functionCall -> ID seen_fCall_id LEFTPARENTHESES . seen_leftp_fCall paramsFunctionCall seen_end_paramsFCall RIGHTPARENTHESES seen_rightp_fCall SEMICOLON
    (90) seen_leftp_fCall -> .

    LEFTPARENTHESES reduce using rule 90 (seen_leftp_fCall -> .)
    ID              reduce using rule 90 (seen_leftp_fCall -> .)
    INT_CTE         reduce using rule 90 (seen_leftp_fCall -> .)
    FLOAT_CTE       reduce using rule 90 (seen_leftp_fCall -> .)

    seen_leftp_fCall               shift and go to state 109

state 98

    (40) asignacion -> varcte EQUALS seen_equals expresion . seen_final_asignacion SEMICOLON
    (42) seen_final_asignacion -> .

    SEMICOLON       reduce using rule 42 (seen_final_asignacion -> .)

    seen_final_asignacion          shift and go to state 110

state 99

    (71) factoraux -> LEFTPARENTHESES seen_insert_fondo . expresion RIGHTPARENTHESES seen_remove_fondo
    (43) expresion -> . exp seen_comparacion
    (44) expresion -> . exp seen_comparacion expresionaux exp seen_comparacion
    (55) exp -> . termino seen_termino
    (56) exp -> . termino seen_termino expaux
    (59) termino -> . factor seen_factor
    (60) termino -> . factor seen_factor terminoaux
    (69) factor -> . factoraux
    (70) factor -> . varcte
    (71) factoraux -> . LEFTPARENTHESES seen_insert_fondo expresion RIGHTPARENTHESES seen_remove_fondo
    (72) varcte -> . ID seen_ID
    (73) varcte -> . INT_CTE seen_CTE_INT
    (74) varcte -> . FLOAT_CTE seen_CTE_FLOAT

    LEFTPARENTHESES shift and go to state 84
    ID              shift and go to state 91
    INT_CTE         shift and go to state 69
    FLOAT_CTE       shift and go to state 70

    expresion                      shift and go to state 111
    exp                            shift and go to state 86
    termino                        shift and go to state 87
    factor                         shift and go to state 88
    factoraux                      shift and go to state 89
    varcte                         shift and go to state 90

state 100

    (63) condicion -> IF LEFTPARENTHESES expresion RIGHTPARENTHESES . seen_right_parentheses_condicion bloque condicionaux
    (66) seen_right_parentheses_condicion -> .

    LEFTBRACE       reduce using rule 66 (seen_right_parentheses_condicion -> .)

    seen_right_parentheses_condicion shift and go to state 112

state 101

    (43) expresion -> exp seen_comparacion .
    (44) expresion -> exp seen_comparacion . expresionaux exp seen_comparacion
    (45) expresionaux -> . GREATERTHAN seen_operador
    (46) expresionaux -> . LESSTHAN seen_operador
    (47) expresionaux -> . NOTEQUALS seen_operador
    (48) expresionaux -> .

    RIGHTPARENTHESES reduce using rule 43 (expresion -> exp seen_comparacion .)
    COMMA           reduce using rule 43 (expresion -> exp seen_comparacion .)
    SEMICOLON       reduce using rule 43 (expresion -> exp seen_comparacion .)
    GREATERTHAN     shift and go to state 114
    LESSTHAN        shift and go to state 115
    NOTEQUALS       shift and go to state 116
    LEFTPARENTHESES reduce using rule 48 (expresionaux -> .)
    ID              reduce using rule 48 (expresionaux -> .)
    INT_CTE         reduce using rule 48 (expresionaux -> .)
    FLOAT_CTE       reduce using rule 48 (expresionaux -> .)

    expresionaux                   shift and go to state 113

state 102

    (55) exp -> termino seen_termino .
    (56) exp -> termino seen_termino . expaux
    (57) expaux -> . PLUS seen_operador exp
    (58) expaux -> . MINUS seen_operador exp

    GREATERTHAN     reduce using rule 55 (exp -> termino seen_termino .)
    LESSTHAN        reduce using rule 55 (exp -> termino seen_termino .)
    NOTEQUALS       reduce using rule 55 (exp -> termino seen_termino .)
    LEFTPARENTHESES reduce using rule 55 (exp -> termino seen_termino .)
    ID              reduce using rule 55 (exp -> termino seen_termino .)
    INT_CTE         reduce using rule 55 (exp -> termino seen_termino .)
    FLOAT_CTE       reduce using rule 55 (exp -> termino seen_termino .)
    RIGHTPARENTHESES reduce using rule 55 (exp -> termino seen_termino .)
    COMMA           reduce using rule 55 (exp -> termino seen_termino .)
    SEMICOLON       reduce using rule 55 (exp -> termino seen_termino .)
    PLUS            shift and go to state 118
    MINUS           shift and go to state 119

    expaux                         shift and go to state 117

state 103

    (59) termino -> factor seen_factor .
    (60) termino -> factor seen_factor . terminoaux
    (61) terminoaux -> . DIVIDE seen_operador termino
    (62) terminoaux -> . MULTIPLY seen_operador termino

    PLUS            reduce using rule 59 (termino -> factor seen_factor .)
    MINUS           reduce using rule 59 (termino -> factor seen_factor .)
    GREATERTHAN     reduce using rule 59 (termino -> factor seen_factor .)
    LESSTHAN        reduce using rule 59 (termino -> factor seen_factor .)
    NOTEQUALS       reduce using rule 59 (termino -> factor seen_factor .)
    LEFTPARENTHESES reduce using rule 59 (termino -> factor seen_factor .)
    ID              reduce using rule 59 (termino -> factor seen_factor .)
    INT_CTE         reduce using rule 59 (termino -> factor seen_factor .)
    FLOAT_CTE       reduce using rule 59 (termino -> factor seen_factor .)
    RIGHTPARENTHESES reduce using rule 59 (termino -> factor seen_factor .)
    COMMA           reduce using rule 59 (termino -> factor seen_factor .)
    SEMICOLON       reduce using rule 59 (termino -> factor seen_factor .)
    DIVIDE          shift and go to state 121
    MULTIPLY        shift and go to state 122

    terminoaux                     shift and go to state 120

state 104

    (49) escritura -> PRINT LEFTPARENTHESES escrituraaux RIGHTPARENTHESES . SEMICOLON

    SEMICOLON       shift and go to state 123


state 105

    (51) escrituraaux -> escrituraaux2 COMMA . escrituraaux
    (50) escrituraaux -> . escrituraaux2
    (51) escrituraaux -> . escrituraaux2 COMMA escrituraaux
    (52) escrituraaux2 -> . expresion seen_print_cuadruplo
    (53) escrituraaux2 -> . STRING_CTE seen_print_cuadruplo
    (43) expresion -> . exp seen_comparacion
    (44) expresion -> . exp seen_comparacion expresionaux exp seen_comparacion
    (55) exp -> . termino seen_termino
    (56) exp -> . termino seen_termino expaux
    (59) termino -> . factor seen_factor
    (60) termino -> . factor seen_factor terminoaux
    (69) factor -> . factoraux
    (70) factor -> . varcte
    (71) factoraux -> . LEFTPARENTHESES seen_insert_fondo expresion RIGHTPARENTHESES seen_remove_fondo
    (72) varcte -> . ID seen_ID
    (73) varcte -> . INT_CTE seen_CTE_INT
    (74) varcte -> . FLOAT_CTE seen_CTE_FLOAT

    STRING_CTE      shift and go to state 95
    LEFTPARENTHESES shift and go to state 84
    ID              shift and go to state 91
    INT_CTE         shift and go to state 69
    FLOAT_CTE       shift and go to state 70

    escrituraaux2                  shift and go to state 93
    escrituraaux                   shift and go to state 124
    expresion                      shift and go to state 94
    exp                            shift and go to state 86
    termino                        shift and go to state 87
    factor                         shift and go to state 88
    factoraux                      shift and go to state 89
    varcte                         shift and go to state 90

state 106

    (52) escrituraaux2 -> expresion seen_print_cuadruplo .

    COMMA           reduce using rule 52 (escrituraaux2 -> expresion seen_print_cuadruplo .)
    RIGHTPARENTHESES reduce using rule 52 (escrituraaux2 -> expresion seen_print_cuadruplo .)


state 107

    (53) escrituraaux2 -> STRING_CTE seen_print_cuadruplo .

    COMMA           reduce using rule 53 (escrituraaux2 -> STRING_CTE seen_print_cuadruplo .)
    RIGHTPARENTHESES reduce using rule 53 (escrituraaux2 -> STRING_CTE seen_print_cuadruplo .)


state 108

    (84) while -> WHILE seen_while LEFTPARENTHESES expresion . RIGHTPARENTHESES seen_right_parentheses_while bloque SEMICOLON seen_end_while

    RIGHTPARENTHESES shift and go to state 125


state 109

    (88) functionCall -> ID seen_fCall_id LEFTPARENTHESES seen_leftp_fCall . paramsFunctionCall seen_end_paramsFCall RIGHTPARENTHESES seen_rightp_fCall SEMICOLON
    (91) paramsFunctionCall -> . expresion seen_parameter_fCall COMMA seen_comma_params_fCall paramsFunctionCall
    (92) paramsFunctionCall -> . expresion seen_parameter_fCall
    (43) expresion -> . exp seen_comparacion
    (44) expresion -> . exp seen_comparacion expresionaux exp seen_comparacion
    (55) exp -> . termino seen_termino
    (56) exp -> . termino seen_termino expaux
    (59) termino -> . factor seen_factor
    (60) termino -> . factor seen_factor terminoaux
    (69) factor -> . factoraux
    (70) factor -> . varcte
    (71) factoraux -> . LEFTPARENTHESES seen_insert_fondo expresion RIGHTPARENTHESES seen_remove_fondo
    (72) varcte -> . ID seen_ID
    (73) varcte -> . INT_CTE seen_CTE_INT
    (74) varcte -> . FLOAT_CTE seen_CTE_FLOAT

    LEFTPARENTHESES shift and go to state 84
    ID              shift and go to state 91
    INT_CTE         shift and go to state 69
    FLOAT_CTE       shift and go to state 70

    paramsFunctionCall             shift and go to state 126
    expresion                      shift and go to state 127
    exp                            shift and go to state 86
    termino                        shift and go to state 87
    factor                         shift and go to state 88
    factoraux                      shift and go to state 89
    varcte                         shift and go to state 90

state 110

    (40) asignacion -> varcte EQUALS seen_equals expresion seen_final_asignacion . SEMICOLON

    SEMICOLON       shift and go to state 128


state 111

    (71) factoraux -> LEFTPARENTHESES seen_insert_fondo expresion . RIGHTPARENTHESES seen_remove_fondo

    RIGHTPARENTHESES shift and go to state 129


state 112

    (63) condicion -> IF LEFTPARENTHESES expresion RIGHTPARENTHESES seen_right_parentheses_condicion . bloque condicionaux
    (31) bloque -> . LEFTBRACE vars seen_start_bloqueaux bloqueaux RIGHTBRACE

    LEFTBRACE       shift and go to state 39

    bloque                         shift and go to state 130

state 113

    (44) expresion -> exp seen_comparacion expresionaux . exp seen_comparacion
    (55) exp -> . termino seen_termino
    (56) exp -> . termino seen_termino expaux
    (59) termino -> . factor seen_factor
    (60) termino -> . factor seen_factor terminoaux
    (69) factor -> . factoraux
    (70) factor -> . varcte
    (71) factoraux -> . LEFTPARENTHESES seen_insert_fondo expresion RIGHTPARENTHESES seen_remove_fondo
    (72) varcte -> . ID seen_ID
    (73) varcte -> . INT_CTE seen_CTE_INT
    (74) varcte -> . FLOAT_CTE seen_CTE_FLOAT

    LEFTPARENTHESES shift and go to state 84
    ID              shift and go to state 91
    INT_CTE         shift and go to state 69
    FLOAT_CTE       shift and go to state 70

    exp                            shift and go to state 131
    termino                        shift and go to state 87
    factor                         shift and go to state 88
    factoraux                      shift and go to state 89
    varcte                         shift and go to state 90

state 114

    (45) expresionaux -> GREATERTHAN . seen_operador
    (80) seen_operador -> .

    LEFTPARENTHESES reduce using rule 80 (seen_operador -> .)
    ID              reduce using rule 80 (seen_operador -> .)
    INT_CTE         reduce using rule 80 (seen_operador -> .)
    FLOAT_CTE       reduce using rule 80 (seen_operador -> .)

    seen_operador                  shift and go to state 132

state 115

    (46) expresionaux -> LESSTHAN . seen_operador
    (80) seen_operador -> .

    LEFTPARENTHESES reduce using rule 80 (seen_operador -> .)
    ID              reduce using rule 80 (seen_operador -> .)
    INT_CTE         reduce using rule 80 (seen_operador -> .)
    FLOAT_CTE       reduce using rule 80 (seen_operador -> .)

    seen_operador                  shift and go to state 133

state 116

    (47) expresionaux -> NOTEQUALS . seen_operador
    (80) seen_operador -> .

    LEFTPARENTHESES reduce using rule 80 (seen_operador -> .)
    ID              reduce using rule 80 (seen_operador -> .)
    INT_CTE         reduce using rule 80 (seen_operador -> .)
    FLOAT_CTE       reduce using rule 80 (seen_operador -> .)

    seen_operador                  shift and go to state 134

state 117

    (56) exp -> termino seen_termino expaux .

    GREATERTHAN     reduce using rule 56 (exp -> termino seen_termino expaux .)
    LESSTHAN        reduce using rule 56 (exp -> termino seen_termino expaux .)
    NOTEQUALS       reduce using rule 56 (exp -> termino seen_termino expaux .)
    LEFTPARENTHESES reduce using rule 56 (exp -> termino seen_termino expaux .)
    ID              reduce using rule 56 (exp -> termino seen_termino expaux .)
    INT_CTE         reduce using rule 56 (exp -> termino seen_termino expaux .)
    FLOAT_CTE       reduce using rule 56 (exp -> termino seen_termino expaux .)
    RIGHTPARENTHESES reduce using rule 56 (exp -> termino seen_termino expaux .)
    COMMA           reduce using rule 56 (exp -> termino seen_termino expaux .)
    SEMICOLON       reduce using rule 56 (exp -> termino seen_termino expaux .)


state 118

    (57) expaux -> PLUS . seen_operador exp
    (80) seen_operador -> .

    LEFTPARENTHESES reduce using rule 80 (seen_operador -> .)
    ID              reduce using rule 80 (seen_operador -> .)
    INT_CTE         reduce using rule 80 (seen_operador -> .)
    FLOAT_CTE       reduce using rule 80 (seen_operador -> .)

    seen_operador                  shift and go to state 135

state 119

    (58) expaux -> MINUS . seen_operador exp
    (80) seen_operador -> .

    LEFTPARENTHESES reduce using rule 80 (seen_operador -> .)
    ID              reduce using rule 80 (seen_operador -> .)
    INT_CTE         reduce using rule 80 (seen_operador -> .)
    FLOAT_CTE       reduce using rule 80 (seen_operador -> .)

    seen_operador                  shift and go to state 136

state 120

    (60) termino -> factor seen_factor terminoaux .

    PLUS            reduce using rule 60 (termino -> factor seen_factor terminoaux .)
    MINUS           reduce using rule 60 (termino -> factor seen_factor terminoaux .)
    GREATERTHAN     reduce using rule 60 (termino -> factor seen_factor terminoaux .)
    LESSTHAN        reduce using rule 60 (termino -> factor seen_factor terminoaux .)
    NOTEQUALS       reduce using rule 60 (termino -> factor seen_factor terminoaux .)
    LEFTPARENTHESES reduce using rule 60 (termino -> factor seen_factor terminoaux .)
    ID              reduce using rule 60 (termino -> factor seen_factor terminoaux .)
    INT_CTE         reduce using rule 60 (termino -> factor seen_factor terminoaux .)
    FLOAT_CTE       reduce using rule 60 (termino -> factor seen_factor terminoaux .)
    RIGHTPARENTHESES reduce using rule 60 (termino -> factor seen_factor terminoaux .)
    COMMA           reduce using rule 60 (termino -> factor seen_factor terminoaux .)
    SEMICOLON       reduce using rule 60 (termino -> factor seen_factor terminoaux .)


state 121

    (61) terminoaux -> DIVIDE . seen_operador termino
    (80) seen_operador -> .

    LEFTPARENTHESES reduce using rule 80 (seen_operador -> .)
    ID              reduce using rule 80 (seen_operador -> .)
    INT_CTE         reduce using rule 80 (seen_operador -> .)
    FLOAT_CTE       reduce using rule 80 (seen_operador -> .)

    seen_operador                  shift and go to state 137

state 122

    (62) terminoaux -> MULTIPLY . seen_operador termino
    (80) seen_operador -> .

    LEFTPARENTHESES reduce using rule 80 (seen_operador -> .)
    ID              reduce using rule 80 (seen_operador -> .)
    INT_CTE         reduce using rule 80 (seen_operador -> .)
    FLOAT_CTE       reduce using rule 80 (seen_operador -> .)

    seen_operador                  shift and go to state 138

state 123

    (49) escritura -> PRINT LEFTPARENTHESES escrituraaux RIGHTPARENTHESES SEMICOLON .

    IF              reduce using rule 49 (escritura -> PRINT LEFTPARENTHESES escrituraaux RIGHTPARENTHESES SEMICOLON .)
    PRINT           reduce using rule 49 (escritura -> PRINT LEFTPARENTHESES escrituraaux RIGHTPARENTHESES SEMICOLON .)
    WHILE           reduce using rule 49 (escritura -> PRINT LEFTPARENTHESES escrituraaux RIGHTPARENTHESES SEMICOLON .)
    ID              reduce using rule 49 (escritura -> PRINT LEFTPARENTHESES escrituraaux RIGHTPARENTHESES SEMICOLON .)
    INT_CTE         reduce using rule 49 (escritura -> PRINT LEFTPARENTHESES escrituraaux RIGHTPARENTHESES SEMICOLON .)
    FLOAT_CTE       reduce using rule 49 (escritura -> PRINT LEFTPARENTHESES escrituraaux RIGHTPARENTHESES SEMICOLON .)
    RIGHTBRACE      reduce using rule 49 (escritura -> PRINT LEFTPARENTHESES escrituraaux RIGHTPARENTHESES SEMICOLON .)


state 124

    (51) escrituraaux -> escrituraaux2 COMMA escrituraaux .

    RIGHTPARENTHESES reduce using rule 51 (escrituraaux -> escrituraaux2 COMMA escrituraaux .)


state 125

    (84) while -> WHILE seen_while LEFTPARENTHESES expresion RIGHTPARENTHESES . seen_right_parentheses_while bloque SEMICOLON seen_end_while
    (86) seen_right_parentheses_while -> .

    LEFTBRACE       reduce using rule 86 (seen_right_parentheses_while -> .)

    seen_right_parentheses_while   shift and go to state 139

state 126

    (88) functionCall -> ID seen_fCall_id LEFTPARENTHESES seen_leftp_fCall paramsFunctionCall . seen_end_paramsFCall RIGHTPARENTHESES seen_rightp_fCall SEMICOLON
    (95) seen_end_paramsFCall -> .

    RIGHTPARENTHESES reduce using rule 95 (seen_end_paramsFCall -> .)

    seen_end_paramsFCall           shift and go to state 140

state 127

    (91) paramsFunctionCall -> expresion . seen_parameter_fCall COMMA seen_comma_params_fCall paramsFunctionCall
    (92) paramsFunctionCall -> expresion . seen_parameter_fCall
    (93) seen_parameter_fCall -> .

    COMMA           reduce using rule 93 (seen_parameter_fCall -> .)
    RIGHTPARENTHESES reduce using rule 93 (seen_parameter_fCall -> .)

    seen_parameter_fCall           shift and go to state 141

state 128

    (40) asignacion -> varcte EQUALS seen_equals expresion seen_final_asignacion SEMICOLON .

    IF              reduce using rule 40 (asignacion -> varcte EQUALS seen_equals expresion seen_final_asignacion SEMICOLON .)
    PRINT           reduce using rule 40 (asignacion -> varcte EQUALS seen_equals expresion seen_final_asignacion SEMICOLON .)
    WHILE           reduce using rule 40 (asignacion -> varcte EQUALS seen_equals expresion seen_final_asignacion SEMICOLON .)
    ID              reduce using rule 40 (asignacion -> varcte EQUALS seen_equals expresion seen_final_asignacion SEMICOLON .)
    INT_CTE         reduce using rule 40 (asignacion -> varcte EQUALS seen_equals expresion seen_final_asignacion SEMICOLON .)
    FLOAT_CTE       reduce using rule 40 (asignacion -> varcte EQUALS seen_equals expresion seen_final_asignacion SEMICOLON .)
    RIGHTBRACE      reduce using rule 40 (asignacion -> varcte EQUALS seen_equals expresion seen_final_asignacion SEMICOLON .)


state 129

    (71) factoraux -> LEFTPARENTHESES seen_insert_fondo expresion RIGHTPARENTHESES . seen_remove_fondo
    (78) seen_remove_fondo -> .

    DIVIDE          reduce using rule 78 (seen_remove_fondo -> .)
    MULTIPLY        reduce using rule 78 (seen_remove_fondo -> .)
    PLUS            reduce using rule 78 (seen_remove_fondo -> .)
    MINUS           reduce using rule 78 (seen_remove_fondo -> .)
    GREATERTHAN     reduce using rule 78 (seen_remove_fondo -> .)
    LESSTHAN        reduce using rule 78 (seen_remove_fondo -> .)
    NOTEQUALS       reduce using rule 78 (seen_remove_fondo -> .)
    LEFTPARENTHESES reduce using rule 78 (seen_remove_fondo -> .)
    ID              reduce using rule 78 (seen_remove_fondo -> .)
    INT_CTE         reduce using rule 78 (seen_remove_fondo -> .)
    FLOAT_CTE       reduce using rule 78 (seen_remove_fondo -> .)
    RIGHTPARENTHESES reduce using rule 78 (seen_remove_fondo -> .)
    COMMA           reduce using rule 78 (seen_remove_fondo -> .)
    SEMICOLON       reduce using rule 78 (seen_remove_fondo -> .)

    seen_remove_fondo              shift and go to state 142

state 130

    (63) condicion -> IF LEFTPARENTHESES expresion RIGHTPARENTHESES seen_right_parentheses_condicion bloque . condicionaux
    (64) condicionaux -> . ELSE seen_else bloque SEMICOLON seen_end_condicion
    (65) condicionaux -> . SEMICOLON seen_end_condicion

    ELSE            shift and go to state 144
    SEMICOLON       shift and go to state 145

    condicionaux                   shift and go to state 143

state 131

    (44) expresion -> exp seen_comparacion expresionaux exp . seen_comparacion
    (83) seen_comparacion -> .

    RIGHTPARENTHESES reduce using rule 83 (seen_comparacion -> .)
    COMMA           reduce using rule 83 (seen_comparacion -> .)
    SEMICOLON       reduce using rule 83 (seen_comparacion -> .)

    seen_comparacion               shift and go to state 146

state 132

    (45) expresionaux -> GREATERTHAN seen_operador .

    LEFTPARENTHESES reduce using rule 45 (expresionaux -> GREATERTHAN seen_operador .)
    ID              reduce using rule 45 (expresionaux -> GREATERTHAN seen_operador .)
    INT_CTE         reduce using rule 45 (expresionaux -> GREATERTHAN seen_operador .)
    FLOAT_CTE       reduce using rule 45 (expresionaux -> GREATERTHAN seen_operador .)


state 133

    (46) expresionaux -> LESSTHAN seen_operador .

    LEFTPARENTHESES reduce using rule 46 (expresionaux -> LESSTHAN seen_operador .)
    ID              reduce using rule 46 (expresionaux -> LESSTHAN seen_operador .)
    INT_CTE         reduce using rule 46 (expresionaux -> LESSTHAN seen_operador .)
    FLOAT_CTE       reduce using rule 46 (expresionaux -> LESSTHAN seen_operador .)


state 134

    (47) expresionaux -> NOTEQUALS seen_operador .

    LEFTPARENTHESES reduce using rule 47 (expresionaux -> NOTEQUALS seen_operador .)
    ID              reduce using rule 47 (expresionaux -> NOTEQUALS seen_operador .)
    INT_CTE         reduce using rule 47 (expresionaux -> NOTEQUALS seen_operador .)
    FLOAT_CTE       reduce using rule 47 (expresionaux -> NOTEQUALS seen_operador .)


state 135

    (57) expaux -> PLUS seen_operador . exp
    (55) exp -> . termino seen_termino
    (56) exp -> . termino seen_termino expaux
    (59) termino -> . factor seen_factor
    (60) termino -> . factor seen_factor terminoaux
    (69) factor -> . factoraux
    (70) factor -> . varcte
    (71) factoraux -> . LEFTPARENTHESES seen_insert_fondo expresion RIGHTPARENTHESES seen_remove_fondo
    (72) varcte -> . ID seen_ID
    (73) varcte -> . INT_CTE seen_CTE_INT
    (74) varcte -> . FLOAT_CTE seen_CTE_FLOAT

    LEFTPARENTHESES shift and go to state 84
    ID              shift and go to state 91
    INT_CTE         shift and go to state 69
    FLOAT_CTE       shift and go to state 70

    exp                            shift and go to state 147
    termino                        shift and go to state 87
    factor                         shift and go to state 88
    factoraux                      shift and go to state 89
    varcte                         shift and go to state 90

state 136

    (58) expaux -> MINUS seen_operador . exp
    (55) exp -> . termino seen_termino
    (56) exp -> . termino seen_termino expaux
    (59) termino -> . factor seen_factor
    (60) termino -> . factor seen_factor terminoaux
    (69) factor -> . factoraux
    (70) factor -> . varcte
    (71) factoraux -> . LEFTPARENTHESES seen_insert_fondo expresion RIGHTPARENTHESES seen_remove_fondo
    (72) varcte -> . ID seen_ID
    (73) varcte -> . INT_CTE seen_CTE_INT
    (74) varcte -> . FLOAT_CTE seen_CTE_FLOAT

    LEFTPARENTHESES shift and go to state 84
    ID              shift and go to state 91
    INT_CTE         shift and go to state 69
    FLOAT_CTE       shift and go to state 70

    exp                            shift and go to state 148
    termino                        shift and go to state 87
    factor                         shift and go to state 88
    factoraux                      shift and go to state 89
    varcte                         shift and go to state 90

state 137

    (61) terminoaux -> DIVIDE seen_operador . termino
    (59) termino -> . factor seen_factor
    (60) termino -> . factor seen_factor terminoaux
    (69) factor -> . factoraux
    (70) factor -> . varcte
    (71) factoraux -> . LEFTPARENTHESES seen_insert_fondo expresion RIGHTPARENTHESES seen_remove_fondo
    (72) varcte -> . ID seen_ID
    (73) varcte -> . INT_CTE seen_CTE_INT
    (74) varcte -> . FLOAT_CTE seen_CTE_FLOAT

    LEFTPARENTHESES shift and go to state 84
    ID              shift and go to state 91
    INT_CTE         shift and go to state 69
    FLOAT_CTE       shift and go to state 70

    termino                        shift and go to state 149
    factor                         shift and go to state 88
    factoraux                      shift and go to state 89
    varcte                         shift and go to state 90

state 138

    (62) terminoaux -> MULTIPLY seen_operador . termino
    (59) termino -> . factor seen_factor
    (60) termino -> . factor seen_factor terminoaux
    (69) factor -> . factoraux
    (70) factor -> . varcte
    (71) factoraux -> . LEFTPARENTHESES seen_insert_fondo expresion RIGHTPARENTHESES seen_remove_fondo
    (72) varcte -> . ID seen_ID
    (73) varcte -> . INT_CTE seen_CTE_INT
    (74) varcte -> . FLOAT_CTE seen_CTE_FLOAT

    LEFTPARENTHESES shift and go to state 84
    ID              shift and go to state 91
    INT_CTE         shift and go to state 69
    FLOAT_CTE       shift and go to state 70

    termino                        shift and go to state 150
    factor                         shift and go to state 88
    factoraux                      shift and go to state 89
    varcte                         shift and go to state 90

state 139

    (84) while -> WHILE seen_while LEFTPARENTHESES expresion RIGHTPARENTHESES seen_right_parentheses_while . bloque SEMICOLON seen_end_while
    (31) bloque -> . LEFTBRACE vars seen_start_bloqueaux bloqueaux RIGHTBRACE

    LEFTBRACE       shift and go to state 39

    bloque                         shift and go to state 151

state 140

    (88) functionCall -> ID seen_fCall_id LEFTPARENTHESES seen_leftp_fCall paramsFunctionCall seen_end_paramsFCall . RIGHTPARENTHESES seen_rightp_fCall SEMICOLON

    RIGHTPARENTHESES shift and go to state 152


state 141

    (91) paramsFunctionCall -> expresion seen_parameter_fCall . COMMA seen_comma_params_fCall paramsFunctionCall
    (92) paramsFunctionCall -> expresion seen_parameter_fCall .

    COMMA           shift and go to state 153
    RIGHTPARENTHESES reduce using rule 92 (paramsFunctionCall -> expresion seen_parameter_fCall .)


state 142

    (71) factoraux -> LEFTPARENTHESES seen_insert_fondo expresion RIGHTPARENTHESES seen_remove_fondo .

    DIVIDE          reduce using rule 71 (factoraux -> LEFTPARENTHESES seen_insert_fondo expresion RIGHTPARENTHESES seen_remove_fondo .)
    MULTIPLY        reduce using rule 71 (factoraux -> LEFTPARENTHESES seen_insert_fondo expresion RIGHTPARENTHESES seen_remove_fondo .)
    PLUS            reduce using rule 71 (factoraux -> LEFTPARENTHESES seen_insert_fondo expresion RIGHTPARENTHESES seen_remove_fondo .)
    MINUS           reduce using rule 71 (factoraux -> LEFTPARENTHESES seen_insert_fondo expresion RIGHTPARENTHESES seen_remove_fondo .)
    GREATERTHAN     reduce using rule 71 (factoraux -> LEFTPARENTHESES seen_insert_fondo expresion RIGHTPARENTHESES seen_remove_fondo .)
    LESSTHAN        reduce using rule 71 (factoraux -> LEFTPARENTHESES seen_insert_fondo expresion RIGHTPARENTHESES seen_remove_fondo .)
    NOTEQUALS       reduce using rule 71 (factoraux -> LEFTPARENTHESES seen_insert_fondo expresion RIGHTPARENTHESES seen_remove_fondo .)
    LEFTPARENTHESES reduce using rule 71 (factoraux -> LEFTPARENTHESES seen_insert_fondo expresion RIGHTPARENTHESES seen_remove_fondo .)
    ID              reduce using rule 71 (factoraux -> LEFTPARENTHESES seen_insert_fondo expresion RIGHTPARENTHESES seen_remove_fondo .)
    INT_CTE         reduce using rule 71 (factoraux -> LEFTPARENTHESES seen_insert_fondo expresion RIGHTPARENTHESES seen_remove_fondo .)
    FLOAT_CTE       reduce using rule 71 (factoraux -> LEFTPARENTHESES seen_insert_fondo expresion RIGHTPARENTHESES seen_remove_fondo .)
    RIGHTPARENTHESES reduce using rule 71 (factoraux -> LEFTPARENTHESES seen_insert_fondo expresion RIGHTPARENTHESES seen_remove_fondo .)
    COMMA           reduce using rule 71 (factoraux -> LEFTPARENTHESES seen_insert_fondo expresion RIGHTPARENTHESES seen_remove_fondo .)
    SEMICOLON       reduce using rule 71 (factoraux -> LEFTPARENTHESES seen_insert_fondo expresion RIGHTPARENTHESES seen_remove_fondo .)


state 143

    (63) condicion -> IF LEFTPARENTHESES expresion RIGHTPARENTHESES seen_right_parentheses_condicion bloque condicionaux .

    IF              reduce using rule 63 (condicion -> IF LEFTPARENTHESES expresion RIGHTPARENTHESES seen_right_parentheses_condicion bloque condicionaux .)
    PRINT           reduce using rule 63 (condicion -> IF LEFTPARENTHESES expresion RIGHTPARENTHESES seen_right_parentheses_condicion bloque condicionaux .)
    WHILE           reduce using rule 63 (condicion -> IF LEFTPARENTHESES expresion RIGHTPARENTHESES seen_right_parentheses_condicion bloque condicionaux .)
    ID              reduce using rule 63 (condicion -> IF LEFTPARENTHESES expresion RIGHTPARENTHESES seen_right_parentheses_condicion bloque condicionaux .)
    INT_CTE         reduce using rule 63 (condicion -> IF LEFTPARENTHESES expresion RIGHTPARENTHESES seen_right_parentheses_condicion bloque condicionaux .)
    FLOAT_CTE       reduce using rule 63 (condicion -> IF LEFTPARENTHESES expresion RIGHTPARENTHESES seen_right_parentheses_condicion bloque condicionaux .)
    RIGHTBRACE      reduce using rule 63 (condicion -> IF LEFTPARENTHESES expresion RIGHTPARENTHESES seen_right_parentheses_condicion bloque condicionaux .)


state 144

    (64) condicionaux -> ELSE . seen_else bloque SEMICOLON seen_end_condicion
    (67) seen_else -> .

    LEFTBRACE       reduce using rule 67 (seen_else -> .)

    seen_else                      shift and go to state 154

state 145

    (65) condicionaux -> SEMICOLON . seen_end_condicion
    (68) seen_end_condicion -> .

    IF              reduce using rule 68 (seen_end_condicion -> .)
    PRINT           reduce using rule 68 (seen_end_condicion -> .)
    WHILE           reduce using rule 68 (seen_end_condicion -> .)
    ID              reduce using rule 68 (seen_end_condicion -> .)
    INT_CTE         reduce using rule 68 (seen_end_condicion -> .)
    FLOAT_CTE       reduce using rule 68 (seen_end_condicion -> .)
    RIGHTBRACE      reduce using rule 68 (seen_end_condicion -> .)

    seen_end_condicion             shift and go to state 155

state 146

    (44) expresion -> exp seen_comparacion expresionaux exp seen_comparacion .

    RIGHTPARENTHESES reduce using rule 44 (expresion -> exp seen_comparacion expresionaux exp seen_comparacion .)
    COMMA           reduce using rule 44 (expresion -> exp seen_comparacion expresionaux exp seen_comparacion .)
    SEMICOLON       reduce using rule 44 (expresion -> exp seen_comparacion expresionaux exp seen_comparacion .)


state 147

    (57) expaux -> PLUS seen_operador exp .

    GREATERTHAN     reduce using rule 57 (expaux -> PLUS seen_operador exp .)
    LESSTHAN        reduce using rule 57 (expaux -> PLUS seen_operador exp .)
    NOTEQUALS       reduce using rule 57 (expaux -> PLUS seen_operador exp .)
    LEFTPARENTHESES reduce using rule 57 (expaux -> PLUS seen_operador exp .)
    ID              reduce using rule 57 (expaux -> PLUS seen_operador exp .)
    INT_CTE         reduce using rule 57 (expaux -> PLUS seen_operador exp .)
    FLOAT_CTE       reduce using rule 57 (expaux -> PLUS seen_operador exp .)
    RIGHTPARENTHESES reduce using rule 57 (expaux -> PLUS seen_operador exp .)
    COMMA           reduce using rule 57 (expaux -> PLUS seen_operador exp .)
    SEMICOLON       reduce using rule 57 (expaux -> PLUS seen_operador exp .)


state 148

    (58) expaux -> MINUS seen_operador exp .

    GREATERTHAN     reduce using rule 58 (expaux -> MINUS seen_operador exp .)
    LESSTHAN        reduce using rule 58 (expaux -> MINUS seen_operador exp .)
    NOTEQUALS       reduce using rule 58 (expaux -> MINUS seen_operador exp .)
    LEFTPARENTHESES reduce using rule 58 (expaux -> MINUS seen_operador exp .)
    ID              reduce using rule 58 (expaux -> MINUS seen_operador exp .)
    INT_CTE         reduce using rule 58 (expaux -> MINUS seen_operador exp .)
    FLOAT_CTE       reduce using rule 58 (expaux -> MINUS seen_operador exp .)
    RIGHTPARENTHESES reduce using rule 58 (expaux -> MINUS seen_operador exp .)
    COMMA           reduce using rule 58 (expaux -> MINUS seen_operador exp .)
    SEMICOLON       reduce using rule 58 (expaux -> MINUS seen_operador exp .)


state 149

    (61) terminoaux -> DIVIDE seen_operador termino .

    PLUS            reduce using rule 61 (terminoaux -> DIVIDE seen_operador termino .)
    MINUS           reduce using rule 61 (terminoaux -> DIVIDE seen_operador termino .)
    GREATERTHAN     reduce using rule 61 (terminoaux -> DIVIDE seen_operador termino .)
    LESSTHAN        reduce using rule 61 (terminoaux -> DIVIDE seen_operador termino .)
    NOTEQUALS       reduce using rule 61 (terminoaux -> DIVIDE seen_operador termino .)
    LEFTPARENTHESES reduce using rule 61 (terminoaux -> DIVIDE seen_operador termino .)
    ID              reduce using rule 61 (terminoaux -> DIVIDE seen_operador termino .)
    INT_CTE         reduce using rule 61 (terminoaux -> DIVIDE seen_operador termino .)
    FLOAT_CTE       reduce using rule 61 (terminoaux -> DIVIDE seen_operador termino .)
    RIGHTPARENTHESES reduce using rule 61 (terminoaux -> DIVIDE seen_operador termino .)
    COMMA           reduce using rule 61 (terminoaux -> DIVIDE seen_operador termino .)
    SEMICOLON       reduce using rule 61 (terminoaux -> DIVIDE seen_operador termino .)


state 150

    (62) terminoaux -> MULTIPLY seen_operador termino .

    PLUS            reduce using rule 62 (terminoaux -> MULTIPLY seen_operador termino .)
    MINUS           reduce using rule 62 (terminoaux -> MULTIPLY seen_operador termino .)
    GREATERTHAN     reduce using rule 62 (terminoaux -> MULTIPLY seen_operador termino .)
    LESSTHAN        reduce using rule 62 (terminoaux -> MULTIPLY seen_operador termino .)
    NOTEQUALS       reduce using rule 62 (terminoaux -> MULTIPLY seen_operador termino .)
    LEFTPARENTHESES reduce using rule 62 (terminoaux -> MULTIPLY seen_operador termino .)
    ID              reduce using rule 62 (terminoaux -> MULTIPLY seen_operador termino .)
    INT_CTE         reduce using rule 62 (terminoaux -> MULTIPLY seen_operador termino .)
    FLOAT_CTE       reduce using rule 62 (terminoaux -> MULTIPLY seen_operador termino .)
    RIGHTPARENTHESES reduce using rule 62 (terminoaux -> MULTIPLY seen_operador termino .)
    COMMA           reduce using rule 62 (terminoaux -> MULTIPLY seen_operador termino .)
    SEMICOLON       reduce using rule 62 (terminoaux -> MULTIPLY seen_operador termino .)


state 151

    (84) while -> WHILE seen_while LEFTPARENTHESES expresion RIGHTPARENTHESES seen_right_parentheses_while bloque . SEMICOLON seen_end_while

    SEMICOLON       shift and go to state 156


state 152

    (88) functionCall -> ID seen_fCall_id LEFTPARENTHESES seen_leftp_fCall paramsFunctionCall seen_end_paramsFCall RIGHTPARENTHESES . seen_rightp_fCall SEMICOLON
    (96) seen_rightp_fCall -> .

    SEMICOLON       reduce using rule 96 (seen_rightp_fCall -> .)

    seen_rightp_fCall              shift and go to state 157

state 153

    (91) paramsFunctionCall -> expresion seen_parameter_fCall COMMA . seen_comma_params_fCall paramsFunctionCall
    (94) seen_comma_params_fCall -> .

    LEFTPARENTHESES reduce using rule 94 (seen_comma_params_fCall -> .)
    ID              reduce using rule 94 (seen_comma_params_fCall -> .)
    INT_CTE         reduce using rule 94 (seen_comma_params_fCall -> .)
    FLOAT_CTE       reduce using rule 94 (seen_comma_params_fCall -> .)

    seen_comma_params_fCall        shift and go to state 158

state 154

    (64) condicionaux -> ELSE seen_else . bloque SEMICOLON seen_end_condicion
    (31) bloque -> . LEFTBRACE vars seen_start_bloqueaux bloqueaux RIGHTBRACE

    LEFTBRACE       shift and go to state 39

    bloque                         shift and go to state 159

state 155

    (65) condicionaux -> SEMICOLON seen_end_condicion .

    IF              reduce using rule 65 (condicionaux -> SEMICOLON seen_end_condicion .)
    PRINT           reduce using rule 65 (condicionaux -> SEMICOLON seen_end_condicion .)
    WHILE           reduce using rule 65 (condicionaux -> SEMICOLON seen_end_condicion .)
    ID              reduce using rule 65 (condicionaux -> SEMICOLON seen_end_condicion .)
    INT_CTE         reduce using rule 65 (condicionaux -> SEMICOLON seen_end_condicion .)
    FLOAT_CTE       reduce using rule 65 (condicionaux -> SEMICOLON seen_end_condicion .)
    RIGHTBRACE      reduce using rule 65 (condicionaux -> SEMICOLON seen_end_condicion .)


state 156

    (84) while -> WHILE seen_while LEFTPARENTHESES expresion RIGHTPARENTHESES seen_right_parentheses_while bloque SEMICOLON . seen_end_while
    (87) seen_end_while -> .

    IF              reduce using rule 87 (seen_end_while -> .)
    PRINT           reduce using rule 87 (seen_end_while -> .)
    WHILE           reduce using rule 87 (seen_end_while -> .)
    ID              reduce using rule 87 (seen_end_while -> .)
    INT_CTE         reduce using rule 87 (seen_end_while -> .)
    FLOAT_CTE       reduce using rule 87 (seen_end_while -> .)
    RIGHTBRACE      reduce using rule 87 (seen_end_while -> .)

    seen_end_while                 shift and go to state 160

state 157

    (88) functionCall -> ID seen_fCall_id LEFTPARENTHESES seen_leftp_fCall paramsFunctionCall seen_end_paramsFCall RIGHTPARENTHESES seen_rightp_fCall . SEMICOLON

    SEMICOLON       shift and go to state 161


state 158

    (91) paramsFunctionCall -> expresion seen_parameter_fCall COMMA seen_comma_params_fCall . paramsFunctionCall
    (91) paramsFunctionCall -> . expresion seen_parameter_fCall COMMA seen_comma_params_fCall paramsFunctionCall
    (92) paramsFunctionCall -> . expresion seen_parameter_fCall
    (43) expresion -> . exp seen_comparacion
    (44) expresion -> . exp seen_comparacion expresionaux exp seen_comparacion
    (55) exp -> . termino seen_termino
    (56) exp -> . termino seen_termino expaux
    (59) termino -> . factor seen_factor
    (60) termino -> . factor seen_factor terminoaux
    (69) factor -> . factoraux
    (70) factor -> . varcte
    (71) factoraux -> . LEFTPARENTHESES seen_insert_fondo expresion RIGHTPARENTHESES seen_remove_fondo
    (72) varcte -> . ID seen_ID
    (73) varcte -> . INT_CTE seen_CTE_INT
    (74) varcte -> . FLOAT_CTE seen_CTE_FLOAT

    LEFTPARENTHESES shift and go to state 84
    ID              shift and go to state 91
    INT_CTE         shift and go to state 69
    FLOAT_CTE       shift and go to state 70

    expresion                      shift and go to state 127
    paramsFunctionCall             shift and go to state 162
    exp                            shift and go to state 86
    termino                        shift and go to state 87
    factor                         shift and go to state 88
    factoraux                      shift and go to state 89
    varcte                         shift and go to state 90

state 159

    (64) condicionaux -> ELSE seen_else bloque . SEMICOLON seen_end_condicion

    SEMICOLON       shift and go to state 163


state 160

    (84) while -> WHILE seen_while LEFTPARENTHESES expresion RIGHTPARENTHESES seen_right_parentheses_while bloque SEMICOLON seen_end_while .

    IF              reduce using rule 84 (while -> WHILE seen_while LEFTPARENTHESES expresion RIGHTPARENTHESES seen_right_parentheses_while bloque SEMICOLON seen_end_while .)
    PRINT           reduce using rule 84 (while -> WHILE seen_while LEFTPARENTHESES expresion RIGHTPARENTHESES seen_right_parentheses_while bloque SEMICOLON seen_end_while .)
    WHILE           reduce using rule 84 (while -> WHILE seen_while LEFTPARENTHESES expresion RIGHTPARENTHESES seen_right_parentheses_while bloque SEMICOLON seen_end_while .)
    ID              reduce using rule 84 (while -> WHILE seen_while LEFTPARENTHESES expresion RIGHTPARENTHESES seen_right_parentheses_while bloque SEMICOLON seen_end_while .)
    INT_CTE         reduce using rule 84 (while -> WHILE seen_while LEFTPARENTHESES expresion RIGHTPARENTHESES seen_right_parentheses_while bloque SEMICOLON seen_end_while .)
    FLOAT_CTE       reduce using rule 84 (while -> WHILE seen_while LEFTPARENTHESES expresion RIGHTPARENTHESES seen_right_parentheses_while bloque SEMICOLON seen_end_while .)
    RIGHTBRACE      reduce using rule 84 (while -> WHILE seen_while LEFTPARENTHESES expresion RIGHTPARENTHESES seen_right_parentheses_while bloque SEMICOLON seen_end_while .)


state 161

    (88) functionCall -> ID seen_fCall_id LEFTPARENTHESES seen_leftp_fCall paramsFunctionCall seen_end_paramsFCall RIGHTPARENTHESES seen_rightp_fCall SEMICOLON .

    IF              reduce using rule 88 (functionCall -> ID seen_fCall_id LEFTPARENTHESES seen_leftp_fCall paramsFunctionCall seen_end_paramsFCall RIGHTPARENTHESES seen_rightp_fCall SEMICOLON .)
    PRINT           reduce using rule 88 (functionCall -> ID seen_fCall_id LEFTPARENTHESES seen_leftp_fCall paramsFunctionCall seen_end_paramsFCall RIGHTPARENTHESES seen_rightp_fCall SEMICOLON .)
    WHILE           reduce using rule 88 (functionCall -> ID seen_fCall_id LEFTPARENTHESES seen_leftp_fCall paramsFunctionCall seen_end_paramsFCall RIGHTPARENTHESES seen_rightp_fCall SEMICOLON .)
    ID              reduce using rule 88 (functionCall -> ID seen_fCall_id LEFTPARENTHESES seen_leftp_fCall paramsFunctionCall seen_end_paramsFCall RIGHTPARENTHESES seen_rightp_fCall SEMICOLON .)
    INT_CTE         reduce using rule 88 (functionCall -> ID seen_fCall_id LEFTPARENTHESES seen_leftp_fCall paramsFunctionCall seen_end_paramsFCall RIGHTPARENTHESES seen_rightp_fCall SEMICOLON .)
    FLOAT_CTE       reduce using rule 88 (functionCall -> ID seen_fCall_id LEFTPARENTHESES seen_leftp_fCall paramsFunctionCall seen_end_paramsFCall RIGHTPARENTHESES seen_rightp_fCall SEMICOLON .)
    RIGHTBRACE      reduce using rule 88 (functionCall -> ID seen_fCall_id LEFTPARENTHESES seen_leftp_fCall paramsFunctionCall seen_end_paramsFCall RIGHTPARENTHESES seen_rightp_fCall SEMICOLON .)


state 162

    (91) paramsFunctionCall -> expresion seen_parameter_fCall COMMA seen_comma_params_fCall paramsFunctionCall .

    RIGHTPARENTHESES reduce using rule 91 (paramsFunctionCall -> expresion seen_parameter_fCall COMMA seen_comma_params_fCall paramsFunctionCall .)


state 163

    (64) condicionaux -> ELSE seen_else bloque SEMICOLON . seen_end_condicion
    (68) seen_end_condicion -> .

    IF              reduce using rule 68 (seen_end_condicion -> .)
    PRINT           reduce using rule 68 (seen_end_condicion -> .)
    WHILE           reduce using rule 68 (seen_end_condicion -> .)
    ID              reduce using rule 68 (seen_end_condicion -> .)
    INT_CTE         reduce using rule 68 (seen_end_condicion -> .)
    FLOAT_CTE       reduce using rule 68 (seen_end_condicion -> .)
    RIGHTBRACE      reduce using rule 68 (seen_end_condicion -> .)

    seen_end_condicion             shift and go to state 164

state 164

    (64) condicionaux -> ELSE seen_else bloque SEMICOLON seen_end_condicion .

    IF              reduce using rule 64 (condicionaux -> ELSE seen_else bloque SEMICOLON seen_end_condicion .)
    PRINT           reduce using rule 64 (condicionaux -> ELSE seen_else bloque SEMICOLON seen_end_condicion .)
    WHILE           reduce using rule 64 (condicionaux -> ELSE seen_else bloque SEMICOLON seen_end_condicion .)
    ID              reduce using rule 64 (condicionaux -> ELSE seen_else bloque SEMICOLON seen_end_condicion .)
    INT_CTE         reduce using rule 64 (condicionaux -> ELSE seen_else bloque SEMICOLON seen_end_condicion .)
    FLOAT_CTE       reduce using rule 64 (condicionaux -> ELSE seen_else bloque SEMICOLON seen_end_condicion .)
    RIGHTBRACE      reduce using rule 64 (condicionaux -> ELSE seen_else bloque SEMICOLON seen_end_condicion .)

