Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    NOTEQUAL
    READ

Grammar

Rule 0     S' -> calc
Rule 1     calc -> PROGRAMA ID seen_program SEMICOLON vars function
Rule 2     calc -> PROGRAMA ID seen_program SEMICOLON function
Rule 3     seen_program -> <empty>
Rule 4     vars -> VAR seen_vars varsaux
Rule 5     seen_vars -> <empty>
Rule 6     varsaux -> ID seen_ID_var varsaux2 COLON tipo SEMICOLON varsaux
Rule 7     varsaux -> <empty>
Rule 8     varsaux2 -> COMMA ID seen_ID_var varsaux2
Rule 9     varsaux2 -> <empty>
Rule 10    seen_ID_var -> <empty>
Rule 11    tipo -> INT seen_tipo
Rule 12    tipo -> FLOAT seen_tipo
Rule 13    seen_tipo -> <empty>
Rule 14    function -> FUNCTION ID params bloque
Rule 15    params -> LEFTPARENTHESES vars RIGHTPARENTHESES
Rule 16    params -> LEFTPARENTHESES RIGHTPARENTHESES
Rule 17    bloque -> LEFTBRACE bloqueaux RIGHTBRACE
Rule 18    bloqueaux -> estatuto bloqueaux
Rule 19    bloqueaux -> <empty>
Rule 20    estatuto -> asignacion
Rule 21    estatuto -> condicion
Rule 22    estatuto -> escritura
Rule 23    asignacion -> varcte EQUALS expresion SEMICOLON
Rule 24    expresion -> exp expresionaux
Rule 25    expresionaux -> GREATERTHAN exp
Rule 26    expresionaux -> LESSTHAN exp
Rule 27    expresionaux -> NOTEQUALS exp
Rule 28    expresionaux -> <empty>
Rule 29    escritura -> PRINT LEFTPARENTHESES escrituraaux RIGHTPARENTHESES SEMICOLON
Rule 30    escrituraaux -> expresion
Rule 31    escrituraaux -> STRING_CTE
Rule 32    escrituraaux -> expresion COMMA escrituraaux
Rule 33    escrituraaux -> STRING_CTE COMMA escrituraaux
Rule 34    exp -> termino seen_termino
Rule 35    exp -> termino seen_termino expaux
Rule 36    expaux -> PLUS seen_operador exp
Rule 37    expaux -> MINUS seen_operador exp
Rule 38    termino -> factor seen_factor
Rule 39    termino -> factor seen_factor terminoaux
Rule 40    terminoaux -> DIVIDE seen_operador termino
Rule 41    terminoaux -> MULTIPLY seen_operador termino
Rule 42    condicion -> IF LEFTPARENTHESES expresion RIGHTPARENTHESES bloque condicionaux
Rule 43    condicionaux -> ELSE bloque SEMICOLON
Rule 44    condicionaux -> SEMICOLON
Rule 45    factor -> factoraux
Rule 46    factor -> factoraux2
Rule 47    factoraux -> LEFTPARENTHESES expresion RIGHTPARENTHESES
Rule 48    factoraux2 -> factoraux3 varcte
Rule 49    factoraux3 -> PLUS
Rule 50    factoraux3 -> MINUS
Rule 51    factoraux3 -> <empty>
Rule 52    varcte -> ID seen_ID
Rule 53    varcte -> INT_CTE
Rule 54    varcte -> FLOAT_CTE
Rule 55    seen_ID -> <empty>
Rule 56    seen_operador -> <empty>
Rule 57    seen_termino -> <empty>
Rule 58    seen_factor -> <empty>
Rule 59    arrayIntDefinition -> LEFTBRACKET INT_CTE RIGHTBRACKET
Rule 60    empty -> <empty>

Terminals, with rules where they appear

COLON                : 6
COMMA                : 8 32 33
DIVIDE               : 40
ELSE                 : 43
EQUALS               : 23
FLOAT                : 12
FLOAT_CTE            : 54
FUNCTION             : 14
GREATERTHAN          : 25
ID                   : 1 2 6 8 14 52
IF                   : 42
INT                  : 11
INT_CTE              : 53 59
LEFTBRACE            : 17
LEFTBRACKET          : 59
LEFTPARENTHESES      : 15 16 29 42 47
LESSTHAN             : 26
MINUS                : 37 50
MULTIPLY             : 41
NOTEQUAL             : 
NOTEQUALS            : 27
PLUS                 : 36 49
PRINT                : 29
PROGRAMA             : 1 2
READ                 : 
RIGHTBRACE           : 17
RIGHTBRACKET         : 59
RIGHTPARENTHESES     : 15 16 29 42 47
SEMICOLON            : 1 2 6 23 29 43 44
STRING_CTE           : 31 33
VAR                  : 4
error                : 

Nonterminals, with rules where they appear

arrayIntDefinition   : 
asignacion           : 20
bloque               : 14 42 43
bloqueaux            : 17 18
calc                 : 0
condicion            : 21
condicionaux         : 42
empty                : 
escritura            : 22
escrituraaux         : 29 32 33
estatuto             : 18
exp                  : 24 25 26 27 36 37
expaux               : 35
expresion            : 23 30 32 42 47
expresionaux         : 24
factor               : 38 39
factoraux            : 45
factoraux2           : 46
factoraux3           : 48
function             : 1 2
params               : 14
seen_ID              : 52
seen_ID_var          : 6 8
seen_factor          : 38 39
seen_operador        : 36 37 40 41
seen_program         : 1 2
seen_termino         : 34 35
seen_tipo            : 11 12
seen_vars            : 4
termino              : 34 35 40 41
terminoaux           : 39
tipo                 : 6
varcte               : 23 48
vars                 : 1 15
varsaux              : 4 6
varsaux2             : 6 8

Parsing method: LALR

state 0

    (0) S' -> . calc
    (1) calc -> . PROGRAMA ID seen_program SEMICOLON vars function
    (2) calc -> . PROGRAMA ID seen_program SEMICOLON function

    PROGRAMA        shift and go to state 2

    calc                           shift and go to state 1

state 1

    (0) S' -> calc .



state 2

    (1) calc -> PROGRAMA . ID seen_program SEMICOLON vars function
    (2) calc -> PROGRAMA . ID seen_program SEMICOLON function

    ID              shift and go to state 3


state 3

    (1) calc -> PROGRAMA ID . seen_program SEMICOLON vars function
    (2) calc -> PROGRAMA ID . seen_program SEMICOLON function
    (3) seen_program -> .

    SEMICOLON       reduce using rule 3 (seen_program -> .)

    seen_program                   shift and go to state 4

state 4

    (1) calc -> PROGRAMA ID seen_program . SEMICOLON vars function
    (2) calc -> PROGRAMA ID seen_program . SEMICOLON function

    SEMICOLON       shift and go to state 5


state 5

    (1) calc -> PROGRAMA ID seen_program SEMICOLON . vars function
    (2) calc -> PROGRAMA ID seen_program SEMICOLON . function
    (4) vars -> . VAR seen_vars varsaux
    (14) function -> . FUNCTION ID params bloque

    VAR             shift and go to state 8
    FUNCTION        shift and go to state 9

    vars                           shift and go to state 6
    function                       shift and go to state 7

state 6

    (1) calc -> PROGRAMA ID seen_program SEMICOLON vars . function
    (14) function -> . FUNCTION ID params bloque

    FUNCTION        shift and go to state 9

    function                       shift and go to state 10

state 7

    (2) calc -> PROGRAMA ID seen_program SEMICOLON function .

    $end            reduce using rule 2 (calc -> PROGRAMA ID seen_program SEMICOLON function .)


state 8

    (4) vars -> VAR . seen_vars varsaux
    (5) seen_vars -> .

    ID              reduce using rule 5 (seen_vars -> .)
    FUNCTION        reduce using rule 5 (seen_vars -> .)
    RIGHTPARENTHESES reduce using rule 5 (seen_vars -> .)

    seen_vars                      shift and go to state 11

state 9

    (14) function -> FUNCTION . ID params bloque

    ID              shift and go to state 12


state 10

    (1) calc -> PROGRAMA ID seen_program SEMICOLON vars function .

    $end            reduce using rule 1 (calc -> PROGRAMA ID seen_program SEMICOLON vars function .)


state 11

    (4) vars -> VAR seen_vars . varsaux
    (6) varsaux -> . ID seen_ID_var varsaux2 COLON tipo SEMICOLON varsaux
    (7) varsaux -> .

    ID              shift and go to state 14
    FUNCTION        reduce using rule 7 (varsaux -> .)
    RIGHTPARENTHESES reduce using rule 7 (varsaux -> .)

    varsaux                        shift and go to state 13

state 12

    (14) function -> FUNCTION ID . params bloque
    (15) params -> . LEFTPARENTHESES vars RIGHTPARENTHESES
    (16) params -> . LEFTPARENTHESES RIGHTPARENTHESES

    LEFTPARENTHESES shift and go to state 16

    params                         shift and go to state 15

state 13

    (4) vars -> VAR seen_vars varsaux .

    FUNCTION        reduce using rule 4 (vars -> VAR seen_vars varsaux .)
    RIGHTPARENTHESES reduce using rule 4 (vars -> VAR seen_vars varsaux .)


state 14

    (6) varsaux -> ID . seen_ID_var varsaux2 COLON tipo SEMICOLON varsaux
    (10) seen_ID_var -> .

    COMMA           reduce using rule 10 (seen_ID_var -> .)
    COLON           reduce using rule 10 (seen_ID_var -> .)

    seen_ID_var                    shift and go to state 17

state 15

    (14) function -> FUNCTION ID params . bloque
    (17) bloque -> . LEFTBRACE bloqueaux RIGHTBRACE

    LEFTBRACE       shift and go to state 19

    bloque                         shift and go to state 18

state 16

    (15) params -> LEFTPARENTHESES . vars RIGHTPARENTHESES
    (16) params -> LEFTPARENTHESES . RIGHTPARENTHESES
    (4) vars -> . VAR seen_vars varsaux

    RIGHTPARENTHESES shift and go to state 21
    VAR             shift and go to state 8

    vars                           shift and go to state 20

state 17

    (6) varsaux -> ID seen_ID_var . varsaux2 COLON tipo SEMICOLON varsaux
    (8) varsaux2 -> . COMMA ID seen_ID_var varsaux2
    (9) varsaux2 -> .

    COMMA           shift and go to state 23
    COLON           reduce using rule 9 (varsaux2 -> .)

    varsaux2                       shift and go to state 22

state 18

    (14) function -> FUNCTION ID params bloque .

    $end            reduce using rule 14 (function -> FUNCTION ID params bloque .)


state 19

    (17) bloque -> LEFTBRACE . bloqueaux RIGHTBRACE
    (18) bloqueaux -> . estatuto bloqueaux
    (19) bloqueaux -> .
    (20) estatuto -> . asignacion
    (21) estatuto -> . condicion
    (22) estatuto -> . escritura
    (23) asignacion -> . varcte EQUALS expresion SEMICOLON
    (42) condicion -> . IF LEFTPARENTHESES expresion RIGHTPARENTHESES bloque condicionaux
    (29) escritura -> . PRINT LEFTPARENTHESES escrituraaux RIGHTPARENTHESES SEMICOLON
    (52) varcte -> . ID seen_ID
    (53) varcte -> . INT_CTE
    (54) varcte -> . FLOAT_CTE

    RIGHTBRACE      reduce using rule 19 (bloqueaux -> .)
    IF              shift and go to state 30
    PRINT           shift and go to state 31
    ID              shift and go to state 32
    INT_CTE         shift and go to state 33
    FLOAT_CTE       shift and go to state 34

    bloqueaux                      shift and go to state 24
    estatuto                       shift and go to state 25
    asignacion                     shift and go to state 26
    condicion                      shift and go to state 27
    escritura                      shift and go to state 28
    varcte                         shift and go to state 29

state 20

    (15) params -> LEFTPARENTHESES vars . RIGHTPARENTHESES

    RIGHTPARENTHESES shift and go to state 35


state 21

    (16) params -> LEFTPARENTHESES RIGHTPARENTHESES .

    LEFTBRACE       reduce using rule 16 (params -> LEFTPARENTHESES RIGHTPARENTHESES .)


state 22

    (6) varsaux -> ID seen_ID_var varsaux2 . COLON tipo SEMICOLON varsaux

    COLON           shift and go to state 36


state 23

    (8) varsaux2 -> COMMA . ID seen_ID_var varsaux2

    ID              shift and go to state 37


state 24

    (17) bloque -> LEFTBRACE bloqueaux . RIGHTBRACE

    RIGHTBRACE      shift and go to state 38


state 25

    (18) bloqueaux -> estatuto . bloqueaux
    (18) bloqueaux -> . estatuto bloqueaux
    (19) bloqueaux -> .
    (20) estatuto -> . asignacion
    (21) estatuto -> . condicion
    (22) estatuto -> . escritura
    (23) asignacion -> . varcte EQUALS expresion SEMICOLON
    (42) condicion -> . IF LEFTPARENTHESES expresion RIGHTPARENTHESES bloque condicionaux
    (29) escritura -> . PRINT LEFTPARENTHESES escrituraaux RIGHTPARENTHESES SEMICOLON
    (52) varcte -> . ID seen_ID
    (53) varcte -> . INT_CTE
    (54) varcte -> . FLOAT_CTE

    RIGHTBRACE      reduce using rule 19 (bloqueaux -> .)
    IF              shift and go to state 30
    PRINT           shift and go to state 31
    ID              shift and go to state 32
    INT_CTE         shift and go to state 33
    FLOAT_CTE       shift and go to state 34

    estatuto                       shift and go to state 25
    bloqueaux                      shift and go to state 39
    asignacion                     shift and go to state 26
    condicion                      shift and go to state 27
    escritura                      shift and go to state 28
    varcte                         shift and go to state 29

state 26

    (20) estatuto -> asignacion .

    IF              reduce using rule 20 (estatuto -> asignacion .)
    PRINT           reduce using rule 20 (estatuto -> asignacion .)
    ID              reduce using rule 20 (estatuto -> asignacion .)
    INT_CTE         reduce using rule 20 (estatuto -> asignacion .)
    FLOAT_CTE       reduce using rule 20 (estatuto -> asignacion .)
    RIGHTBRACE      reduce using rule 20 (estatuto -> asignacion .)


state 27

    (21) estatuto -> condicion .

    IF              reduce using rule 21 (estatuto -> condicion .)
    PRINT           reduce using rule 21 (estatuto -> condicion .)
    ID              reduce using rule 21 (estatuto -> condicion .)
    INT_CTE         reduce using rule 21 (estatuto -> condicion .)
    FLOAT_CTE       reduce using rule 21 (estatuto -> condicion .)
    RIGHTBRACE      reduce using rule 21 (estatuto -> condicion .)


state 28

    (22) estatuto -> escritura .

    IF              reduce using rule 22 (estatuto -> escritura .)
    PRINT           reduce using rule 22 (estatuto -> escritura .)
    ID              reduce using rule 22 (estatuto -> escritura .)
    INT_CTE         reduce using rule 22 (estatuto -> escritura .)
    FLOAT_CTE       reduce using rule 22 (estatuto -> escritura .)
    RIGHTBRACE      reduce using rule 22 (estatuto -> escritura .)


state 29

    (23) asignacion -> varcte . EQUALS expresion SEMICOLON

    EQUALS          shift and go to state 40


state 30

    (42) condicion -> IF . LEFTPARENTHESES expresion RIGHTPARENTHESES bloque condicionaux

    LEFTPARENTHESES shift and go to state 41


state 31

    (29) escritura -> PRINT . LEFTPARENTHESES escrituraaux RIGHTPARENTHESES SEMICOLON

    LEFTPARENTHESES shift and go to state 42


state 32

    (52) varcte -> ID . seen_ID
    (55) seen_ID -> .

    EQUALS          reduce using rule 55 (seen_ID -> .)
    DIVIDE          reduce using rule 55 (seen_ID -> .)
    MULTIPLY        reduce using rule 55 (seen_ID -> .)
    PLUS            reduce using rule 55 (seen_ID -> .)
    MINUS           reduce using rule 55 (seen_ID -> .)
    GREATERTHAN     reduce using rule 55 (seen_ID -> .)
    LESSTHAN        reduce using rule 55 (seen_ID -> .)
    NOTEQUALS       reduce using rule 55 (seen_ID -> .)
    SEMICOLON       reduce using rule 55 (seen_ID -> .)
    RIGHTPARENTHESES reduce using rule 55 (seen_ID -> .)
    COMMA           reduce using rule 55 (seen_ID -> .)

    seen_ID                        shift and go to state 43

state 33

    (53) varcte -> INT_CTE .

    EQUALS          reduce using rule 53 (varcte -> INT_CTE .)
    DIVIDE          reduce using rule 53 (varcte -> INT_CTE .)
    MULTIPLY        reduce using rule 53 (varcte -> INT_CTE .)
    PLUS            reduce using rule 53 (varcte -> INT_CTE .)
    MINUS           reduce using rule 53 (varcte -> INT_CTE .)
    GREATERTHAN     reduce using rule 53 (varcte -> INT_CTE .)
    LESSTHAN        reduce using rule 53 (varcte -> INT_CTE .)
    NOTEQUALS       reduce using rule 53 (varcte -> INT_CTE .)
    SEMICOLON       reduce using rule 53 (varcte -> INT_CTE .)
    RIGHTPARENTHESES reduce using rule 53 (varcte -> INT_CTE .)
    COMMA           reduce using rule 53 (varcte -> INT_CTE .)


state 34

    (54) varcte -> FLOAT_CTE .

    EQUALS          reduce using rule 54 (varcte -> FLOAT_CTE .)
    DIVIDE          reduce using rule 54 (varcte -> FLOAT_CTE .)
    MULTIPLY        reduce using rule 54 (varcte -> FLOAT_CTE .)
    PLUS            reduce using rule 54 (varcte -> FLOAT_CTE .)
    MINUS           reduce using rule 54 (varcte -> FLOAT_CTE .)
    GREATERTHAN     reduce using rule 54 (varcte -> FLOAT_CTE .)
    LESSTHAN        reduce using rule 54 (varcte -> FLOAT_CTE .)
    NOTEQUALS       reduce using rule 54 (varcte -> FLOAT_CTE .)
    SEMICOLON       reduce using rule 54 (varcte -> FLOAT_CTE .)
    RIGHTPARENTHESES reduce using rule 54 (varcte -> FLOAT_CTE .)
    COMMA           reduce using rule 54 (varcte -> FLOAT_CTE .)


state 35

    (15) params -> LEFTPARENTHESES vars RIGHTPARENTHESES .

    LEFTBRACE       reduce using rule 15 (params -> LEFTPARENTHESES vars RIGHTPARENTHESES .)


state 36

    (6) varsaux -> ID seen_ID_var varsaux2 COLON . tipo SEMICOLON varsaux
    (11) tipo -> . INT seen_tipo
    (12) tipo -> . FLOAT seen_tipo

    INT             shift and go to state 45
    FLOAT           shift and go to state 46

    tipo                           shift and go to state 44

state 37

    (8) varsaux2 -> COMMA ID . seen_ID_var varsaux2
    (10) seen_ID_var -> .

    COMMA           reduce using rule 10 (seen_ID_var -> .)
    COLON           reduce using rule 10 (seen_ID_var -> .)

    seen_ID_var                    shift and go to state 47

state 38

    (17) bloque -> LEFTBRACE bloqueaux RIGHTBRACE .

    $end            reduce using rule 17 (bloque -> LEFTBRACE bloqueaux RIGHTBRACE .)
    ELSE            reduce using rule 17 (bloque -> LEFTBRACE bloqueaux RIGHTBRACE .)
    SEMICOLON       reduce using rule 17 (bloque -> LEFTBRACE bloqueaux RIGHTBRACE .)


state 39

    (18) bloqueaux -> estatuto bloqueaux .

    RIGHTBRACE      reduce using rule 18 (bloqueaux -> estatuto bloqueaux .)


state 40

    (23) asignacion -> varcte EQUALS . expresion SEMICOLON
    (24) expresion -> . exp expresionaux
    (34) exp -> . termino seen_termino
    (35) exp -> . termino seen_termino expaux
    (38) termino -> . factor seen_factor
    (39) termino -> . factor seen_factor terminoaux
    (45) factor -> . factoraux
    (46) factor -> . factoraux2
    (47) factoraux -> . LEFTPARENTHESES expresion RIGHTPARENTHESES
    (48) factoraux2 -> . factoraux3 varcte
    (49) factoraux3 -> . PLUS
    (50) factoraux3 -> . MINUS
    (51) factoraux3 -> .

    LEFTPARENTHESES shift and go to state 54
    PLUS            shift and go to state 56
    MINUS           shift and go to state 57
    ID              reduce using rule 51 (factoraux3 -> .)
    INT_CTE         reduce using rule 51 (factoraux3 -> .)
    FLOAT_CTE       reduce using rule 51 (factoraux3 -> .)

    expresion                      shift and go to state 48
    exp                            shift and go to state 49
    termino                        shift and go to state 50
    factor                         shift and go to state 51
    factoraux                      shift and go to state 52
    factoraux2                     shift and go to state 53
    factoraux3                     shift and go to state 55

state 41

    (42) condicion -> IF LEFTPARENTHESES . expresion RIGHTPARENTHESES bloque condicionaux
    (24) expresion -> . exp expresionaux
    (34) exp -> . termino seen_termino
    (35) exp -> . termino seen_termino expaux
    (38) termino -> . factor seen_factor
    (39) termino -> . factor seen_factor terminoaux
    (45) factor -> . factoraux
    (46) factor -> . factoraux2
    (47) factoraux -> . LEFTPARENTHESES expresion RIGHTPARENTHESES
    (48) factoraux2 -> . factoraux3 varcte
    (49) factoraux3 -> . PLUS
    (50) factoraux3 -> . MINUS
    (51) factoraux3 -> .

    LEFTPARENTHESES shift and go to state 54
    PLUS            shift and go to state 56
    MINUS           shift and go to state 57
    ID              reduce using rule 51 (factoraux3 -> .)
    INT_CTE         reduce using rule 51 (factoraux3 -> .)
    FLOAT_CTE       reduce using rule 51 (factoraux3 -> .)

    expresion                      shift and go to state 58
    exp                            shift and go to state 49
    termino                        shift and go to state 50
    factor                         shift and go to state 51
    factoraux                      shift and go to state 52
    factoraux2                     shift and go to state 53
    factoraux3                     shift and go to state 55

state 42

    (29) escritura -> PRINT LEFTPARENTHESES . escrituraaux RIGHTPARENTHESES SEMICOLON
    (30) escrituraaux -> . expresion
    (31) escrituraaux -> . STRING_CTE
    (32) escrituraaux -> . expresion COMMA escrituraaux
    (33) escrituraaux -> . STRING_CTE COMMA escrituraaux
    (24) expresion -> . exp expresionaux
    (34) exp -> . termino seen_termino
    (35) exp -> . termino seen_termino expaux
    (38) termino -> . factor seen_factor
    (39) termino -> . factor seen_factor terminoaux
    (45) factor -> . factoraux
    (46) factor -> . factoraux2
    (47) factoraux -> . LEFTPARENTHESES expresion RIGHTPARENTHESES
    (48) factoraux2 -> . factoraux3 varcte
    (49) factoraux3 -> . PLUS
    (50) factoraux3 -> . MINUS
    (51) factoraux3 -> .

    STRING_CTE      shift and go to state 61
    LEFTPARENTHESES shift and go to state 54
    PLUS            shift and go to state 56
    MINUS           shift and go to state 57
    ID              reduce using rule 51 (factoraux3 -> .)
    INT_CTE         reduce using rule 51 (factoraux3 -> .)
    FLOAT_CTE       reduce using rule 51 (factoraux3 -> .)

    escrituraaux                   shift and go to state 59
    expresion                      shift and go to state 60
    exp                            shift and go to state 49
    termino                        shift and go to state 50
    factor                         shift and go to state 51
    factoraux                      shift and go to state 52
    factoraux2                     shift and go to state 53
    factoraux3                     shift and go to state 55

state 43

    (52) varcte -> ID seen_ID .

    EQUALS          reduce using rule 52 (varcte -> ID seen_ID .)
    DIVIDE          reduce using rule 52 (varcte -> ID seen_ID .)
    MULTIPLY        reduce using rule 52 (varcte -> ID seen_ID .)
    PLUS            reduce using rule 52 (varcte -> ID seen_ID .)
    MINUS           reduce using rule 52 (varcte -> ID seen_ID .)
    GREATERTHAN     reduce using rule 52 (varcte -> ID seen_ID .)
    LESSTHAN        reduce using rule 52 (varcte -> ID seen_ID .)
    NOTEQUALS       reduce using rule 52 (varcte -> ID seen_ID .)
    SEMICOLON       reduce using rule 52 (varcte -> ID seen_ID .)
    RIGHTPARENTHESES reduce using rule 52 (varcte -> ID seen_ID .)
    COMMA           reduce using rule 52 (varcte -> ID seen_ID .)


state 44

    (6) varsaux -> ID seen_ID_var varsaux2 COLON tipo . SEMICOLON varsaux

    SEMICOLON       shift and go to state 62


state 45

    (11) tipo -> INT . seen_tipo
    (13) seen_tipo -> .

    SEMICOLON       reduce using rule 13 (seen_tipo -> .)

    seen_tipo                      shift and go to state 63

state 46

    (12) tipo -> FLOAT . seen_tipo
    (13) seen_tipo -> .

    SEMICOLON       reduce using rule 13 (seen_tipo -> .)

    seen_tipo                      shift and go to state 64

state 47

    (8) varsaux2 -> COMMA ID seen_ID_var . varsaux2
    (8) varsaux2 -> . COMMA ID seen_ID_var varsaux2
    (9) varsaux2 -> .

    COMMA           shift and go to state 23
    COLON           reduce using rule 9 (varsaux2 -> .)

    varsaux2                       shift and go to state 65

state 48

    (23) asignacion -> varcte EQUALS expresion . SEMICOLON

    SEMICOLON       shift and go to state 66


state 49

    (24) expresion -> exp . expresionaux
    (25) expresionaux -> . GREATERTHAN exp
    (26) expresionaux -> . LESSTHAN exp
    (27) expresionaux -> . NOTEQUALS exp
    (28) expresionaux -> .

    GREATERTHAN     shift and go to state 68
    LESSTHAN        shift and go to state 69
    NOTEQUALS       shift and go to state 70
    SEMICOLON       reduce using rule 28 (expresionaux -> .)
    RIGHTPARENTHESES reduce using rule 28 (expresionaux -> .)
    COMMA           reduce using rule 28 (expresionaux -> .)

    expresionaux                   shift and go to state 67

state 50

    (34) exp -> termino . seen_termino
    (35) exp -> termino . seen_termino expaux
    (57) seen_termino -> .

    PLUS            reduce using rule 57 (seen_termino -> .)
    MINUS           reduce using rule 57 (seen_termino -> .)
    GREATERTHAN     reduce using rule 57 (seen_termino -> .)
    LESSTHAN        reduce using rule 57 (seen_termino -> .)
    NOTEQUALS       reduce using rule 57 (seen_termino -> .)
    SEMICOLON       reduce using rule 57 (seen_termino -> .)
    RIGHTPARENTHESES reduce using rule 57 (seen_termino -> .)
    COMMA           reduce using rule 57 (seen_termino -> .)

    seen_termino                   shift and go to state 71

state 51

    (38) termino -> factor . seen_factor
    (39) termino -> factor . seen_factor terminoaux
    (58) seen_factor -> .

    DIVIDE          reduce using rule 58 (seen_factor -> .)
    MULTIPLY        reduce using rule 58 (seen_factor -> .)
    PLUS            reduce using rule 58 (seen_factor -> .)
    MINUS           reduce using rule 58 (seen_factor -> .)
    GREATERTHAN     reduce using rule 58 (seen_factor -> .)
    LESSTHAN        reduce using rule 58 (seen_factor -> .)
    NOTEQUALS       reduce using rule 58 (seen_factor -> .)
    SEMICOLON       reduce using rule 58 (seen_factor -> .)
    RIGHTPARENTHESES reduce using rule 58 (seen_factor -> .)
    COMMA           reduce using rule 58 (seen_factor -> .)

    seen_factor                    shift and go to state 72

state 52

    (45) factor -> factoraux .

    DIVIDE          reduce using rule 45 (factor -> factoraux .)
    MULTIPLY        reduce using rule 45 (factor -> factoraux .)
    PLUS            reduce using rule 45 (factor -> factoraux .)
    MINUS           reduce using rule 45 (factor -> factoraux .)
    GREATERTHAN     reduce using rule 45 (factor -> factoraux .)
    LESSTHAN        reduce using rule 45 (factor -> factoraux .)
    NOTEQUALS       reduce using rule 45 (factor -> factoraux .)
    SEMICOLON       reduce using rule 45 (factor -> factoraux .)
    RIGHTPARENTHESES reduce using rule 45 (factor -> factoraux .)
    COMMA           reduce using rule 45 (factor -> factoraux .)


state 53

    (46) factor -> factoraux2 .

    DIVIDE          reduce using rule 46 (factor -> factoraux2 .)
    MULTIPLY        reduce using rule 46 (factor -> factoraux2 .)
    PLUS            reduce using rule 46 (factor -> factoraux2 .)
    MINUS           reduce using rule 46 (factor -> factoraux2 .)
    GREATERTHAN     reduce using rule 46 (factor -> factoraux2 .)
    LESSTHAN        reduce using rule 46 (factor -> factoraux2 .)
    NOTEQUALS       reduce using rule 46 (factor -> factoraux2 .)
    SEMICOLON       reduce using rule 46 (factor -> factoraux2 .)
    RIGHTPARENTHESES reduce using rule 46 (factor -> factoraux2 .)
    COMMA           reduce using rule 46 (factor -> factoraux2 .)


state 54

    (47) factoraux -> LEFTPARENTHESES . expresion RIGHTPARENTHESES
    (24) expresion -> . exp expresionaux
    (34) exp -> . termino seen_termino
    (35) exp -> . termino seen_termino expaux
    (38) termino -> . factor seen_factor
    (39) termino -> . factor seen_factor terminoaux
    (45) factor -> . factoraux
    (46) factor -> . factoraux2
    (47) factoraux -> . LEFTPARENTHESES expresion RIGHTPARENTHESES
    (48) factoraux2 -> . factoraux3 varcte
    (49) factoraux3 -> . PLUS
    (50) factoraux3 -> . MINUS
    (51) factoraux3 -> .

    LEFTPARENTHESES shift and go to state 54
    PLUS            shift and go to state 56
    MINUS           shift and go to state 57
    ID              reduce using rule 51 (factoraux3 -> .)
    INT_CTE         reduce using rule 51 (factoraux3 -> .)
    FLOAT_CTE       reduce using rule 51 (factoraux3 -> .)

    expresion                      shift and go to state 73
    exp                            shift and go to state 49
    termino                        shift and go to state 50
    factor                         shift and go to state 51
    factoraux                      shift and go to state 52
    factoraux2                     shift and go to state 53
    factoraux3                     shift and go to state 55

state 55

    (48) factoraux2 -> factoraux3 . varcte
    (52) varcte -> . ID seen_ID
    (53) varcte -> . INT_CTE
    (54) varcte -> . FLOAT_CTE

    ID              shift and go to state 32
    INT_CTE         shift and go to state 33
    FLOAT_CTE       shift and go to state 34

    varcte                         shift and go to state 74

state 56

    (49) factoraux3 -> PLUS .

    ID              reduce using rule 49 (factoraux3 -> PLUS .)
    INT_CTE         reduce using rule 49 (factoraux3 -> PLUS .)
    FLOAT_CTE       reduce using rule 49 (factoraux3 -> PLUS .)


state 57

    (50) factoraux3 -> MINUS .

    ID              reduce using rule 50 (factoraux3 -> MINUS .)
    INT_CTE         reduce using rule 50 (factoraux3 -> MINUS .)
    FLOAT_CTE       reduce using rule 50 (factoraux3 -> MINUS .)


state 58

    (42) condicion -> IF LEFTPARENTHESES expresion . RIGHTPARENTHESES bloque condicionaux

    RIGHTPARENTHESES shift and go to state 75


state 59

    (29) escritura -> PRINT LEFTPARENTHESES escrituraaux . RIGHTPARENTHESES SEMICOLON

    RIGHTPARENTHESES shift and go to state 76


state 60

    (30) escrituraaux -> expresion .
    (32) escrituraaux -> expresion . COMMA escrituraaux

    RIGHTPARENTHESES reduce using rule 30 (escrituraaux -> expresion .)
    COMMA           shift and go to state 77


state 61

    (31) escrituraaux -> STRING_CTE .
    (33) escrituraaux -> STRING_CTE . COMMA escrituraaux

    RIGHTPARENTHESES reduce using rule 31 (escrituraaux -> STRING_CTE .)
    COMMA           shift and go to state 78


state 62

    (6) varsaux -> ID seen_ID_var varsaux2 COLON tipo SEMICOLON . varsaux
    (6) varsaux -> . ID seen_ID_var varsaux2 COLON tipo SEMICOLON varsaux
    (7) varsaux -> .

    ID              shift and go to state 14
    FUNCTION        reduce using rule 7 (varsaux -> .)
    RIGHTPARENTHESES reduce using rule 7 (varsaux -> .)

    varsaux                        shift and go to state 79

state 63

    (11) tipo -> INT seen_tipo .

    SEMICOLON       reduce using rule 11 (tipo -> INT seen_tipo .)


state 64

    (12) tipo -> FLOAT seen_tipo .

    SEMICOLON       reduce using rule 12 (tipo -> FLOAT seen_tipo .)


state 65

    (8) varsaux2 -> COMMA ID seen_ID_var varsaux2 .

    COLON           reduce using rule 8 (varsaux2 -> COMMA ID seen_ID_var varsaux2 .)


state 66

    (23) asignacion -> varcte EQUALS expresion SEMICOLON .

    IF              reduce using rule 23 (asignacion -> varcte EQUALS expresion SEMICOLON .)
    PRINT           reduce using rule 23 (asignacion -> varcte EQUALS expresion SEMICOLON .)
    ID              reduce using rule 23 (asignacion -> varcte EQUALS expresion SEMICOLON .)
    INT_CTE         reduce using rule 23 (asignacion -> varcte EQUALS expresion SEMICOLON .)
    FLOAT_CTE       reduce using rule 23 (asignacion -> varcte EQUALS expresion SEMICOLON .)
    RIGHTBRACE      reduce using rule 23 (asignacion -> varcte EQUALS expresion SEMICOLON .)


state 67

    (24) expresion -> exp expresionaux .

    SEMICOLON       reduce using rule 24 (expresion -> exp expresionaux .)
    RIGHTPARENTHESES reduce using rule 24 (expresion -> exp expresionaux .)
    COMMA           reduce using rule 24 (expresion -> exp expresionaux .)


state 68

    (25) expresionaux -> GREATERTHAN . exp
    (34) exp -> . termino seen_termino
    (35) exp -> . termino seen_termino expaux
    (38) termino -> . factor seen_factor
    (39) termino -> . factor seen_factor terminoaux
    (45) factor -> . factoraux
    (46) factor -> . factoraux2
    (47) factoraux -> . LEFTPARENTHESES expresion RIGHTPARENTHESES
    (48) factoraux2 -> . factoraux3 varcte
    (49) factoraux3 -> . PLUS
    (50) factoraux3 -> . MINUS
    (51) factoraux3 -> .

    LEFTPARENTHESES shift and go to state 54
    PLUS            shift and go to state 56
    MINUS           shift and go to state 57
    ID              reduce using rule 51 (factoraux3 -> .)
    INT_CTE         reduce using rule 51 (factoraux3 -> .)
    FLOAT_CTE       reduce using rule 51 (factoraux3 -> .)

    exp                            shift and go to state 80
    termino                        shift and go to state 50
    factor                         shift and go to state 51
    factoraux                      shift and go to state 52
    factoraux2                     shift and go to state 53
    factoraux3                     shift and go to state 55

state 69

    (26) expresionaux -> LESSTHAN . exp
    (34) exp -> . termino seen_termino
    (35) exp -> . termino seen_termino expaux
    (38) termino -> . factor seen_factor
    (39) termino -> . factor seen_factor terminoaux
    (45) factor -> . factoraux
    (46) factor -> . factoraux2
    (47) factoraux -> . LEFTPARENTHESES expresion RIGHTPARENTHESES
    (48) factoraux2 -> . factoraux3 varcte
    (49) factoraux3 -> . PLUS
    (50) factoraux3 -> . MINUS
    (51) factoraux3 -> .

    LEFTPARENTHESES shift and go to state 54
    PLUS            shift and go to state 56
    MINUS           shift and go to state 57
    ID              reduce using rule 51 (factoraux3 -> .)
    INT_CTE         reduce using rule 51 (factoraux3 -> .)
    FLOAT_CTE       reduce using rule 51 (factoraux3 -> .)

    exp                            shift and go to state 81
    termino                        shift and go to state 50
    factor                         shift and go to state 51
    factoraux                      shift and go to state 52
    factoraux2                     shift and go to state 53
    factoraux3                     shift and go to state 55

state 70

    (27) expresionaux -> NOTEQUALS . exp
    (34) exp -> . termino seen_termino
    (35) exp -> . termino seen_termino expaux
    (38) termino -> . factor seen_factor
    (39) termino -> . factor seen_factor terminoaux
    (45) factor -> . factoraux
    (46) factor -> . factoraux2
    (47) factoraux -> . LEFTPARENTHESES expresion RIGHTPARENTHESES
    (48) factoraux2 -> . factoraux3 varcte
    (49) factoraux3 -> . PLUS
    (50) factoraux3 -> . MINUS
    (51) factoraux3 -> .

    LEFTPARENTHESES shift and go to state 54
    PLUS            shift and go to state 56
    MINUS           shift and go to state 57
    ID              reduce using rule 51 (factoraux3 -> .)
    INT_CTE         reduce using rule 51 (factoraux3 -> .)
    FLOAT_CTE       reduce using rule 51 (factoraux3 -> .)

    exp                            shift and go to state 82
    termino                        shift and go to state 50
    factor                         shift and go to state 51
    factoraux                      shift and go to state 52
    factoraux2                     shift and go to state 53
    factoraux3                     shift and go to state 55

state 71

    (34) exp -> termino seen_termino .
    (35) exp -> termino seen_termino . expaux
    (36) expaux -> . PLUS seen_operador exp
    (37) expaux -> . MINUS seen_operador exp

    GREATERTHAN     reduce using rule 34 (exp -> termino seen_termino .)
    LESSTHAN        reduce using rule 34 (exp -> termino seen_termino .)
    NOTEQUALS       reduce using rule 34 (exp -> termino seen_termino .)
    SEMICOLON       reduce using rule 34 (exp -> termino seen_termino .)
    RIGHTPARENTHESES reduce using rule 34 (exp -> termino seen_termino .)
    COMMA           reduce using rule 34 (exp -> termino seen_termino .)
    PLUS            shift and go to state 84
    MINUS           shift and go to state 85

    expaux                         shift and go to state 83

state 72

    (38) termino -> factor seen_factor .
    (39) termino -> factor seen_factor . terminoaux
    (40) terminoaux -> . DIVIDE seen_operador termino
    (41) terminoaux -> . MULTIPLY seen_operador termino

    PLUS            reduce using rule 38 (termino -> factor seen_factor .)
    MINUS           reduce using rule 38 (termino -> factor seen_factor .)
    GREATERTHAN     reduce using rule 38 (termino -> factor seen_factor .)
    LESSTHAN        reduce using rule 38 (termino -> factor seen_factor .)
    NOTEQUALS       reduce using rule 38 (termino -> factor seen_factor .)
    SEMICOLON       reduce using rule 38 (termino -> factor seen_factor .)
    RIGHTPARENTHESES reduce using rule 38 (termino -> factor seen_factor .)
    COMMA           reduce using rule 38 (termino -> factor seen_factor .)
    DIVIDE          shift and go to state 87
    MULTIPLY        shift and go to state 88

    terminoaux                     shift and go to state 86

state 73

    (47) factoraux -> LEFTPARENTHESES expresion . RIGHTPARENTHESES

    RIGHTPARENTHESES shift and go to state 89


state 74

    (48) factoraux2 -> factoraux3 varcte .

    DIVIDE          reduce using rule 48 (factoraux2 -> factoraux3 varcte .)
    MULTIPLY        reduce using rule 48 (factoraux2 -> factoraux3 varcte .)
    PLUS            reduce using rule 48 (factoraux2 -> factoraux3 varcte .)
    MINUS           reduce using rule 48 (factoraux2 -> factoraux3 varcte .)
    GREATERTHAN     reduce using rule 48 (factoraux2 -> factoraux3 varcte .)
    LESSTHAN        reduce using rule 48 (factoraux2 -> factoraux3 varcte .)
    NOTEQUALS       reduce using rule 48 (factoraux2 -> factoraux3 varcte .)
    SEMICOLON       reduce using rule 48 (factoraux2 -> factoraux3 varcte .)
    RIGHTPARENTHESES reduce using rule 48 (factoraux2 -> factoraux3 varcte .)
    COMMA           reduce using rule 48 (factoraux2 -> factoraux3 varcte .)


state 75

    (42) condicion -> IF LEFTPARENTHESES expresion RIGHTPARENTHESES . bloque condicionaux
    (17) bloque -> . LEFTBRACE bloqueaux RIGHTBRACE

    LEFTBRACE       shift and go to state 19

    bloque                         shift and go to state 90

state 76

    (29) escritura -> PRINT LEFTPARENTHESES escrituraaux RIGHTPARENTHESES . SEMICOLON

    SEMICOLON       shift and go to state 91


state 77

    (32) escrituraaux -> expresion COMMA . escrituraaux
    (30) escrituraaux -> . expresion
    (31) escrituraaux -> . STRING_CTE
    (32) escrituraaux -> . expresion COMMA escrituraaux
    (33) escrituraaux -> . STRING_CTE COMMA escrituraaux
    (24) expresion -> . exp expresionaux
    (34) exp -> . termino seen_termino
    (35) exp -> . termino seen_termino expaux
    (38) termino -> . factor seen_factor
    (39) termino -> . factor seen_factor terminoaux
    (45) factor -> . factoraux
    (46) factor -> . factoraux2
    (47) factoraux -> . LEFTPARENTHESES expresion RIGHTPARENTHESES
    (48) factoraux2 -> . factoraux3 varcte
    (49) factoraux3 -> . PLUS
    (50) factoraux3 -> . MINUS
    (51) factoraux3 -> .

    STRING_CTE      shift and go to state 61
    LEFTPARENTHESES shift and go to state 54
    PLUS            shift and go to state 56
    MINUS           shift and go to state 57
    ID              reduce using rule 51 (factoraux3 -> .)
    INT_CTE         reduce using rule 51 (factoraux3 -> .)
    FLOAT_CTE       reduce using rule 51 (factoraux3 -> .)

    expresion                      shift and go to state 60
    escrituraaux                   shift and go to state 92
    exp                            shift and go to state 49
    termino                        shift and go to state 50
    factor                         shift and go to state 51
    factoraux                      shift and go to state 52
    factoraux2                     shift and go to state 53
    factoraux3                     shift and go to state 55

state 78

    (33) escrituraaux -> STRING_CTE COMMA . escrituraaux
    (30) escrituraaux -> . expresion
    (31) escrituraaux -> . STRING_CTE
    (32) escrituraaux -> . expresion COMMA escrituraaux
    (33) escrituraaux -> . STRING_CTE COMMA escrituraaux
    (24) expresion -> . exp expresionaux
    (34) exp -> . termino seen_termino
    (35) exp -> . termino seen_termino expaux
    (38) termino -> . factor seen_factor
    (39) termino -> . factor seen_factor terminoaux
    (45) factor -> . factoraux
    (46) factor -> . factoraux2
    (47) factoraux -> . LEFTPARENTHESES expresion RIGHTPARENTHESES
    (48) factoraux2 -> . factoraux3 varcte
    (49) factoraux3 -> . PLUS
    (50) factoraux3 -> . MINUS
    (51) factoraux3 -> .

    STRING_CTE      shift and go to state 61
    LEFTPARENTHESES shift and go to state 54
    PLUS            shift and go to state 56
    MINUS           shift and go to state 57
    ID              reduce using rule 51 (factoraux3 -> .)
    INT_CTE         reduce using rule 51 (factoraux3 -> .)
    FLOAT_CTE       reduce using rule 51 (factoraux3 -> .)

    escrituraaux                   shift and go to state 93
    expresion                      shift and go to state 60
    exp                            shift and go to state 49
    termino                        shift and go to state 50
    factor                         shift and go to state 51
    factoraux                      shift and go to state 52
    factoraux2                     shift and go to state 53
    factoraux3                     shift and go to state 55

state 79

    (6) varsaux -> ID seen_ID_var varsaux2 COLON tipo SEMICOLON varsaux .

    FUNCTION        reduce using rule 6 (varsaux -> ID seen_ID_var varsaux2 COLON tipo SEMICOLON varsaux .)
    RIGHTPARENTHESES reduce using rule 6 (varsaux -> ID seen_ID_var varsaux2 COLON tipo SEMICOLON varsaux .)


state 80

    (25) expresionaux -> GREATERTHAN exp .

    SEMICOLON       reduce using rule 25 (expresionaux -> GREATERTHAN exp .)
    RIGHTPARENTHESES reduce using rule 25 (expresionaux -> GREATERTHAN exp .)
    COMMA           reduce using rule 25 (expresionaux -> GREATERTHAN exp .)


state 81

    (26) expresionaux -> LESSTHAN exp .

    SEMICOLON       reduce using rule 26 (expresionaux -> LESSTHAN exp .)
    RIGHTPARENTHESES reduce using rule 26 (expresionaux -> LESSTHAN exp .)
    COMMA           reduce using rule 26 (expresionaux -> LESSTHAN exp .)


state 82

    (27) expresionaux -> NOTEQUALS exp .

    SEMICOLON       reduce using rule 27 (expresionaux -> NOTEQUALS exp .)
    RIGHTPARENTHESES reduce using rule 27 (expresionaux -> NOTEQUALS exp .)
    COMMA           reduce using rule 27 (expresionaux -> NOTEQUALS exp .)


state 83

    (35) exp -> termino seen_termino expaux .

    GREATERTHAN     reduce using rule 35 (exp -> termino seen_termino expaux .)
    LESSTHAN        reduce using rule 35 (exp -> termino seen_termino expaux .)
    NOTEQUALS       reduce using rule 35 (exp -> termino seen_termino expaux .)
    SEMICOLON       reduce using rule 35 (exp -> termino seen_termino expaux .)
    RIGHTPARENTHESES reduce using rule 35 (exp -> termino seen_termino expaux .)
    COMMA           reduce using rule 35 (exp -> termino seen_termino expaux .)


state 84

    (36) expaux -> PLUS . seen_operador exp
    (56) seen_operador -> .

    LEFTPARENTHESES reduce using rule 56 (seen_operador -> .)
    PLUS            reduce using rule 56 (seen_operador -> .)
    MINUS           reduce using rule 56 (seen_operador -> .)
    ID              reduce using rule 56 (seen_operador -> .)
    INT_CTE         reduce using rule 56 (seen_operador -> .)
    FLOAT_CTE       reduce using rule 56 (seen_operador -> .)

    seen_operador                  shift and go to state 94

state 85

    (37) expaux -> MINUS . seen_operador exp
    (56) seen_operador -> .

    LEFTPARENTHESES reduce using rule 56 (seen_operador -> .)
    PLUS            reduce using rule 56 (seen_operador -> .)
    MINUS           reduce using rule 56 (seen_operador -> .)
    ID              reduce using rule 56 (seen_operador -> .)
    INT_CTE         reduce using rule 56 (seen_operador -> .)
    FLOAT_CTE       reduce using rule 56 (seen_operador -> .)

    seen_operador                  shift and go to state 95

state 86

    (39) termino -> factor seen_factor terminoaux .

    PLUS            reduce using rule 39 (termino -> factor seen_factor terminoaux .)
    MINUS           reduce using rule 39 (termino -> factor seen_factor terminoaux .)
    GREATERTHAN     reduce using rule 39 (termino -> factor seen_factor terminoaux .)
    LESSTHAN        reduce using rule 39 (termino -> factor seen_factor terminoaux .)
    NOTEQUALS       reduce using rule 39 (termino -> factor seen_factor terminoaux .)
    SEMICOLON       reduce using rule 39 (termino -> factor seen_factor terminoaux .)
    RIGHTPARENTHESES reduce using rule 39 (termino -> factor seen_factor terminoaux .)
    COMMA           reduce using rule 39 (termino -> factor seen_factor terminoaux .)


state 87

    (40) terminoaux -> DIVIDE . seen_operador termino
    (56) seen_operador -> .

    LEFTPARENTHESES reduce using rule 56 (seen_operador -> .)
    PLUS            reduce using rule 56 (seen_operador -> .)
    MINUS           reduce using rule 56 (seen_operador -> .)
    ID              reduce using rule 56 (seen_operador -> .)
    INT_CTE         reduce using rule 56 (seen_operador -> .)
    FLOAT_CTE       reduce using rule 56 (seen_operador -> .)

    seen_operador                  shift and go to state 96

state 88

    (41) terminoaux -> MULTIPLY . seen_operador termino
    (56) seen_operador -> .

    LEFTPARENTHESES reduce using rule 56 (seen_operador -> .)
    PLUS            reduce using rule 56 (seen_operador -> .)
    MINUS           reduce using rule 56 (seen_operador -> .)
    ID              reduce using rule 56 (seen_operador -> .)
    INT_CTE         reduce using rule 56 (seen_operador -> .)
    FLOAT_CTE       reduce using rule 56 (seen_operador -> .)

    seen_operador                  shift and go to state 97

state 89

    (47) factoraux -> LEFTPARENTHESES expresion RIGHTPARENTHESES .

    DIVIDE          reduce using rule 47 (factoraux -> LEFTPARENTHESES expresion RIGHTPARENTHESES .)
    MULTIPLY        reduce using rule 47 (factoraux -> LEFTPARENTHESES expresion RIGHTPARENTHESES .)
    PLUS            reduce using rule 47 (factoraux -> LEFTPARENTHESES expresion RIGHTPARENTHESES .)
    MINUS           reduce using rule 47 (factoraux -> LEFTPARENTHESES expresion RIGHTPARENTHESES .)
    GREATERTHAN     reduce using rule 47 (factoraux -> LEFTPARENTHESES expresion RIGHTPARENTHESES .)
    LESSTHAN        reduce using rule 47 (factoraux -> LEFTPARENTHESES expresion RIGHTPARENTHESES .)
    NOTEQUALS       reduce using rule 47 (factoraux -> LEFTPARENTHESES expresion RIGHTPARENTHESES .)
    SEMICOLON       reduce using rule 47 (factoraux -> LEFTPARENTHESES expresion RIGHTPARENTHESES .)
    RIGHTPARENTHESES reduce using rule 47 (factoraux -> LEFTPARENTHESES expresion RIGHTPARENTHESES .)
    COMMA           reduce using rule 47 (factoraux -> LEFTPARENTHESES expresion RIGHTPARENTHESES .)


state 90

    (42) condicion -> IF LEFTPARENTHESES expresion RIGHTPARENTHESES bloque . condicionaux
    (43) condicionaux -> . ELSE bloque SEMICOLON
    (44) condicionaux -> . SEMICOLON

    ELSE            shift and go to state 99
    SEMICOLON       shift and go to state 100

    condicionaux                   shift and go to state 98

state 91

    (29) escritura -> PRINT LEFTPARENTHESES escrituraaux RIGHTPARENTHESES SEMICOLON .

    IF              reduce using rule 29 (escritura -> PRINT LEFTPARENTHESES escrituraaux RIGHTPARENTHESES SEMICOLON .)
    PRINT           reduce using rule 29 (escritura -> PRINT LEFTPARENTHESES escrituraaux RIGHTPARENTHESES SEMICOLON .)
    ID              reduce using rule 29 (escritura -> PRINT LEFTPARENTHESES escrituraaux RIGHTPARENTHESES SEMICOLON .)
    INT_CTE         reduce using rule 29 (escritura -> PRINT LEFTPARENTHESES escrituraaux RIGHTPARENTHESES SEMICOLON .)
    FLOAT_CTE       reduce using rule 29 (escritura -> PRINT LEFTPARENTHESES escrituraaux RIGHTPARENTHESES SEMICOLON .)
    RIGHTBRACE      reduce using rule 29 (escritura -> PRINT LEFTPARENTHESES escrituraaux RIGHTPARENTHESES SEMICOLON .)


state 92

    (32) escrituraaux -> expresion COMMA escrituraaux .

    RIGHTPARENTHESES reduce using rule 32 (escrituraaux -> expresion COMMA escrituraaux .)


state 93

    (33) escrituraaux -> STRING_CTE COMMA escrituraaux .

    RIGHTPARENTHESES reduce using rule 33 (escrituraaux -> STRING_CTE COMMA escrituraaux .)


state 94

    (36) expaux -> PLUS seen_operador . exp
    (34) exp -> . termino seen_termino
    (35) exp -> . termino seen_termino expaux
    (38) termino -> . factor seen_factor
    (39) termino -> . factor seen_factor terminoaux
    (45) factor -> . factoraux
    (46) factor -> . factoraux2
    (47) factoraux -> . LEFTPARENTHESES expresion RIGHTPARENTHESES
    (48) factoraux2 -> . factoraux3 varcte
    (49) factoraux3 -> . PLUS
    (50) factoraux3 -> . MINUS
    (51) factoraux3 -> .

    LEFTPARENTHESES shift and go to state 54
    PLUS            shift and go to state 56
    MINUS           shift and go to state 57
    ID              reduce using rule 51 (factoraux3 -> .)
    INT_CTE         reduce using rule 51 (factoraux3 -> .)
    FLOAT_CTE       reduce using rule 51 (factoraux3 -> .)

    exp                            shift and go to state 101
    termino                        shift and go to state 50
    factor                         shift and go to state 51
    factoraux                      shift and go to state 52
    factoraux2                     shift and go to state 53
    factoraux3                     shift and go to state 55

state 95

    (37) expaux -> MINUS seen_operador . exp
    (34) exp -> . termino seen_termino
    (35) exp -> . termino seen_termino expaux
    (38) termino -> . factor seen_factor
    (39) termino -> . factor seen_factor terminoaux
    (45) factor -> . factoraux
    (46) factor -> . factoraux2
    (47) factoraux -> . LEFTPARENTHESES expresion RIGHTPARENTHESES
    (48) factoraux2 -> . factoraux3 varcte
    (49) factoraux3 -> . PLUS
    (50) factoraux3 -> . MINUS
    (51) factoraux3 -> .

    LEFTPARENTHESES shift and go to state 54
    PLUS            shift and go to state 56
    MINUS           shift and go to state 57
    ID              reduce using rule 51 (factoraux3 -> .)
    INT_CTE         reduce using rule 51 (factoraux3 -> .)
    FLOAT_CTE       reduce using rule 51 (factoraux3 -> .)

    exp                            shift and go to state 102
    termino                        shift and go to state 50
    factor                         shift and go to state 51
    factoraux                      shift and go to state 52
    factoraux2                     shift and go to state 53
    factoraux3                     shift and go to state 55

state 96

    (40) terminoaux -> DIVIDE seen_operador . termino
    (38) termino -> . factor seen_factor
    (39) termino -> . factor seen_factor terminoaux
    (45) factor -> . factoraux
    (46) factor -> . factoraux2
    (47) factoraux -> . LEFTPARENTHESES expresion RIGHTPARENTHESES
    (48) factoraux2 -> . factoraux3 varcte
    (49) factoraux3 -> . PLUS
    (50) factoraux3 -> . MINUS
    (51) factoraux3 -> .

    LEFTPARENTHESES shift and go to state 54
    PLUS            shift and go to state 56
    MINUS           shift and go to state 57
    ID              reduce using rule 51 (factoraux3 -> .)
    INT_CTE         reduce using rule 51 (factoraux3 -> .)
    FLOAT_CTE       reduce using rule 51 (factoraux3 -> .)

    termino                        shift and go to state 103
    factor                         shift and go to state 51
    factoraux                      shift and go to state 52
    factoraux2                     shift and go to state 53
    factoraux3                     shift and go to state 55

state 97

    (41) terminoaux -> MULTIPLY seen_operador . termino
    (38) termino -> . factor seen_factor
    (39) termino -> . factor seen_factor terminoaux
    (45) factor -> . factoraux
    (46) factor -> . factoraux2
    (47) factoraux -> . LEFTPARENTHESES expresion RIGHTPARENTHESES
    (48) factoraux2 -> . factoraux3 varcte
    (49) factoraux3 -> . PLUS
    (50) factoraux3 -> . MINUS
    (51) factoraux3 -> .

    LEFTPARENTHESES shift and go to state 54
    PLUS            shift and go to state 56
    MINUS           shift and go to state 57
    ID              reduce using rule 51 (factoraux3 -> .)
    INT_CTE         reduce using rule 51 (factoraux3 -> .)
    FLOAT_CTE       reduce using rule 51 (factoraux3 -> .)

    termino                        shift and go to state 104
    factor                         shift and go to state 51
    factoraux                      shift and go to state 52
    factoraux2                     shift and go to state 53
    factoraux3                     shift and go to state 55

state 98

    (42) condicion -> IF LEFTPARENTHESES expresion RIGHTPARENTHESES bloque condicionaux .

    IF              reduce using rule 42 (condicion -> IF LEFTPARENTHESES expresion RIGHTPARENTHESES bloque condicionaux .)
    PRINT           reduce using rule 42 (condicion -> IF LEFTPARENTHESES expresion RIGHTPARENTHESES bloque condicionaux .)
    ID              reduce using rule 42 (condicion -> IF LEFTPARENTHESES expresion RIGHTPARENTHESES bloque condicionaux .)
    INT_CTE         reduce using rule 42 (condicion -> IF LEFTPARENTHESES expresion RIGHTPARENTHESES bloque condicionaux .)
    FLOAT_CTE       reduce using rule 42 (condicion -> IF LEFTPARENTHESES expresion RIGHTPARENTHESES bloque condicionaux .)
    RIGHTBRACE      reduce using rule 42 (condicion -> IF LEFTPARENTHESES expresion RIGHTPARENTHESES bloque condicionaux .)


state 99

    (43) condicionaux -> ELSE . bloque SEMICOLON
    (17) bloque -> . LEFTBRACE bloqueaux RIGHTBRACE

    LEFTBRACE       shift and go to state 19

    bloque                         shift and go to state 105

state 100

    (44) condicionaux -> SEMICOLON .

    IF              reduce using rule 44 (condicionaux -> SEMICOLON .)
    PRINT           reduce using rule 44 (condicionaux -> SEMICOLON .)
    ID              reduce using rule 44 (condicionaux -> SEMICOLON .)
    INT_CTE         reduce using rule 44 (condicionaux -> SEMICOLON .)
    FLOAT_CTE       reduce using rule 44 (condicionaux -> SEMICOLON .)
    RIGHTBRACE      reduce using rule 44 (condicionaux -> SEMICOLON .)


state 101

    (36) expaux -> PLUS seen_operador exp .

    GREATERTHAN     reduce using rule 36 (expaux -> PLUS seen_operador exp .)
    LESSTHAN        reduce using rule 36 (expaux -> PLUS seen_operador exp .)
    NOTEQUALS       reduce using rule 36 (expaux -> PLUS seen_operador exp .)
    SEMICOLON       reduce using rule 36 (expaux -> PLUS seen_operador exp .)
    RIGHTPARENTHESES reduce using rule 36 (expaux -> PLUS seen_operador exp .)
    COMMA           reduce using rule 36 (expaux -> PLUS seen_operador exp .)


state 102

    (37) expaux -> MINUS seen_operador exp .

    GREATERTHAN     reduce using rule 37 (expaux -> MINUS seen_operador exp .)
    LESSTHAN        reduce using rule 37 (expaux -> MINUS seen_operador exp .)
    NOTEQUALS       reduce using rule 37 (expaux -> MINUS seen_operador exp .)
    SEMICOLON       reduce using rule 37 (expaux -> MINUS seen_operador exp .)
    RIGHTPARENTHESES reduce using rule 37 (expaux -> MINUS seen_operador exp .)
    COMMA           reduce using rule 37 (expaux -> MINUS seen_operador exp .)


state 103

    (40) terminoaux -> DIVIDE seen_operador termino .

    PLUS            reduce using rule 40 (terminoaux -> DIVIDE seen_operador termino .)
    MINUS           reduce using rule 40 (terminoaux -> DIVIDE seen_operador termino .)
    GREATERTHAN     reduce using rule 40 (terminoaux -> DIVIDE seen_operador termino .)
    LESSTHAN        reduce using rule 40 (terminoaux -> DIVIDE seen_operador termino .)
    NOTEQUALS       reduce using rule 40 (terminoaux -> DIVIDE seen_operador termino .)
    SEMICOLON       reduce using rule 40 (terminoaux -> DIVIDE seen_operador termino .)
    RIGHTPARENTHESES reduce using rule 40 (terminoaux -> DIVIDE seen_operador termino .)
    COMMA           reduce using rule 40 (terminoaux -> DIVIDE seen_operador termino .)


state 104

    (41) terminoaux -> MULTIPLY seen_operador termino .

    PLUS            reduce using rule 41 (terminoaux -> MULTIPLY seen_operador termino .)
    MINUS           reduce using rule 41 (terminoaux -> MULTIPLY seen_operador termino .)
    GREATERTHAN     reduce using rule 41 (terminoaux -> MULTIPLY seen_operador termino .)
    LESSTHAN        reduce using rule 41 (terminoaux -> MULTIPLY seen_operador termino .)
    NOTEQUALS       reduce using rule 41 (terminoaux -> MULTIPLY seen_operador termino .)
    SEMICOLON       reduce using rule 41 (terminoaux -> MULTIPLY seen_operador termino .)
    RIGHTPARENTHESES reduce using rule 41 (terminoaux -> MULTIPLY seen_operador termino .)
    COMMA           reduce using rule 41 (terminoaux -> MULTIPLY seen_operador termino .)


state 105

    (43) condicionaux -> ELSE bloque . SEMICOLON

    SEMICOLON       shift and go to state 106


state 106

    (43) condicionaux -> ELSE bloque SEMICOLON .

    IF              reduce using rule 43 (condicionaux -> ELSE bloque SEMICOLON .)
    PRINT           reduce using rule 43 (condicionaux -> ELSE bloque SEMICOLON .)
    ID              reduce using rule 43 (condicionaux -> ELSE bloque SEMICOLON .)
    INT_CTE         reduce using rule 43 (condicionaux -> ELSE bloque SEMICOLON .)
    FLOAT_CTE       reduce using rule 43 (condicionaux -> ELSE bloque SEMICOLON .)
    RIGHTBRACE      reduce using rule 43 (condicionaux -> ELSE bloque SEMICOLON .)

