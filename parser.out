Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    BOOLEAN_CTE
    CALL
    COLON
    NOTEQUAL
    READ
    THREEDOTS

Grammar

Rule 0     S' -> calc
Rule 1     calc -> PROGRAMA ID seen_program SEMICOLON vars modulesaux functionmain
Rule 2     modulesaux -> function modulesaux
Rule 3     modulesaux -> <empty>
Rule 4     seen_program -> <empty>
Rule 5     vars -> VAR seen_vars tipo varsAuxDeclaration SEMICOLON vars
Rule 6     vars -> empty
Rule 7     varsAuxDeclaration -> idOrArrayDeclaration seen_end_declaration COMMA varsAuxDeclaration
Rule 8     varsAuxDeclaration -> idOrArrayDeclaration seen_end_declaration
Rule 9     seen_end_declaration -> <empty>
Rule 10    idOrArrayDeclaration -> ID seen_ID_var
Rule 11    idOrArrayDeclaration -> ID seen_ID_var LEFTBRACKET seen_lBracket_array arrayDimesionAux RIGHTBRACKET seen_rBracket_array
Rule 12    arrayDimesionAux -> INT_CTE seen_lim_inf INT_CTE seen_lim_sup
Rule 13    arrayDimesionAux -> INT_CTE seen_lim_inf INT_CTE seen_lim_sup COMMA seen_extra_dimension_array arrayDimesionAux
Rule 14    seen_extra_dimension_array -> <empty>
Rule 15    seen_lim_inf -> <empty>
Rule 16    seen_lim_sup -> <empty>
Rule 17    seen_lBracket_array -> <empty>
Rule 18    seen_rBracket_array -> <empty>
Rule 19    seen_vars -> <empty>
Rule 20    seen_vars_end -> <empty>
Rule 21    varsaux -> COMMA ID seen_ID_var varsaux
Rule 22    varsaux -> <empty>
Rule 23    seen_ID_var -> <empty>
Rule 24    tipo -> INT seen_tipo
Rule 25    tipo -> FLOAT seen_tipo
Rule 26    tipo -> BOOLEAN seen_tipo
Rule 27    seen_tipo -> <empty>
Rule 28    function -> FUNCTION returnfunctionaux ID seen_id_function params bloque seen_function_end
Rule 29    seen_id_function -> <empty>
Rule 30    seen_function_end -> <empty>
Rule 31    functionmain -> MAIN seen_function_main LEFTPARENTHESES RIGHTPARENTHESES bloque
Rule 32    seen_function_main -> <empty>
Rule 33    returnfunctionaux -> tipo
Rule 34    returnfunctionaux -> VOID seen_void
Rule 35    seen_void -> <empty>
Rule 36    params -> LEFTPARENTHESES seen_params_init paramsaux RIGHTPARENTHESES
Rule 37    seen_params_init -> <empty>
Rule 38    seen_params_end -> <empty>
Rule 39    paramsaux -> tipo ID seen_ID_params paramsaux
Rule 40    paramsaux -> COMMA paramsaux
Rule 41    paramsaux -> empty
Rule 42    seen_ID_params -> <empty>
Rule 43    bloque -> LEFTBRACE vars seen_start_bloqueaux bloqueaux RIGHTBRACE
Rule 44    seen_start_bloqueaux -> <empty>
Rule 45    bloqueaux -> estatuto bloqueaux
Rule 46    bloqueaux -> <empty>
Rule 47    estatuto -> asignacion
Rule 48    estatuto -> condicion
Rule 49    estatuto -> escritura
Rule 50    estatuto -> while
Rule 51    estatuto -> functionCall
Rule 52    asignacion -> varcte EQUALS seen_equals expresion seen_final_asignacion SEMICOLON
Rule 53    seen_equals -> <empty>
Rule 54    seen_final_asignacion -> <empty>
Rule 55    expresion -> exp seen_comparacion
Rule 56    expresion -> exp seen_comparacion expresionaux exp seen_comparacion
Rule 57    expresionaux -> GREATERTHAN seen_operador
Rule 58    expresionaux -> LESSTHAN seen_operador
Rule 59    expresionaux -> NOTEQUALS seen_operador
Rule 60    expresionaux -> <empty>
Rule 61    escritura -> PRINT LEFTPARENTHESES escrituraaux RIGHTPARENTHESES SEMICOLON
Rule 62    escrituraaux -> escrituraaux2
Rule 63    escrituraaux -> escrituraaux2 COMMA escrituraaux
Rule 64    escrituraaux2 -> expresion seen_print_cuadruplo
Rule 65    escrituraaux2 -> STRING_CTE seen_print_cuadruplo
Rule 66    seen_print_cuadruplo -> <empty>
Rule 67    exp -> termino seen_termino
Rule 68    exp -> termino seen_termino expaux
Rule 69    expaux -> PLUS seen_operador exp
Rule 70    expaux -> MINUS seen_operador exp
Rule 71    termino -> factor seen_factor
Rule 72    termino -> factor seen_factor terminoaux
Rule 73    terminoaux -> DIVIDE seen_operador termino
Rule 74    terminoaux -> MULTIPLY seen_operador termino
Rule 75    condicion -> IF LEFTPARENTHESES expresion RIGHTPARENTHESES seen_right_parentheses_condicion bloque condicionaux
Rule 76    condicionaux -> ELSE seen_else bloque SEMICOLON seen_end_condicion
Rule 77    condicionaux -> SEMICOLON seen_end_condicion
Rule 78    seen_right_parentheses_condicion -> <empty>
Rule 79    seen_else -> <empty>
Rule 80    seen_end_condicion -> <empty>
Rule 81    factor -> factoraux
Rule 82    factor -> varcte
Rule 83    factoraux -> LEFTPARENTHESES seen_insert_fondo expresion RIGHTPARENTHESES seen_remove_fondo
Rule 84    varcte -> ID seen_ID
Rule 85    varcte -> INT_CTE seen_CTE_INT
Rule 86    varcte -> FLOAT_CTE seen_CTE_FLOAT
Rule 87    seen_CTE_INT -> <empty>
Rule 88    seen_CTE_FLOAT -> <empty>
Rule 89    seen_insert_fondo -> <empty>
Rule 90    seen_remove_fondo -> <empty>
Rule 91    seen_ID -> <empty>
Rule 92    seen_operador -> <empty>
Rule 93    seen_termino -> <empty>
Rule 94    seen_factor -> <empty>
Rule 95    seen_comparacion -> <empty>
Rule 96    while -> WHILE seen_while LEFTPARENTHESES expresion RIGHTPARENTHESES seen_right_parentheses_while bloque SEMICOLON seen_end_while
Rule 97    seen_while -> <empty>
Rule 98    seen_right_parentheses_while -> <empty>
Rule 99    seen_end_while -> <empty>
Rule 100   functionCall -> ID seen_fCall_id LEFTPARENTHESES seen_leftp_fCall paramsFunctionCall seen_end_paramsFCall RIGHTPARENTHESES seen_rightp_fCall SEMICOLON
Rule 101   seen_fCall_id -> <empty>
Rule 102   seen_leftp_fCall -> <empty>
Rule 103   paramsFunctionCall -> expresion seen_parameter_fCall COMMA seen_comma_params_fCall paramsFunctionCall
Rule 104   paramsFunctionCall -> expresion seen_parameter_fCall
Rule 105   seen_parameter_fCall -> <empty>
Rule 106   seen_comma_params_fCall -> <empty>
Rule 107   seen_end_paramsFCall -> <empty>
Rule 108   seen_rightp_fCall -> <empty>
Rule 109   empty -> <empty>

Terminals, with rules where they appear

BOOLEAN              : 26
BOOLEAN_CTE          : 
CALL                 : 
COLON                : 
COMMA                : 7 13 21 40 63 103
DIVIDE               : 73
ELSE                 : 76
EQUALS               : 52
FLOAT                : 25
FLOAT_CTE            : 86
FUNCTION             : 28
GREATERTHAN          : 57
ID                   : 1 10 11 21 28 39 84 100
IF                   : 75
INT                  : 24
INT_CTE              : 12 12 13 13 85
LEFTBRACE            : 43
LEFTBRACKET          : 11
LEFTPARENTHESES      : 31 36 61 75 83 96 100
LESSTHAN             : 58
MAIN                 : 31
MINUS                : 70
MULTIPLY             : 74
NOTEQUAL             : 
NOTEQUALS            : 59
PLUS                 : 69
PRINT                : 61
PROGRAMA             : 1
READ                 : 
RIGHTBRACE           : 43
RIGHTBRACKET         : 11
RIGHTPARENTHESES     : 31 36 61 75 83 96 100
SEMICOLON            : 1 5 52 61 76 77 96 100
STRING_CTE           : 65
THREEDOTS            : 
VAR                  : 5
VOID                 : 34
WHILE                : 96
error                : 

Nonterminals, with rules where they appear

arrayDimesionAux     : 11 13
asignacion           : 47
bloque               : 28 31 75 76 96
bloqueaux            : 43 45
calc                 : 0
condicion            : 48
condicionaux         : 75
empty                : 6 41
escritura            : 49
escrituraaux         : 61 63
escrituraaux2        : 62 63
estatuto             : 45
exp                  : 55 56 56 69 70
expaux               : 68
expresion            : 52 64 75 83 96 103 104
expresionaux         : 56
factor               : 71 72
factoraux            : 81
function             : 2
functionCall         : 51
functionmain         : 1
idOrArrayDeclaration : 7 8
modulesaux           : 1 2
params               : 28
paramsFunctionCall   : 100 103
paramsaux            : 36 39 40
returnfunctionaux    : 28
seen_CTE_FLOAT       : 86
seen_CTE_INT         : 85
seen_ID              : 84
seen_ID_params       : 39
seen_ID_var          : 10 11 21
seen_comma_params_fCall : 103
seen_comparacion     : 55 56 56
seen_else            : 76
seen_end_condicion   : 76 77
seen_end_declaration : 7 8
seen_end_paramsFCall : 100
seen_end_while       : 96
seen_equals          : 52
seen_extra_dimension_array : 13
seen_fCall_id        : 100
seen_factor          : 71 72
seen_final_asignacion : 52
seen_function_end    : 28
seen_function_main   : 31
seen_id_function     : 28
seen_insert_fondo    : 83
seen_lBracket_array  : 11
seen_leftp_fCall     : 100
seen_lim_inf         : 12 13
seen_lim_sup         : 12 13
seen_operador        : 57 58 59 69 70 73 74
seen_parameter_fCall : 103 104
seen_params_end      : 
seen_params_init     : 36
seen_print_cuadruplo : 64 65
seen_program         : 1
seen_rBracket_array  : 11
seen_remove_fondo    : 83
seen_right_parentheses_condicion : 75
seen_right_parentheses_while : 96
seen_rightp_fCall    : 100
seen_start_bloqueaux : 43
seen_termino         : 67 68
seen_tipo            : 24 25 26
seen_vars            : 5
seen_vars_end        : 
seen_void            : 34
seen_while           : 96
termino              : 67 68 73 74
terminoaux           : 72
tipo                 : 5 33 39
varcte               : 52 82
vars                 : 1 5 43
varsAuxDeclaration   : 5 7
varsaux              : 21
while                : 50

Parsing method: LALR

state 0

    (0) S' -> . calc
    (1) calc -> . PROGRAMA ID seen_program SEMICOLON vars modulesaux functionmain

    PROGRAMA        shift and go to state 2

    calc                           shift and go to state 1

state 1

    (0) S' -> calc .



state 2

    (1) calc -> PROGRAMA . ID seen_program SEMICOLON vars modulesaux functionmain

    ID              shift and go to state 3


state 3

    (1) calc -> PROGRAMA ID . seen_program SEMICOLON vars modulesaux functionmain
    (4) seen_program -> .

    SEMICOLON       reduce using rule 4 (seen_program -> .)

    seen_program                   shift and go to state 4

state 4

    (1) calc -> PROGRAMA ID seen_program . SEMICOLON vars modulesaux functionmain

    SEMICOLON       shift and go to state 5


state 5

    (1) calc -> PROGRAMA ID seen_program SEMICOLON . vars modulesaux functionmain
    (5) vars -> . VAR seen_vars tipo varsAuxDeclaration SEMICOLON vars
    (6) vars -> . empty
    (109) empty -> .

    VAR             shift and go to state 7
    FUNCTION        reduce using rule 109 (empty -> .)
    MAIN            reduce using rule 109 (empty -> .)

    vars                           shift and go to state 6
    empty                          shift and go to state 8

state 6

    (1) calc -> PROGRAMA ID seen_program SEMICOLON vars . modulesaux functionmain
    (2) modulesaux -> . function modulesaux
    (3) modulesaux -> .
    (28) function -> . FUNCTION returnfunctionaux ID seen_id_function params bloque seen_function_end

    MAIN            reduce using rule 3 (modulesaux -> .)
    FUNCTION        shift and go to state 11

    modulesaux                     shift and go to state 9
    function                       shift and go to state 10

state 7

    (5) vars -> VAR . seen_vars tipo varsAuxDeclaration SEMICOLON vars
    (19) seen_vars -> .

    INT             reduce using rule 19 (seen_vars -> .)
    FLOAT           reduce using rule 19 (seen_vars -> .)
    BOOLEAN         reduce using rule 19 (seen_vars -> .)

    seen_vars                      shift and go to state 12

state 8

    (6) vars -> empty .

    FUNCTION        reduce using rule 6 (vars -> empty .)
    MAIN            reduce using rule 6 (vars -> empty .)
    IF              reduce using rule 6 (vars -> empty .)
    PRINT           reduce using rule 6 (vars -> empty .)
    WHILE           reduce using rule 6 (vars -> empty .)
    ID              reduce using rule 6 (vars -> empty .)
    INT_CTE         reduce using rule 6 (vars -> empty .)
    FLOAT_CTE       reduce using rule 6 (vars -> empty .)
    RIGHTBRACE      reduce using rule 6 (vars -> empty .)


state 9

    (1) calc -> PROGRAMA ID seen_program SEMICOLON vars modulesaux . functionmain
    (31) functionmain -> . MAIN seen_function_main LEFTPARENTHESES RIGHTPARENTHESES bloque

    MAIN            shift and go to state 14

    functionmain                   shift and go to state 13

state 10

    (2) modulesaux -> function . modulesaux
    (2) modulesaux -> . function modulesaux
    (3) modulesaux -> .
    (28) function -> . FUNCTION returnfunctionaux ID seen_id_function params bloque seen_function_end

    MAIN            reduce using rule 3 (modulesaux -> .)
    FUNCTION        shift and go to state 11

    function                       shift and go to state 10
    modulesaux                     shift and go to state 15

state 11

    (28) function -> FUNCTION . returnfunctionaux ID seen_id_function params bloque seen_function_end
    (33) returnfunctionaux -> . tipo
    (34) returnfunctionaux -> . VOID seen_void
    (24) tipo -> . INT seen_tipo
    (25) tipo -> . FLOAT seen_tipo
    (26) tipo -> . BOOLEAN seen_tipo

    VOID            shift and go to state 18
    INT             shift and go to state 19
    FLOAT           shift and go to state 20
    BOOLEAN         shift and go to state 21

    returnfunctionaux              shift and go to state 16
    tipo                           shift and go to state 17

state 12

    (5) vars -> VAR seen_vars . tipo varsAuxDeclaration SEMICOLON vars
    (24) tipo -> . INT seen_tipo
    (25) tipo -> . FLOAT seen_tipo
    (26) tipo -> . BOOLEAN seen_tipo

    INT             shift and go to state 19
    FLOAT           shift and go to state 20
    BOOLEAN         shift and go to state 21

    tipo                           shift and go to state 22

state 13

    (1) calc -> PROGRAMA ID seen_program SEMICOLON vars modulesaux functionmain .

    $end            reduce using rule 1 (calc -> PROGRAMA ID seen_program SEMICOLON vars modulesaux functionmain .)


state 14

    (31) functionmain -> MAIN . seen_function_main LEFTPARENTHESES RIGHTPARENTHESES bloque
    (32) seen_function_main -> .

    LEFTPARENTHESES reduce using rule 32 (seen_function_main -> .)

    seen_function_main             shift and go to state 23

state 15

    (2) modulesaux -> function modulesaux .

    MAIN            reduce using rule 2 (modulesaux -> function modulesaux .)


state 16

    (28) function -> FUNCTION returnfunctionaux . ID seen_id_function params bloque seen_function_end

    ID              shift and go to state 24


state 17

    (33) returnfunctionaux -> tipo .

    ID              reduce using rule 33 (returnfunctionaux -> tipo .)


state 18

    (34) returnfunctionaux -> VOID . seen_void
    (35) seen_void -> .

    ID              reduce using rule 35 (seen_void -> .)

    seen_void                      shift and go to state 25

state 19

    (24) tipo -> INT . seen_tipo
    (27) seen_tipo -> .

    ID              reduce using rule 27 (seen_tipo -> .)

    seen_tipo                      shift and go to state 26

state 20

    (25) tipo -> FLOAT . seen_tipo
    (27) seen_tipo -> .

    ID              reduce using rule 27 (seen_tipo -> .)

    seen_tipo                      shift and go to state 27

state 21

    (26) tipo -> BOOLEAN . seen_tipo
    (27) seen_tipo -> .

    ID              reduce using rule 27 (seen_tipo -> .)

    seen_tipo                      shift and go to state 28

state 22

    (5) vars -> VAR seen_vars tipo . varsAuxDeclaration SEMICOLON vars
    (7) varsAuxDeclaration -> . idOrArrayDeclaration seen_end_declaration COMMA varsAuxDeclaration
    (8) varsAuxDeclaration -> . idOrArrayDeclaration seen_end_declaration
    (10) idOrArrayDeclaration -> . ID seen_ID_var
    (11) idOrArrayDeclaration -> . ID seen_ID_var LEFTBRACKET seen_lBracket_array arrayDimesionAux RIGHTBRACKET seen_rBracket_array

    ID              shift and go to state 31

    varsAuxDeclaration             shift and go to state 29
    idOrArrayDeclaration           shift and go to state 30

state 23

    (31) functionmain -> MAIN seen_function_main . LEFTPARENTHESES RIGHTPARENTHESES bloque

    LEFTPARENTHESES shift and go to state 32


state 24

    (28) function -> FUNCTION returnfunctionaux ID . seen_id_function params bloque seen_function_end
    (29) seen_id_function -> .

    LEFTPARENTHESES reduce using rule 29 (seen_id_function -> .)

    seen_id_function               shift and go to state 33

state 25

    (34) returnfunctionaux -> VOID seen_void .

    ID              reduce using rule 34 (returnfunctionaux -> VOID seen_void .)


state 26

    (24) tipo -> INT seen_tipo .

    ID              reduce using rule 24 (tipo -> INT seen_tipo .)


state 27

    (25) tipo -> FLOAT seen_tipo .

    ID              reduce using rule 25 (tipo -> FLOAT seen_tipo .)


state 28

    (26) tipo -> BOOLEAN seen_tipo .

    ID              reduce using rule 26 (tipo -> BOOLEAN seen_tipo .)


state 29

    (5) vars -> VAR seen_vars tipo varsAuxDeclaration . SEMICOLON vars

    SEMICOLON       shift and go to state 34


state 30

    (7) varsAuxDeclaration -> idOrArrayDeclaration . seen_end_declaration COMMA varsAuxDeclaration
    (8) varsAuxDeclaration -> idOrArrayDeclaration . seen_end_declaration
    (9) seen_end_declaration -> .

    COMMA           reduce using rule 9 (seen_end_declaration -> .)
    SEMICOLON       reduce using rule 9 (seen_end_declaration -> .)

    seen_end_declaration           shift and go to state 35

state 31

    (10) idOrArrayDeclaration -> ID . seen_ID_var
    (11) idOrArrayDeclaration -> ID . seen_ID_var LEFTBRACKET seen_lBracket_array arrayDimesionAux RIGHTBRACKET seen_rBracket_array
    (23) seen_ID_var -> .

    LEFTBRACKET     reduce using rule 23 (seen_ID_var -> .)
    COMMA           reduce using rule 23 (seen_ID_var -> .)
    SEMICOLON       reduce using rule 23 (seen_ID_var -> .)

    seen_ID_var                    shift and go to state 36

state 32

    (31) functionmain -> MAIN seen_function_main LEFTPARENTHESES . RIGHTPARENTHESES bloque

    RIGHTPARENTHESES shift and go to state 37


state 33

    (28) function -> FUNCTION returnfunctionaux ID seen_id_function . params bloque seen_function_end
    (36) params -> . LEFTPARENTHESES seen_params_init paramsaux RIGHTPARENTHESES

    LEFTPARENTHESES shift and go to state 39

    params                         shift and go to state 38

state 34

    (5) vars -> VAR seen_vars tipo varsAuxDeclaration SEMICOLON . vars
    (5) vars -> . VAR seen_vars tipo varsAuxDeclaration SEMICOLON vars
    (6) vars -> . empty
    (109) empty -> .

    VAR             shift and go to state 7
    FUNCTION        reduce using rule 109 (empty -> .)
    MAIN            reduce using rule 109 (empty -> .)
    IF              reduce using rule 109 (empty -> .)
    PRINT           reduce using rule 109 (empty -> .)
    WHILE           reduce using rule 109 (empty -> .)
    ID              reduce using rule 109 (empty -> .)
    INT_CTE         reduce using rule 109 (empty -> .)
    FLOAT_CTE       reduce using rule 109 (empty -> .)
    RIGHTBRACE      reduce using rule 109 (empty -> .)

    vars                           shift and go to state 40
    empty                          shift and go to state 8

state 35

    (7) varsAuxDeclaration -> idOrArrayDeclaration seen_end_declaration . COMMA varsAuxDeclaration
    (8) varsAuxDeclaration -> idOrArrayDeclaration seen_end_declaration .

    COMMA           shift and go to state 41
    SEMICOLON       reduce using rule 8 (varsAuxDeclaration -> idOrArrayDeclaration seen_end_declaration .)


state 36

    (10) idOrArrayDeclaration -> ID seen_ID_var .
    (11) idOrArrayDeclaration -> ID seen_ID_var . LEFTBRACKET seen_lBracket_array arrayDimesionAux RIGHTBRACKET seen_rBracket_array

    COMMA           reduce using rule 10 (idOrArrayDeclaration -> ID seen_ID_var .)
    SEMICOLON       reduce using rule 10 (idOrArrayDeclaration -> ID seen_ID_var .)
    LEFTBRACKET     shift and go to state 42


state 37

    (31) functionmain -> MAIN seen_function_main LEFTPARENTHESES RIGHTPARENTHESES . bloque
    (43) bloque -> . LEFTBRACE vars seen_start_bloqueaux bloqueaux RIGHTBRACE

    LEFTBRACE       shift and go to state 44

    bloque                         shift and go to state 43

state 38

    (28) function -> FUNCTION returnfunctionaux ID seen_id_function params . bloque seen_function_end
    (43) bloque -> . LEFTBRACE vars seen_start_bloqueaux bloqueaux RIGHTBRACE

    LEFTBRACE       shift and go to state 44

    bloque                         shift and go to state 45

state 39

    (36) params -> LEFTPARENTHESES . seen_params_init paramsaux RIGHTPARENTHESES
    (37) seen_params_init -> .

    COMMA           reduce using rule 37 (seen_params_init -> .)
    INT             reduce using rule 37 (seen_params_init -> .)
    FLOAT           reduce using rule 37 (seen_params_init -> .)
    BOOLEAN         reduce using rule 37 (seen_params_init -> .)
    RIGHTPARENTHESES reduce using rule 37 (seen_params_init -> .)

    seen_params_init               shift and go to state 46

state 40

    (5) vars -> VAR seen_vars tipo varsAuxDeclaration SEMICOLON vars .

    FUNCTION        reduce using rule 5 (vars -> VAR seen_vars tipo varsAuxDeclaration SEMICOLON vars .)
    MAIN            reduce using rule 5 (vars -> VAR seen_vars tipo varsAuxDeclaration SEMICOLON vars .)
    IF              reduce using rule 5 (vars -> VAR seen_vars tipo varsAuxDeclaration SEMICOLON vars .)
    PRINT           reduce using rule 5 (vars -> VAR seen_vars tipo varsAuxDeclaration SEMICOLON vars .)
    WHILE           reduce using rule 5 (vars -> VAR seen_vars tipo varsAuxDeclaration SEMICOLON vars .)
    ID              reduce using rule 5 (vars -> VAR seen_vars tipo varsAuxDeclaration SEMICOLON vars .)
    INT_CTE         reduce using rule 5 (vars -> VAR seen_vars tipo varsAuxDeclaration SEMICOLON vars .)
    FLOAT_CTE       reduce using rule 5 (vars -> VAR seen_vars tipo varsAuxDeclaration SEMICOLON vars .)
    RIGHTBRACE      reduce using rule 5 (vars -> VAR seen_vars tipo varsAuxDeclaration SEMICOLON vars .)


state 41

    (7) varsAuxDeclaration -> idOrArrayDeclaration seen_end_declaration COMMA . varsAuxDeclaration
    (7) varsAuxDeclaration -> . idOrArrayDeclaration seen_end_declaration COMMA varsAuxDeclaration
    (8) varsAuxDeclaration -> . idOrArrayDeclaration seen_end_declaration
    (10) idOrArrayDeclaration -> . ID seen_ID_var
    (11) idOrArrayDeclaration -> . ID seen_ID_var LEFTBRACKET seen_lBracket_array arrayDimesionAux RIGHTBRACKET seen_rBracket_array

    ID              shift and go to state 31

    idOrArrayDeclaration           shift and go to state 30
    varsAuxDeclaration             shift and go to state 47

state 42

    (11) idOrArrayDeclaration -> ID seen_ID_var LEFTBRACKET . seen_lBracket_array arrayDimesionAux RIGHTBRACKET seen_rBracket_array
    (17) seen_lBracket_array -> .

    INT_CTE         reduce using rule 17 (seen_lBracket_array -> .)

    seen_lBracket_array            shift and go to state 48

state 43

    (31) functionmain -> MAIN seen_function_main LEFTPARENTHESES RIGHTPARENTHESES bloque .

    $end            reduce using rule 31 (functionmain -> MAIN seen_function_main LEFTPARENTHESES RIGHTPARENTHESES bloque .)


state 44

    (43) bloque -> LEFTBRACE . vars seen_start_bloqueaux bloqueaux RIGHTBRACE
    (5) vars -> . VAR seen_vars tipo varsAuxDeclaration SEMICOLON vars
    (6) vars -> . empty
    (109) empty -> .

    VAR             shift and go to state 7
    IF              reduce using rule 109 (empty -> .)
    PRINT           reduce using rule 109 (empty -> .)
    WHILE           reduce using rule 109 (empty -> .)
    ID              reduce using rule 109 (empty -> .)
    INT_CTE         reduce using rule 109 (empty -> .)
    FLOAT_CTE       reduce using rule 109 (empty -> .)
    RIGHTBRACE      reduce using rule 109 (empty -> .)

    vars                           shift and go to state 49
    empty                          shift and go to state 8

state 45

    (28) function -> FUNCTION returnfunctionaux ID seen_id_function params bloque . seen_function_end
    (30) seen_function_end -> .

    FUNCTION        reduce using rule 30 (seen_function_end -> .)
    MAIN            reduce using rule 30 (seen_function_end -> .)

    seen_function_end              shift and go to state 50

state 46

    (36) params -> LEFTPARENTHESES seen_params_init . paramsaux RIGHTPARENTHESES
    (39) paramsaux -> . tipo ID seen_ID_params paramsaux
    (40) paramsaux -> . COMMA paramsaux
    (41) paramsaux -> . empty
    (24) tipo -> . INT seen_tipo
    (25) tipo -> . FLOAT seen_tipo
    (26) tipo -> . BOOLEAN seen_tipo
    (109) empty -> .

    COMMA           shift and go to state 53
    INT             shift and go to state 19
    FLOAT           shift and go to state 20
    BOOLEAN         shift and go to state 21
    RIGHTPARENTHESES reduce using rule 109 (empty -> .)

    paramsaux                      shift and go to state 51
    tipo                           shift and go to state 52
    empty                          shift and go to state 54

state 47

    (7) varsAuxDeclaration -> idOrArrayDeclaration seen_end_declaration COMMA varsAuxDeclaration .

    SEMICOLON       reduce using rule 7 (varsAuxDeclaration -> idOrArrayDeclaration seen_end_declaration COMMA varsAuxDeclaration .)


state 48

    (11) idOrArrayDeclaration -> ID seen_ID_var LEFTBRACKET seen_lBracket_array . arrayDimesionAux RIGHTBRACKET seen_rBracket_array
    (12) arrayDimesionAux -> . INT_CTE seen_lim_inf INT_CTE seen_lim_sup
    (13) arrayDimesionAux -> . INT_CTE seen_lim_inf INT_CTE seen_lim_sup COMMA seen_extra_dimension_array arrayDimesionAux

    INT_CTE         shift and go to state 56

    arrayDimesionAux               shift and go to state 55

state 49

    (43) bloque -> LEFTBRACE vars . seen_start_bloqueaux bloqueaux RIGHTBRACE
    (44) seen_start_bloqueaux -> .

    IF              reduce using rule 44 (seen_start_bloqueaux -> .)
    PRINT           reduce using rule 44 (seen_start_bloqueaux -> .)
    WHILE           reduce using rule 44 (seen_start_bloqueaux -> .)
    ID              reduce using rule 44 (seen_start_bloqueaux -> .)
    INT_CTE         reduce using rule 44 (seen_start_bloqueaux -> .)
    FLOAT_CTE       reduce using rule 44 (seen_start_bloqueaux -> .)
    RIGHTBRACE      reduce using rule 44 (seen_start_bloqueaux -> .)

    seen_start_bloqueaux           shift and go to state 57

state 50

    (28) function -> FUNCTION returnfunctionaux ID seen_id_function params bloque seen_function_end .

    FUNCTION        reduce using rule 28 (function -> FUNCTION returnfunctionaux ID seen_id_function params bloque seen_function_end .)
    MAIN            reduce using rule 28 (function -> FUNCTION returnfunctionaux ID seen_id_function params bloque seen_function_end .)


state 51

    (36) params -> LEFTPARENTHESES seen_params_init paramsaux . RIGHTPARENTHESES

    RIGHTPARENTHESES shift and go to state 58


state 52

    (39) paramsaux -> tipo . ID seen_ID_params paramsaux

    ID              shift and go to state 59


state 53

    (40) paramsaux -> COMMA . paramsaux
    (39) paramsaux -> . tipo ID seen_ID_params paramsaux
    (40) paramsaux -> . COMMA paramsaux
    (41) paramsaux -> . empty
    (24) tipo -> . INT seen_tipo
    (25) tipo -> . FLOAT seen_tipo
    (26) tipo -> . BOOLEAN seen_tipo
    (109) empty -> .

    COMMA           shift and go to state 53
    INT             shift and go to state 19
    FLOAT           shift and go to state 20
    BOOLEAN         shift and go to state 21
    RIGHTPARENTHESES reduce using rule 109 (empty -> .)

    paramsaux                      shift and go to state 60
    tipo                           shift and go to state 52
    empty                          shift and go to state 54

state 54

    (41) paramsaux -> empty .

    RIGHTPARENTHESES reduce using rule 41 (paramsaux -> empty .)


state 55

    (11) idOrArrayDeclaration -> ID seen_ID_var LEFTBRACKET seen_lBracket_array arrayDimesionAux . RIGHTBRACKET seen_rBracket_array

    RIGHTBRACKET    shift and go to state 61


state 56

    (12) arrayDimesionAux -> INT_CTE . seen_lim_inf INT_CTE seen_lim_sup
    (13) arrayDimesionAux -> INT_CTE . seen_lim_inf INT_CTE seen_lim_sup COMMA seen_extra_dimension_array arrayDimesionAux
    (15) seen_lim_inf -> .

    INT_CTE         reduce using rule 15 (seen_lim_inf -> .)

    seen_lim_inf                   shift and go to state 62

state 57

    (43) bloque -> LEFTBRACE vars seen_start_bloqueaux . bloqueaux RIGHTBRACE
    (45) bloqueaux -> . estatuto bloqueaux
    (46) bloqueaux -> .
    (47) estatuto -> . asignacion
    (48) estatuto -> . condicion
    (49) estatuto -> . escritura
    (50) estatuto -> . while
    (51) estatuto -> . functionCall
    (52) asignacion -> . varcte EQUALS seen_equals expresion seen_final_asignacion SEMICOLON
    (75) condicion -> . IF LEFTPARENTHESES expresion RIGHTPARENTHESES seen_right_parentheses_condicion bloque condicionaux
    (61) escritura -> . PRINT LEFTPARENTHESES escrituraaux RIGHTPARENTHESES SEMICOLON
    (96) while -> . WHILE seen_while LEFTPARENTHESES expresion RIGHTPARENTHESES seen_right_parentheses_while bloque SEMICOLON seen_end_while
    (100) functionCall -> . ID seen_fCall_id LEFTPARENTHESES seen_leftp_fCall paramsFunctionCall seen_end_paramsFCall RIGHTPARENTHESES seen_rightp_fCall SEMICOLON
    (84) varcte -> . ID seen_ID
    (85) varcte -> . INT_CTE seen_CTE_INT
    (86) varcte -> . FLOAT_CTE seen_CTE_FLOAT

    RIGHTBRACE      reduce using rule 46 (bloqueaux -> .)
    IF              shift and go to state 71
    PRINT           shift and go to state 72
    WHILE           shift and go to state 73
    ID              shift and go to state 74
    INT_CTE         shift and go to state 75
    FLOAT_CTE       shift and go to state 76

    bloqueaux                      shift and go to state 63
    estatuto                       shift and go to state 64
    asignacion                     shift and go to state 65
    condicion                      shift and go to state 66
    escritura                      shift and go to state 67
    while                          shift and go to state 68
    functionCall                   shift and go to state 69
    varcte                         shift and go to state 70

state 58

    (36) params -> LEFTPARENTHESES seen_params_init paramsaux RIGHTPARENTHESES .

    LEFTBRACE       reduce using rule 36 (params -> LEFTPARENTHESES seen_params_init paramsaux RIGHTPARENTHESES .)


state 59

    (39) paramsaux -> tipo ID . seen_ID_params paramsaux
    (42) seen_ID_params -> .

    COMMA           reduce using rule 42 (seen_ID_params -> .)
    INT             reduce using rule 42 (seen_ID_params -> .)
    FLOAT           reduce using rule 42 (seen_ID_params -> .)
    BOOLEAN         reduce using rule 42 (seen_ID_params -> .)
    RIGHTPARENTHESES reduce using rule 42 (seen_ID_params -> .)

    seen_ID_params                 shift and go to state 77

state 60

    (40) paramsaux -> COMMA paramsaux .

    RIGHTPARENTHESES reduce using rule 40 (paramsaux -> COMMA paramsaux .)


state 61

    (11) idOrArrayDeclaration -> ID seen_ID_var LEFTBRACKET seen_lBracket_array arrayDimesionAux RIGHTBRACKET . seen_rBracket_array
    (18) seen_rBracket_array -> .

    COMMA           reduce using rule 18 (seen_rBracket_array -> .)
    SEMICOLON       reduce using rule 18 (seen_rBracket_array -> .)

    seen_rBracket_array            shift and go to state 78

state 62

    (12) arrayDimesionAux -> INT_CTE seen_lim_inf . INT_CTE seen_lim_sup
    (13) arrayDimesionAux -> INT_CTE seen_lim_inf . INT_CTE seen_lim_sup COMMA seen_extra_dimension_array arrayDimesionAux

    INT_CTE         shift and go to state 79


state 63

    (43) bloque -> LEFTBRACE vars seen_start_bloqueaux bloqueaux . RIGHTBRACE

    RIGHTBRACE      shift and go to state 80


state 64

    (45) bloqueaux -> estatuto . bloqueaux
    (45) bloqueaux -> . estatuto bloqueaux
    (46) bloqueaux -> .
    (47) estatuto -> . asignacion
    (48) estatuto -> . condicion
    (49) estatuto -> . escritura
    (50) estatuto -> . while
    (51) estatuto -> . functionCall
    (52) asignacion -> . varcte EQUALS seen_equals expresion seen_final_asignacion SEMICOLON
    (75) condicion -> . IF LEFTPARENTHESES expresion RIGHTPARENTHESES seen_right_parentheses_condicion bloque condicionaux
    (61) escritura -> . PRINT LEFTPARENTHESES escrituraaux RIGHTPARENTHESES SEMICOLON
    (96) while -> . WHILE seen_while LEFTPARENTHESES expresion RIGHTPARENTHESES seen_right_parentheses_while bloque SEMICOLON seen_end_while
    (100) functionCall -> . ID seen_fCall_id LEFTPARENTHESES seen_leftp_fCall paramsFunctionCall seen_end_paramsFCall RIGHTPARENTHESES seen_rightp_fCall SEMICOLON
    (84) varcte -> . ID seen_ID
    (85) varcte -> . INT_CTE seen_CTE_INT
    (86) varcte -> . FLOAT_CTE seen_CTE_FLOAT

    RIGHTBRACE      reduce using rule 46 (bloqueaux -> .)
    IF              shift and go to state 71
    PRINT           shift and go to state 72
    WHILE           shift and go to state 73
    ID              shift and go to state 74
    INT_CTE         shift and go to state 75
    FLOAT_CTE       shift and go to state 76

    estatuto                       shift and go to state 64
    bloqueaux                      shift and go to state 81
    asignacion                     shift and go to state 65
    condicion                      shift and go to state 66
    escritura                      shift and go to state 67
    while                          shift and go to state 68
    functionCall                   shift and go to state 69
    varcte                         shift and go to state 70

state 65

    (47) estatuto -> asignacion .

    IF              reduce using rule 47 (estatuto -> asignacion .)
    PRINT           reduce using rule 47 (estatuto -> asignacion .)
    WHILE           reduce using rule 47 (estatuto -> asignacion .)
    ID              reduce using rule 47 (estatuto -> asignacion .)
    INT_CTE         reduce using rule 47 (estatuto -> asignacion .)
    FLOAT_CTE       reduce using rule 47 (estatuto -> asignacion .)
    RIGHTBRACE      reduce using rule 47 (estatuto -> asignacion .)


state 66

    (48) estatuto -> condicion .

    IF              reduce using rule 48 (estatuto -> condicion .)
    PRINT           reduce using rule 48 (estatuto -> condicion .)
    WHILE           reduce using rule 48 (estatuto -> condicion .)
    ID              reduce using rule 48 (estatuto -> condicion .)
    INT_CTE         reduce using rule 48 (estatuto -> condicion .)
    FLOAT_CTE       reduce using rule 48 (estatuto -> condicion .)
    RIGHTBRACE      reduce using rule 48 (estatuto -> condicion .)


state 67

    (49) estatuto -> escritura .

    IF              reduce using rule 49 (estatuto -> escritura .)
    PRINT           reduce using rule 49 (estatuto -> escritura .)
    WHILE           reduce using rule 49 (estatuto -> escritura .)
    ID              reduce using rule 49 (estatuto -> escritura .)
    INT_CTE         reduce using rule 49 (estatuto -> escritura .)
    FLOAT_CTE       reduce using rule 49 (estatuto -> escritura .)
    RIGHTBRACE      reduce using rule 49 (estatuto -> escritura .)


state 68

    (50) estatuto -> while .

    IF              reduce using rule 50 (estatuto -> while .)
    PRINT           reduce using rule 50 (estatuto -> while .)
    WHILE           reduce using rule 50 (estatuto -> while .)
    ID              reduce using rule 50 (estatuto -> while .)
    INT_CTE         reduce using rule 50 (estatuto -> while .)
    FLOAT_CTE       reduce using rule 50 (estatuto -> while .)
    RIGHTBRACE      reduce using rule 50 (estatuto -> while .)


state 69

    (51) estatuto -> functionCall .

    IF              reduce using rule 51 (estatuto -> functionCall .)
    PRINT           reduce using rule 51 (estatuto -> functionCall .)
    WHILE           reduce using rule 51 (estatuto -> functionCall .)
    ID              reduce using rule 51 (estatuto -> functionCall .)
    INT_CTE         reduce using rule 51 (estatuto -> functionCall .)
    FLOAT_CTE       reduce using rule 51 (estatuto -> functionCall .)
    RIGHTBRACE      reduce using rule 51 (estatuto -> functionCall .)


state 70

    (52) asignacion -> varcte . EQUALS seen_equals expresion seen_final_asignacion SEMICOLON

    EQUALS          shift and go to state 82


state 71

    (75) condicion -> IF . LEFTPARENTHESES expresion RIGHTPARENTHESES seen_right_parentheses_condicion bloque condicionaux

    LEFTPARENTHESES shift and go to state 83


state 72

    (61) escritura -> PRINT . LEFTPARENTHESES escrituraaux RIGHTPARENTHESES SEMICOLON

    LEFTPARENTHESES shift and go to state 84


state 73

    (96) while -> WHILE . seen_while LEFTPARENTHESES expresion RIGHTPARENTHESES seen_right_parentheses_while bloque SEMICOLON seen_end_while
    (97) seen_while -> .

    LEFTPARENTHESES reduce using rule 97 (seen_while -> .)

    seen_while                     shift and go to state 85

state 74

    (100) functionCall -> ID . seen_fCall_id LEFTPARENTHESES seen_leftp_fCall paramsFunctionCall seen_end_paramsFCall RIGHTPARENTHESES seen_rightp_fCall SEMICOLON
    (84) varcte -> ID . seen_ID
    (101) seen_fCall_id -> .
    (91) seen_ID -> .

    LEFTPARENTHESES reduce using rule 101 (seen_fCall_id -> .)
    EQUALS          reduce using rule 91 (seen_ID -> .)

    seen_fCall_id                  shift and go to state 86
    seen_ID                        shift and go to state 87

state 75

    (85) varcte -> INT_CTE . seen_CTE_INT
    (87) seen_CTE_INT -> .

    EQUALS          reduce using rule 87 (seen_CTE_INT -> .)
    DIVIDE          reduce using rule 87 (seen_CTE_INT -> .)
    MULTIPLY        reduce using rule 87 (seen_CTE_INT -> .)
    PLUS            reduce using rule 87 (seen_CTE_INT -> .)
    MINUS           reduce using rule 87 (seen_CTE_INT -> .)
    GREATERTHAN     reduce using rule 87 (seen_CTE_INT -> .)
    LESSTHAN        reduce using rule 87 (seen_CTE_INT -> .)
    NOTEQUALS       reduce using rule 87 (seen_CTE_INT -> .)
    LEFTPARENTHESES reduce using rule 87 (seen_CTE_INT -> .)
    ID              reduce using rule 87 (seen_CTE_INT -> .)
    INT_CTE         reduce using rule 87 (seen_CTE_INT -> .)
    FLOAT_CTE       reduce using rule 87 (seen_CTE_INT -> .)
    RIGHTPARENTHESES reduce using rule 87 (seen_CTE_INT -> .)
    COMMA           reduce using rule 87 (seen_CTE_INT -> .)
    SEMICOLON       reduce using rule 87 (seen_CTE_INT -> .)

    seen_CTE_INT                   shift and go to state 88

state 76

    (86) varcte -> FLOAT_CTE . seen_CTE_FLOAT
    (88) seen_CTE_FLOAT -> .

    EQUALS          reduce using rule 88 (seen_CTE_FLOAT -> .)
    DIVIDE          reduce using rule 88 (seen_CTE_FLOAT -> .)
    MULTIPLY        reduce using rule 88 (seen_CTE_FLOAT -> .)
    PLUS            reduce using rule 88 (seen_CTE_FLOAT -> .)
    MINUS           reduce using rule 88 (seen_CTE_FLOAT -> .)
    GREATERTHAN     reduce using rule 88 (seen_CTE_FLOAT -> .)
    LESSTHAN        reduce using rule 88 (seen_CTE_FLOAT -> .)
    NOTEQUALS       reduce using rule 88 (seen_CTE_FLOAT -> .)
    LEFTPARENTHESES reduce using rule 88 (seen_CTE_FLOAT -> .)
    ID              reduce using rule 88 (seen_CTE_FLOAT -> .)
    INT_CTE         reduce using rule 88 (seen_CTE_FLOAT -> .)
    FLOAT_CTE       reduce using rule 88 (seen_CTE_FLOAT -> .)
    RIGHTPARENTHESES reduce using rule 88 (seen_CTE_FLOAT -> .)
    COMMA           reduce using rule 88 (seen_CTE_FLOAT -> .)
    SEMICOLON       reduce using rule 88 (seen_CTE_FLOAT -> .)

    seen_CTE_FLOAT                 shift and go to state 89

state 77

    (39) paramsaux -> tipo ID seen_ID_params . paramsaux
    (39) paramsaux -> . tipo ID seen_ID_params paramsaux
    (40) paramsaux -> . COMMA paramsaux
    (41) paramsaux -> . empty
    (24) tipo -> . INT seen_tipo
    (25) tipo -> . FLOAT seen_tipo
    (26) tipo -> . BOOLEAN seen_tipo
    (109) empty -> .

    COMMA           shift and go to state 53
    INT             shift and go to state 19
    FLOAT           shift and go to state 20
    BOOLEAN         shift and go to state 21
    RIGHTPARENTHESES reduce using rule 109 (empty -> .)

    tipo                           shift and go to state 52
    paramsaux                      shift and go to state 90
    empty                          shift and go to state 54

state 78

    (11) idOrArrayDeclaration -> ID seen_ID_var LEFTBRACKET seen_lBracket_array arrayDimesionAux RIGHTBRACKET seen_rBracket_array .

    COMMA           reduce using rule 11 (idOrArrayDeclaration -> ID seen_ID_var LEFTBRACKET seen_lBracket_array arrayDimesionAux RIGHTBRACKET seen_rBracket_array .)
    SEMICOLON       reduce using rule 11 (idOrArrayDeclaration -> ID seen_ID_var LEFTBRACKET seen_lBracket_array arrayDimesionAux RIGHTBRACKET seen_rBracket_array .)


state 79

    (12) arrayDimesionAux -> INT_CTE seen_lim_inf INT_CTE . seen_lim_sup
    (13) arrayDimesionAux -> INT_CTE seen_lim_inf INT_CTE . seen_lim_sup COMMA seen_extra_dimension_array arrayDimesionAux
    (16) seen_lim_sup -> .

    COMMA           reduce using rule 16 (seen_lim_sup -> .)
    RIGHTBRACKET    reduce using rule 16 (seen_lim_sup -> .)

    seen_lim_sup                   shift and go to state 91

state 80

    (43) bloque -> LEFTBRACE vars seen_start_bloqueaux bloqueaux RIGHTBRACE .

    $end            reduce using rule 43 (bloque -> LEFTBRACE vars seen_start_bloqueaux bloqueaux RIGHTBRACE .)
    FUNCTION        reduce using rule 43 (bloque -> LEFTBRACE vars seen_start_bloqueaux bloqueaux RIGHTBRACE .)
    MAIN            reduce using rule 43 (bloque -> LEFTBRACE vars seen_start_bloqueaux bloqueaux RIGHTBRACE .)
    ELSE            reduce using rule 43 (bloque -> LEFTBRACE vars seen_start_bloqueaux bloqueaux RIGHTBRACE .)
    SEMICOLON       reduce using rule 43 (bloque -> LEFTBRACE vars seen_start_bloqueaux bloqueaux RIGHTBRACE .)


state 81

    (45) bloqueaux -> estatuto bloqueaux .

    RIGHTBRACE      reduce using rule 45 (bloqueaux -> estatuto bloqueaux .)


state 82

    (52) asignacion -> varcte EQUALS . seen_equals expresion seen_final_asignacion SEMICOLON
    (53) seen_equals -> .

    LEFTPARENTHESES reduce using rule 53 (seen_equals -> .)
    ID              reduce using rule 53 (seen_equals -> .)
    INT_CTE         reduce using rule 53 (seen_equals -> .)
    FLOAT_CTE       reduce using rule 53 (seen_equals -> .)

    seen_equals                    shift and go to state 92

state 83

    (75) condicion -> IF LEFTPARENTHESES . expresion RIGHTPARENTHESES seen_right_parentheses_condicion bloque condicionaux
    (55) expresion -> . exp seen_comparacion
    (56) expresion -> . exp seen_comparacion expresionaux exp seen_comparacion
    (67) exp -> . termino seen_termino
    (68) exp -> . termino seen_termino expaux
    (71) termino -> . factor seen_factor
    (72) termino -> . factor seen_factor terminoaux
    (81) factor -> . factoraux
    (82) factor -> . varcte
    (83) factoraux -> . LEFTPARENTHESES seen_insert_fondo expresion RIGHTPARENTHESES seen_remove_fondo
    (84) varcte -> . ID seen_ID
    (85) varcte -> . INT_CTE seen_CTE_INT
    (86) varcte -> . FLOAT_CTE seen_CTE_FLOAT

    LEFTPARENTHESES shift and go to state 93
    ID              shift and go to state 100
    INT_CTE         shift and go to state 75
    FLOAT_CTE       shift and go to state 76

    expresion                      shift and go to state 94
    exp                            shift and go to state 95
    termino                        shift and go to state 96
    factor                         shift and go to state 97
    factoraux                      shift and go to state 98
    varcte                         shift and go to state 99

state 84

    (61) escritura -> PRINT LEFTPARENTHESES . escrituraaux RIGHTPARENTHESES SEMICOLON
    (62) escrituraaux -> . escrituraaux2
    (63) escrituraaux -> . escrituraaux2 COMMA escrituraaux
    (64) escrituraaux2 -> . expresion seen_print_cuadruplo
    (65) escrituraaux2 -> . STRING_CTE seen_print_cuadruplo
    (55) expresion -> . exp seen_comparacion
    (56) expresion -> . exp seen_comparacion expresionaux exp seen_comparacion
    (67) exp -> . termino seen_termino
    (68) exp -> . termino seen_termino expaux
    (71) termino -> . factor seen_factor
    (72) termino -> . factor seen_factor terminoaux
    (81) factor -> . factoraux
    (82) factor -> . varcte
    (83) factoraux -> . LEFTPARENTHESES seen_insert_fondo expresion RIGHTPARENTHESES seen_remove_fondo
    (84) varcte -> . ID seen_ID
    (85) varcte -> . INT_CTE seen_CTE_INT
    (86) varcte -> . FLOAT_CTE seen_CTE_FLOAT

    STRING_CTE      shift and go to state 104
    LEFTPARENTHESES shift and go to state 93
    ID              shift and go to state 100
    INT_CTE         shift and go to state 75
    FLOAT_CTE       shift and go to state 76

    escrituraaux                   shift and go to state 101
    escrituraaux2                  shift and go to state 102
    expresion                      shift and go to state 103
    exp                            shift and go to state 95
    termino                        shift and go to state 96
    factor                         shift and go to state 97
    factoraux                      shift and go to state 98
    varcte                         shift and go to state 99

state 85

    (96) while -> WHILE seen_while . LEFTPARENTHESES expresion RIGHTPARENTHESES seen_right_parentheses_while bloque SEMICOLON seen_end_while

    LEFTPARENTHESES shift and go to state 105


state 86

    (100) functionCall -> ID seen_fCall_id . LEFTPARENTHESES seen_leftp_fCall paramsFunctionCall seen_end_paramsFCall RIGHTPARENTHESES seen_rightp_fCall SEMICOLON

    LEFTPARENTHESES shift and go to state 106


state 87

    (84) varcte -> ID seen_ID .

    EQUALS          reduce using rule 84 (varcte -> ID seen_ID .)
    DIVIDE          reduce using rule 84 (varcte -> ID seen_ID .)
    MULTIPLY        reduce using rule 84 (varcte -> ID seen_ID .)
    PLUS            reduce using rule 84 (varcte -> ID seen_ID .)
    MINUS           reduce using rule 84 (varcte -> ID seen_ID .)
    GREATERTHAN     reduce using rule 84 (varcte -> ID seen_ID .)
    LESSTHAN        reduce using rule 84 (varcte -> ID seen_ID .)
    NOTEQUALS       reduce using rule 84 (varcte -> ID seen_ID .)
    LEFTPARENTHESES reduce using rule 84 (varcte -> ID seen_ID .)
    ID              reduce using rule 84 (varcte -> ID seen_ID .)
    INT_CTE         reduce using rule 84 (varcte -> ID seen_ID .)
    FLOAT_CTE       reduce using rule 84 (varcte -> ID seen_ID .)
    RIGHTPARENTHESES reduce using rule 84 (varcte -> ID seen_ID .)
    COMMA           reduce using rule 84 (varcte -> ID seen_ID .)
    SEMICOLON       reduce using rule 84 (varcte -> ID seen_ID .)


state 88

    (85) varcte -> INT_CTE seen_CTE_INT .

    EQUALS          reduce using rule 85 (varcte -> INT_CTE seen_CTE_INT .)
    DIVIDE          reduce using rule 85 (varcte -> INT_CTE seen_CTE_INT .)
    MULTIPLY        reduce using rule 85 (varcte -> INT_CTE seen_CTE_INT .)
    PLUS            reduce using rule 85 (varcte -> INT_CTE seen_CTE_INT .)
    MINUS           reduce using rule 85 (varcte -> INT_CTE seen_CTE_INT .)
    GREATERTHAN     reduce using rule 85 (varcte -> INT_CTE seen_CTE_INT .)
    LESSTHAN        reduce using rule 85 (varcte -> INT_CTE seen_CTE_INT .)
    NOTEQUALS       reduce using rule 85 (varcte -> INT_CTE seen_CTE_INT .)
    LEFTPARENTHESES reduce using rule 85 (varcte -> INT_CTE seen_CTE_INT .)
    ID              reduce using rule 85 (varcte -> INT_CTE seen_CTE_INT .)
    INT_CTE         reduce using rule 85 (varcte -> INT_CTE seen_CTE_INT .)
    FLOAT_CTE       reduce using rule 85 (varcte -> INT_CTE seen_CTE_INT .)
    RIGHTPARENTHESES reduce using rule 85 (varcte -> INT_CTE seen_CTE_INT .)
    COMMA           reduce using rule 85 (varcte -> INT_CTE seen_CTE_INT .)
    SEMICOLON       reduce using rule 85 (varcte -> INT_CTE seen_CTE_INT .)


state 89

    (86) varcte -> FLOAT_CTE seen_CTE_FLOAT .

    EQUALS          reduce using rule 86 (varcte -> FLOAT_CTE seen_CTE_FLOAT .)
    DIVIDE          reduce using rule 86 (varcte -> FLOAT_CTE seen_CTE_FLOAT .)
    MULTIPLY        reduce using rule 86 (varcte -> FLOAT_CTE seen_CTE_FLOAT .)
    PLUS            reduce using rule 86 (varcte -> FLOAT_CTE seen_CTE_FLOAT .)
    MINUS           reduce using rule 86 (varcte -> FLOAT_CTE seen_CTE_FLOAT .)
    GREATERTHAN     reduce using rule 86 (varcte -> FLOAT_CTE seen_CTE_FLOAT .)
    LESSTHAN        reduce using rule 86 (varcte -> FLOAT_CTE seen_CTE_FLOAT .)
    NOTEQUALS       reduce using rule 86 (varcte -> FLOAT_CTE seen_CTE_FLOAT .)
    LEFTPARENTHESES reduce using rule 86 (varcte -> FLOAT_CTE seen_CTE_FLOAT .)
    ID              reduce using rule 86 (varcte -> FLOAT_CTE seen_CTE_FLOAT .)
    INT_CTE         reduce using rule 86 (varcte -> FLOAT_CTE seen_CTE_FLOAT .)
    FLOAT_CTE       reduce using rule 86 (varcte -> FLOAT_CTE seen_CTE_FLOAT .)
    RIGHTPARENTHESES reduce using rule 86 (varcte -> FLOAT_CTE seen_CTE_FLOAT .)
    COMMA           reduce using rule 86 (varcte -> FLOAT_CTE seen_CTE_FLOAT .)
    SEMICOLON       reduce using rule 86 (varcte -> FLOAT_CTE seen_CTE_FLOAT .)


state 90

    (39) paramsaux -> tipo ID seen_ID_params paramsaux .

    RIGHTPARENTHESES reduce using rule 39 (paramsaux -> tipo ID seen_ID_params paramsaux .)


state 91

    (12) arrayDimesionAux -> INT_CTE seen_lim_inf INT_CTE seen_lim_sup .
    (13) arrayDimesionAux -> INT_CTE seen_lim_inf INT_CTE seen_lim_sup . COMMA seen_extra_dimension_array arrayDimesionAux

    RIGHTBRACKET    reduce using rule 12 (arrayDimesionAux -> INT_CTE seen_lim_inf INT_CTE seen_lim_sup .)
    COMMA           shift and go to state 107


state 92

    (52) asignacion -> varcte EQUALS seen_equals . expresion seen_final_asignacion SEMICOLON
    (55) expresion -> . exp seen_comparacion
    (56) expresion -> . exp seen_comparacion expresionaux exp seen_comparacion
    (67) exp -> . termino seen_termino
    (68) exp -> . termino seen_termino expaux
    (71) termino -> . factor seen_factor
    (72) termino -> . factor seen_factor terminoaux
    (81) factor -> . factoraux
    (82) factor -> . varcte
    (83) factoraux -> . LEFTPARENTHESES seen_insert_fondo expresion RIGHTPARENTHESES seen_remove_fondo
    (84) varcte -> . ID seen_ID
    (85) varcte -> . INT_CTE seen_CTE_INT
    (86) varcte -> . FLOAT_CTE seen_CTE_FLOAT

    LEFTPARENTHESES shift and go to state 93
    ID              shift and go to state 100
    INT_CTE         shift and go to state 75
    FLOAT_CTE       shift and go to state 76

    varcte                         shift and go to state 99
    expresion                      shift and go to state 108
    exp                            shift and go to state 95
    termino                        shift and go to state 96
    factor                         shift and go to state 97
    factoraux                      shift and go to state 98

state 93

    (83) factoraux -> LEFTPARENTHESES . seen_insert_fondo expresion RIGHTPARENTHESES seen_remove_fondo
    (89) seen_insert_fondo -> .

    LEFTPARENTHESES reduce using rule 89 (seen_insert_fondo -> .)
    ID              reduce using rule 89 (seen_insert_fondo -> .)
    INT_CTE         reduce using rule 89 (seen_insert_fondo -> .)
    FLOAT_CTE       reduce using rule 89 (seen_insert_fondo -> .)

    seen_insert_fondo              shift and go to state 109

state 94

    (75) condicion -> IF LEFTPARENTHESES expresion . RIGHTPARENTHESES seen_right_parentheses_condicion bloque condicionaux

    RIGHTPARENTHESES shift and go to state 110


state 95

    (55) expresion -> exp . seen_comparacion
    (56) expresion -> exp . seen_comparacion expresionaux exp seen_comparacion
    (95) seen_comparacion -> .

    GREATERTHAN     reduce using rule 95 (seen_comparacion -> .)
    LESSTHAN        reduce using rule 95 (seen_comparacion -> .)
    NOTEQUALS       reduce using rule 95 (seen_comparacion -> .)
    LEFTPARENTHESES reduce using rule 95 (seen_comparacion -> .)
    ID              reduce using rule 95 (seen_comparacion -> .)
    INT_CTE         reduce using rule 95 (seen_comparacion -> .)
    FLOAT_CTE       reduce using rule 95 (seen_comparacion -> .)
    RIGHTPARENTHESES reduce using rule 95 (seen_comparacion -> .)
    COMMA           reduce using rule 95 (seen_comparacion -> .)
    SEMICOLON       reduce using rule 95 (seen_comparacion -> .)

    seen_comparacion               shift and go to state 111

state 96

    (67) exp -> termino . seen_termino
    (68) exp -> termino . seen_termino expaux
    (93) seen_termino -> .

    PLUS            reduce using rule 93 (seen_termino -> .)
    MINUS           reduce using rule 93 (seen_termino -> .)
    GREATERTHAN     reduce using rule 93 (seen_termino -> .)
    LESSTHAN        reduce using rule 93 (seen_termino -> .)
    NOTEQUALS       reduce using rule 93 (seen_termino -> .)
    LEFTPARENTHESES reduce using rule 93 (seen_termino -> .)
    ID              reduce using rule 93 (seen_termino -> .)
    INT_CTE         reduce using rule 93 (seen_termino -> .)
    FLOAT_CTE       reduce using rule 93 (seen_termino -> .)
    RIGHTPARENTHESES reduce using rule 93 (seen_termino -> .)
    COMMA           reduce using rule 93 (seen_termino -> .)
    SEMICOLON       reduce using rule 93 (seen_termino -> .)

    seen_termino                   shift and go to state 112

state 97

    (71) termino -> factor . seen_factor
    (72) termino -> factor . seen_factor terminoaux
    (94) seen_factor -> .

    DIVIDE          reduce using rule 94 (seen_factor -> .)
    MULTIPLY        reduce using rule 94 (seen_factor -> .)
    PLUS            reduce using rule 94 (seen_factor -> .)
    MINUS           reduce using rule 94 (seen_factor -> .)
    GREATERTHAN     reduce using rule 94 (seen_factor -> .)
    LESSTHAN        reduce using rule 94 (seen_factor -> .)
    NOTEQUALS       reduce using rule 94 (seen_factor -> .)
    LEFTPARENTHESES reduce using rule 94 (seen_factor -> .)
    ID              reduce using rule 94 (seen_factor -> .)
    INT_CTE         reduce using rule 94 (seen_factor -> .)
    FLOAT_CTE       reduce using rule 94 (seen_factor -> .)
    RIGHTPARENTHESES reduce using rule 94 (seen_factor -> .)
    COMMA           reduce using rule 94 (seen_factor -> .)
    SEMICOLON       reduce using rule 94 (seen_factor -> .)

    seen_factor                    shift and go to state 113

state 98

    (81) factor -> factoraux .

    DIVIDE          reduce using rule 81 (factor -> factoraux .)
    MULTIPLY        reduce using rule 81 (factor -> factoraux .)
    PLUS            reduce using rule 81 (factor -> factoraux .)
    MINUS           reduce using rule 81 (factor -> factoraux .)
    GREATERTHAN     reduce using rule 81 (factor -> factoraux .)
    LESSTHAN        reduce using rule 81 (factor -> factoraux .)
    NOTEQUALS       reduce using rule 81 (factor -> factoraux .)
    LEFTPARENTHESES reduce using rule 81 (factor -> factoraux .)
    ID              reduce using rule 81 (factor -> factoraux .)
    INT_CTE         reduce using rule 81 (factor -> factoraux .)
    FLOAT_CTE       reduce using rule 81 (factor -> factoraux .)
    RIGHTPARENTHESES reduce using rule 81 (factor -> factoraux .)
    COMMA           reduce using rule 81 (factor -> factoraux .)
    SEMICOLON       reduce using rule 81 (factor -> factoraux .)


state 99

    (82) factor -> varcte .

    DIVIDE          reduce using rule 82 (factor -> varcte .)
    MULTIPLY        reduce using rule 82 (factor -> varcte .)
    PLUS            reduce using rule 82 (factor -> varcte .)
    MINUS           reduce using rule 82 (factor -> varcte .)
    GREATERTHAN     reduce using rule 82 (factor -> varcte .)
    LESSTHAN        reduce using rule 82 (factor -> varcte .)
    NOTEQUALS       reduce using rule 82 (factor -> varcte .)
    LEFTPARENTHESES reduce using rule 82 (factor -> varcte .)
    ID              reduce using rule 82 (factor -> varcte .)
    INT_CTE         reduce using rule 82 (factor -> varcte .)
    FLOAT_CTE       reduce using rule 82 (factor -> varcte .)
    RIGHTPARENTHESES reduce using rule 82 (factor -> varcte .)
    COMMA           reduce using rule 82 (factor -> varcte .)
    SEMICOLON       reduce using rule 82 (factor -> varcte .)


state 100

    (84) varcte -> ID . seen_ID
    (91) seen_ID -> .

    DIVIDE          reduce using rule 91 (seen_ID -> .)
    MULTIPLY        reduce using rule 91 (seen_ID -> .)
    PLUS            reduce using rule 91 (seen_ID -> .)
    MINUS           reduce using rule 91 (seen_ID -> .)
    GREATERTHAN     reduce using rule 91 (seen_ID -> .)
    LESSTHAN        reduce using rule 91 (seen_ID -> .)
    NOTEQUALS       reduce using rule 91 (seen_ID -> .)
    LEFTPARENTHESES reduce using rule 91 (seen_ID -> .)
    ID              reduce using rule 91 (seen_ID -> .)
    INT_CTE         reduce using rule 91 (seen_ID -> .)
    FLOAT_CTE       reduce using rule 91 (seen_ID -> .)
    RIGHTPARENTHESES reduce using rule 91 (seen_ID -> .)
    COMMA           reduce using rule 91 (seen_ID -> .)
    SEMICOLON       reduce using rule 91 (seen_ID -> .)

    seen_ID                        shift and go to state 87

state 101

    (61) escritura -> PRINT LEFTPARENTHESES escrituraaux . RIGHTPARENTHESES SEMICOLON

    RIGHTPARENTHESES shift and go to state 114


state 102

    (62) escrituraaux -> escrituraaux2 .
    (63) escrituraaux -> escrituraaux2 . COMMA escrituraaux

    RIGHTPARENTHESES reduce using rule 62 (escrituraaux -> escrituraaux2 .)
    COMMA           shift and go to state 115


state 103

    (64) escrituraaux2 -> expresion . seen_print_cuadruplo
    (66) seen_print_cuadruplo -> .

    COMMA           reduce using rule 66 (seen_print_cuadruplo -> .)
    RIGHTPARENTHESES reduce using rule 66 (seen_print_cuadruplo -> .)

    seen_print_cuadruplo           shift and go to state 116

state 104

    (65) escrituraaux2 -> STRING_CTE . seen_print_cuadruplo
    (66) seen_print_cuadruplo -> .

    COMMA           reduce using rule 66 (seen_print_cuadruplo -> .)
    RIGHTPARENTHESES reduce using rule 66 (seen_print_cuadruplo -> .)

    seen_print_cuadruplo           shift and go to state 117

state 105

    (96) while -> WHILE seen_while LEFTPARENTHESES . expresion RIGHTPARENTHESES seen_right_parentheses_while bloque SEMICOLON seen_end_while
    (55) expresion -> . exp seen_comparacion
    (56) expresion -> . exp seen_comparacion expresionaux exp seen_comparacion
    (67) exp -> . termino seen_termino
    (68) exp -> . termino seen_termino expaux
    (71) termino -> . factor seen_factor
    (72) termino -> . factor seen_factor terminoaux
    (81) factor -> . factoraux
    (82) factor -> . varcte
    (83) factoraux -> . LEFTPARENTHESES seen_insert_fondo expresion RIGHTPARENTHESES seen_remove_fondo
    (84) varcte -> . ID seen_ID
    (85) varcte -> . INT_CTE seen_CTE_INT
    (86) varcte -> . FLOAT_CTE seen_CTE_FLOAT

    LEFTPARENTHESES shift and go to state 93
    ID              shift and go to state 100
    INT_CTE         shift and go to state 75
    FLOAT_CTE       shift and go to state 76

    expresion                      shift and go to state 118
    exp                            shift and go to state 95
    termino                        shift and go to state 96
    factor                         shift and go to state 97
    factoraux                      shift and go to state 98
    varcte                         shift and go to state 99

state 106

    (100) functionCall -> ID seen_fCall_id LEFTPARENTHESES . seen_leftp_fCall paramsFunctionCall seen_end_paramsFCall RIGHTPARENTHESES seen_rightp_fCall SEMICOLON
    (102) seen_leftp_fCall -> .

    LEFTPARENTHESES reduce using rule 102 (seen_leftp_fCall -> .)
    ID              reduce using rule 102 (seen_leftp_fCall -> .)
    INT_CTE         reduce using rule 102 (seen_leftp_fCall -> .)
    FLOAT_CTE       reduce using rule 102 (seen_leftp_fCall -> .)

    seen_leftp_fCall               shift and go to state 119

state 107

    (13) arrayDimesionAux -> INT_CTE seen_lim_inf INT_CTE seen_lim_sup COMMA . seen_extra_dimension_array arrayDimesionAux
    (14) seen_extra_dimension_array -> .

    INT_CTE         reduce using rule 14 (seen_extra_dimension_array -> .)

    seen_extra_dimension_array     shift and go to state 120

state 108

    (52) asignacion -> varcte EQUALS seen_equals expresion . seen_final_asignacion SEMICOLON
    (54) seen_final_asignacion -> .

    SEMICOLON       reduce using rule 54 (seen_final_asignacion -> .)

    seen_final_asignacion          shift and go to state 121

state 109

    (83) factoraux -> LEFTPARENTHESES seen_insert_fondo . expresion RIGHTPARENTHESES seen_remove_fondo
    (55) expresion -> . exp seen_comparacion
    (56) expresion -> . exp seen_comparacion expresionaux exp seen_comparacion
    (67) exp -> . termino seen_termino
    (68) exp -> . termino seen_termino expaux
    (71) termino -> . factor seen_factor
    (72) termino -> . factor seen_factor terminoaux
    (81) factor -> . factoraux
    (82) factor -> . varcte
    (83) factoraux -> . LEFTPARENTHESES seen_insert_fondo expresion RIGHTPARENTHESES seen_remove_fondo
    (84) varcte -> . ID seen_ID
    (85) varcte -> . INT_CTE seen_CTE_INT
    (86) varcte -> . FLOAT_CTE seen_CTE_FLOAT

    LEFTPARENTHESES shift and go to state 93
    ID              shift and go to state 100
    INT_CTE         shift and go to state 75
    FLOAT_CTE       shift and go to state 76

    expresion                      shift and go to state 122
    exp                            shift and go to state 95
    termino                        shift and go to state 96
    factor                         shift and go to state 97
    factoraux                      shift and go to state 98
    varcte                         shift and go to state 99

state 110

    (75) condicion -> IF LEFTPARENTHESES expresion RIGHTPARENTHESES . seen_right_parentheses_condicion bloque condicionaux
    (78) seen_right_parentheses_condicion -> .

    LEFTBRACE       reduce using rule 78 (seen_right_parentheses_condicion -> .)

    seen_right_parentheses_condicion shift and go to state 123

state 111

    (55) expresion -> exp seen_comparacion .
    (56) expresion -> exp seen_comparacion . expresionaux exp seen_comparacion
    (57) expresionaux -> . GREATERTHAN seen_operador
    (58) expresionaux -> . LESSTHAN seen_operador
    (59) expresionaux -> . NOTEQUALS seen_operador
    (60) expresionaux -> .

    RIGHTPARENTHESES reduce using rule 55 (expresion -> exp seen_comparacion .)
    COMMA           reduce using rule 55 (expresion -> exp seen_comparacion .)
    SEMICOLON       reduce using rule 55 (expresion -> exp seen_comparacion .)
    GREATERTHAN     shift and go to state 125
    LESSTHAN        shift and go to state 126
    NOTEQUALS       shift and go to state 127
    LEFTPARENTHESES reduce using rule 60 (expresionaux -> .)
    ID              reduce using rule 60 (expresionaux -> .)
    INT_CTE         reduce using rule 60 (expresionaux -> .)
    FLOAT_CTE       reduce using rule 60 (expresionaux -> .)

    expresionaux                   shift and go to state 124

state 112

    (67) exp -> termino seen_termino .
    (68) exp -> termino seen_termino . expaux
    (69) expaux -> . PLUS seen_operador exp
    (70) expaux -> . MINUS seen_operador exp

    GREATERTHAN     reduce using rule 67 (exp -> termino seen_termino .)
    LESSTHAN        reduce using rule 67 (exp -> termino seen_termino .)
    NOTEQUALS       reduce using rule 67 (exp -> termino seen_termino .)
    LEFTPARENTHESES reduce using rule 67 (exp -> termino seen_termino .)
    ID              reduce using rule 67 (exp -> termino seen_termino .)
    INT_CTE         reduce using rule 67 (exp -> termino seen_termino .)
    FLOAT_CTE       reduce using rule 67 (exp -> termino seen_termino .)
    RIGHTPARENTHESES reduce using rule 67 (exp -> termino seen_termino .)
    COMMA           reduce using rule 67 (exp -> termino seen_termino .)
    SEMICOLON       reduce using rule 67 (exp -> termino seen_termino .)
    PLUS            shift and go to state 129
    MINUS           shift and go to state 130

    expaux                         shift and go to state 128

state 113

    (71) termino -> factor seen_factor .
    (72) termino -> factor seen_factor . terminoaux
    (73) terminoaux -> . DIVIDE seen_operador termino
    (74) terminoaux -> . MULTIPLY seen_operador termino

    PLUS            reduce using rule 71 (termino -> factor seen_factor .)
    MINUS           reduce using rule 71 (termino -> factor seen_factor .)
    GREATERTHAN     reduce using rule 71 (termino -> factor seen_factor .)
    LESSTHAN        reduce using rule 71 (termino -> factor seen_factor .)
    NOTEQUALS       reduce using rule 71 (termino -> factor seen_factor .)
    LEFTPARENTHESES reduce using rule 71 (termino -> factor seen_factor .)
    ID              reduce using rule 71 (termino -> factor seen_factor .)
    INT_CTE         reduce using rule 71 (termino -> factor seen_factor .)
    FLOAT_CTE       reduce using rule 71 (termino -> factor seen_factor .)
    RIGHTPARENTHESES reduce using rule 71 (termino -> factor seen_factor .)
    COMMA           reduce using rule 71 (termino -> factor seen_factor .)
    SEMICOLON       reduce using rule 71 (termino -> factor seen_factor .)
    DIVIDE          shift and go to state 132
    MULTIPLY        shift and go to state 133

    terminoaux                     shift and go to state 131

state 114

    (61) escritura -> PRINT LEFTPARENTHESES escrituraaux RIGHTPARENTHESES . SEMICOLON

    SEMICOLON       shift and go to state 134


state 115

    (63) escrituraaux -> escrituraaux2 COMMA . escrituraaux
    (62) escrituraaux -> . escrituraaux2
    (63) escrituraaux -> . escrituraaux2 COMMA escrituraaux
    (64) escrituraaux2 -> . expresion seen_print_cuadruplo
    (65) escrituraaux2 -> . STRING_CTE seen_print_cuadruplo
    (55) expresion -> . exp seen_comparacion
    (56) expresion -> . exp seen_comparacion expresionaux exp seen_comparacion
    (67) exp -> . termino seen_termino
    (68) exp -> . termino seen_termino expaux
    (71) termino -> . factor seen_factor
    (72) termino -> . factor seen_factor terminoaux
    (81) factor -> . factoraux
    (82) factor -> . varcte
    (83) factoraux -> . LEFTPARENTHESES seen_insert_fondo expresion RIGHTPARENTHESES seen_remove_fondo
    (84) varcte -> . ID seen_ID
    (85) varcte -> . INT_CTE seen_CTE_INT
    (86) varcte -> . FLOAT_CTE seen_CTE_FLOAT

    STRING_CTE      shift and go to state 104
    LEFTPARENTHESES shift and go to state 93
    ID              shift and go to state 100
    INT_CTE         shift and go to state 75
    FLOAT_CTE       shift and go to state 76

    escrituraaux2                  shift and go to state 102
    escrituraaux                   shift and go to state 135
    expresion                      shift and go to state 103
    exp                            shift and go to state 95
    termino                        shift and go to state 96
    factor                         shift and go to state 97
    factoraux                      shift and go to state 98
    varcte                         shift and go to state 99

state 116

    (64) escrituraaux2 -> expresion seen_print_cuadruplo .

    COMMA           reduce using rule 64 (escrituraaux2 -> expresion seen_print_cuadruplo .)
    RIGHTPARENTHESES reduce using rule 64 (escrituraaux2 -> expresion seen_print_cuadruplo .)


state 117

    (65) escrituraaux2 -> STRING_CTE seen_print_cuadruplo .

    COMMA           reduce using rule 65 (escrituraaux2 -> STRING_CTE seen_print_cuadruplo .)
    RIGHTPARENTHESES reduce using rule 65 (escrituraaux2 -> STRING_CTE seen_print_cuadruplo .)


state 118

    (96) while -> WHILE seen_while LEFTPARENTHESES expresion . RIGHTPARENTHESES seen_right_parentheses_while bloque SEMICOLON seen_end_while

    RIGHTPARENTHESES shift and go to state 136


state 119

    (100) functionCall -> ID seen_fCall_id LEFTPARENTHESES seen_leftp_fCall . paramsFunctionCall seen_end_paramsFCall RIGHTPARENTHESES seen_rightp_fCall SEMICOLON
    (103) paramsFunctionCall -> . expresion seen_parameter_fCall COMMA seen_comma_params_fCall paramsFunctionCall
    (104) paramsFunctionCall -> . expresion seen_parameter_fCall
    (55) expresion -> . exp seen_comparacion
    (56) expresion -> . exp seen_comparacion expresionaux exp seen_comparacion
    (67) exp -> . termino seen_termino
    (68) exp -> . termino seen_termino expaux
    (71) termino -> . factor seen_factor
    (72) termino -> . factor seen_factor terminoaux
    (81) factor -> . factoraux
    (82) factor -> . varcte
    (83) factoraux -> . LEFTPARENTHESES seen_insert_fondo expresion RIGHTPARENTHESES seen_remove_fondo
    (84) varcte -> . ID seen_ID
    (85) varcte -> . INT_CTE seen_CTE_INT
    (86) varcte -> . FLOAT_CTE seen_CTE_FLOAT

    LEFTPARENTHESES shift and go to state 93
    ID              shift and go to state 100
    INT_CTE         shift and go to state 75
    FLOAT_CTE       shift and go to state 76

    paramsFunctionCall             shift and go to state 137
    expresion                      shift and go to state 138
    exp                            shift and go to state 95
    termino                        shift and go to state 96
    factor                         shift and go to state 97
    factoraux                      shift and go to state 98
    varcte                         shift and go to state 99

state 120

    (13) arrayDimesionAux -> INT_CTE seen_lim_inf INT_CTE seen_lim_sup COMMA seen_extra_dimension_array . arrayDimesionAux
    (12) arrayDimesionAux -> . INT_CTE seen_lim_inf INT_CTE seen_lim_sup
    (13) arrayDimesionAux -> . INT_CTE seen_lim_inf INT_CTE seen_lim_sup COMMA seen_extra_dimension_array arrayDimesionAux

    INT_CTE         shift and go to state 56

    arrayDimesionAux               shift and go to state 139

state 121

    (52) asignacion -> varcte EQUALS seen_equals expresion seen_final_asignacion . SEMICOLON

    SEMICOLON       shift and go to state 140


state 122

    (83) factoraux -> LEFTPARENTHESES seen_insert_fondo expresion . RIGHTPARENTHESES seen_remove_fondo

    RIGHTPARENTHESES shift and go to state 141


state 123

    (75) condicion -> IF LEFTPARENTHESES expresion RIGHTPARENTHESES seen_right_parentheses_condicion . bloque condicionaux
    (43) bloque -> . LEFTBRACE vars seen_start_bloqueaux bloqueaux RIGHTBRACE

    LEFTBRACE       shift and go to state 44

    bloque                         shift and go to state 142

state 124

    (56) expresion -> exp seen_comparacion expresionaux . exp seen_comparacion
    (67) exp -> . termino seen_termino
    (68) exp -> . termino seen_termino expaux
    (71) termino -> . factor seen_factor
    (72) termino -> . factor seen_factor terminoaux
    (81) factor -> . factoraux
    (82) factor -> . varcte
    (83) factoraux -> . LEFTPARENTHESES seen_insert_fondo expresion RIGHTPARENTHESES seen_remove_fondo
    (84) varcte -> . ID seen_ID
    (85) varcte -> . INT_CTE seen_CTE_INT
    (86) varcte -> . FLOAT_CTE seen_CTE_FLOAT

    LEFTPARENTHESES shift and go to state 93
    ID              shift and go to state 100
    INT_CTE         shift and go to state 75
    FLOAT_CTE       shift and go to state 76

    exp                            shift and go to state 143
    termino                        shift and go to state 96
    factor                         shift and go to state 97
    factoraux                      shift and go to state 98
    varcte                         shift and go to state 99

state 125

    (57) expresionaux -> GREATERTHAN . seen_operador
    (92) seen_operador -> .

    LEFTPARENTHESES reduce using rule 92 (seen_operador -> .)
    ID              reduce using rule 92 (seen_operador -> .)
    INT_CTE         reduce using rule 92 (seen_operador -> .)
    FLOAT_CTE       reduce using rule 92 (seen_operador -> .)

    seen_operador                  shift and go to state 144

state 126

    (58) expresionaux -> LESSTHAN . seen_operador
    (92) seen_operador -> .

    LEFTPARENTHESES reduce using rule 92 (seen_operador -> .)
    ID              reduce using rule 92 (seen_operador -> .)
    INT_CTE         reduce using rule 92 (seen_operador -> .)
    FLOAT_CTE       reduce using rule 92 (seen_operador -> .)

    seen_operador                  shift and go to state 145

state 127

    (59) expresionaux -> NOTEQUALS . seen_operador
    (92) seen_operador -> .

    LEFTPARENTHESES reduce using rule 92 (seen_operador -> .)
    ID              reduce using rule 92 (seen_operador -> .)
    INT_CTE         reduce using rule 92 (seen_operador -> .)
    FLOAT_CTE       reduce using rule 92 (seen_operador -> .)

    seen_operador                  shift and go to state 146

state 128

    (68) exp -> termino seen_termino expaux .

    GREATERTHAN     reduce using rule 68 (exp -> termino seen_termino expaux .)
    LESSTHAN        reduce using rule 68 (exp -> termino seen_termino expaux .)
    NOTEQUALS       reduce using rule 68 (exp -> termino seen_termino expaux .)
    LEFTPARENTHESES reduce using rule 68 (exp -> termino seen_termino expaux .)
    ID              reduce using rule 68 (exp -> termino seen_termino expaux .)
    INT_CTE         reduce using rule 68 (exp -> termino seen_termino expaux .)
    FLOAT_CTE       reduce using rule 68 (exp -> termino seen_termino expaux .)
    RIGHTPARENTHESES reduce using rule 68 (exp -> termino seen_termino expaux .)
    COMMA           reduce using rule 68 (exp -> termino seen_termino expaux .)
    SEMICOLON       reduce using rule 68 (exp -> termino seen_termino expaux .)


state 129

    (69) expaux -> PLUS . seen_operador exp
    (92) seen_operador -> .

    LEFTPARENTHESES reduce using rule 92 (seen_operador -> .)
    ID              reduce using rule 92 (seen_operador -> .)
    INT_CTE         reduce using rule 92 (seen_operador -> .)
    FLOAT_CTE       reduce using rule 92 (seen_operador -> .)

    seen_operador                  shift and go to state 147

state 130

    (70) expaux -> MINUS . seen_operador exp
    (92) seen_operador -> .

    LEFTPARENTHESES reduce using rule 92 (seen_operador -> .)
    ID              reduce using rule 92 (seen_operador -> .)
    INT_CTE         reduce using rule 92 (seen_operador -> .)
    FLOAT_CTE       reduce using rule 92 (seen_operador -> .)

    seen_operador                  shift and go to state 148

state 131

    (72) termino -> factor seen_factor terminoaux .

    PLUS            reduce using rule 72 (termino -> factor seen_factor terminoaux .)
    MINUS           reduce using rule 72 (termino -> factor seen_factor terminoaux .)
    GREATERTHAN     reduce using rule 72 (termino -> factor seen_factor terminoaux .)
    LESSTHAN        reduce using rule 72 (termino -> factor seen_factor terminoaux .)
    NOTEQUALS       reduce using rule 72 (termino -> factor seen_factor terminoaux .)
    LEFTPARENTHESES reduce using rule 72 (termino -> factor seen_factor terminoaux .)
    ID              reduce using rule 72 (termino -> factor seen_factor terminoaux .)
    INT_CTE         reduce using rule 72 (termino -> factor seen_factor terminoaux .)
    FLOAT_CTE       reduce using rule 72 (termino -> factor seen_factor terminoaux .)
    RIGHTPARENTHESES reduce using rule 72 (termino -> factor seen_factor terminoaux .)
    COMMA           reduce using rule 72 (termino -> factor seen_factor terminoaux .)
    SEMICOLON       reduce using rule 72 (termino -> factor seen_factor terminoaux .)


state 132

    (73) terminoaux -> DIVIDE . seen_operador termino
    (92) seen_operador -> .

    LEFTPARENTHESES reduce using rule 92 (seen_operador -> .)
    ID              reduce using rule 92 (seen_operador -> .)
    INT_CTE         reduce using rule 92 (seen_operador -> .)
    FLOAT_CTE       reduce using rule 92 (seen_operador -> .)

    seen_operador                  shift and go to state 149

state 133

    (74) terminoaux -> MULTIPLY . seen_operador termino
    (92) seen_operador -> .

    LEFTPARENTHESES reduce using rule 92 (seen_operador -> .)
    ID              reduce using rule 92 (seen_operador -> .)
    INT_CTE         reduce using rule 92 (seen_operador -> .)
    FLOAT_CTE       reduce using rule 92 (seen_operador -> .)

    seen_operador                  shift and go to state 150

state 134

    (61) escritura -> PRINT LEFTPARENTHESES escrituraaux RIGHTPARENTHESES SEMICOLON .

    IF              reduce using rule 61 (escritura -> PRINT LEFTPARENTHESES escrituraaux RIGHTPARENTHESES SEMICOLON .)
    PRINT           reduce using rule 61 (escritura -> PRINT LEFTPARENTHESES escrituraaux RIGHTPARENTHESES SEMICOLON .)
    WHILE           reduce using rule 61 (escritura -> PRINT LEFTPARENTHESES escrituraaux RIGHTPARENTHESES SEMICOLON .)
    ID              reduce using rule 61 (escritura -> PRINT LEFTPARENTHESES escrituraaux RIGHTPARENTHESES SEMICOLON .)
    INT_CTE         reduce using rule 61 (escritura -> PRINT LEFTPARENTHESES escrituraaux RIGHTPARENTHESES SEMICOLON .)
    FLOAT_CTE       reduce using rule 61 (escritura -> PRINT LEFTPARENTHESES escrituraaux RIGHTPARENTHESES SEMICOLON .)
    RIGHTBRACE      reduce using rule 61 (escritura -> PRINT LEFTPARENTHESES escrituraaux RIGHTPARENTHESES SEMICOLON .)


state 135

    (63) escrituraaux -> escrituraaux2 COMMA escrituraaux .

    RIGHTPARENTHESES reduce using rule 63 (escrituraaux -> escrituraaux2 COMMA escrituraaux .)


state 136

    (96) while -> WHILE seen_while LEFTPARENTHESES expresion RIGHTPARENTHESES . seen_right_parentheses_while bloque SEMICOLON seen_end_while
    (98) seen_right_parentheses_while -> .

    LEFTBRACE       reduce using rule 98 (seen_right_parentheses_while -> .)

    seen_right_parentheses_while   shift and go to state 151

state 137

    (100) functionCall -> ID seen_fCall_id LEFTPARENTHESES seen_leftp_fCall paramsFunctionCall . seen_end_paramsFCall RIGHTPARENTHESES seen_rightp_fCall SEMICOLON
    (107) seen_end_paramsFCall -> .

    RIGHTPARENTHESES reduce using rule 107 (seen_end_paramsFCall -> .)

    seen_end_paramsFCall           shift and go to state 152

state 138

    (103) paramsFunctionCall -> expresion . seen_parameter_fCall COMMA seen_comma_params_fCall paramsFunctionCall
    (104) paramsFunctionCall -> expresion . seen_parameter_fCall
    (105) seen_parameter_fCall -> .

    COMMA           reduce using rule 105 (seen_parameter_fCall -> .)
    RIGHTPARENTHESES reduce using rule 105 (seen_parameter_fCall -> .)

    seen_parameter_fCall           shift and go to state 153

state 139

    (13) arrayDimesionAux -> INT_CTE seen_lim_inf INT_CTE seen_lim_sup COMMA seen_extra_dimension_array arrayDimesionAux .

    RIGHTBRACKET    reduce using rule 13 (arrayDimesionAux -> INT_CTE seen_lim_inf INT_CTE seen_lim_sup COMMA seen_extra_dimension_array arrayDimesionAux .)


state 140

    (52) asignacion -> varcte EQUALS seen_equals expresion seen_final_asignacion SEMICOLON .

    IF              reduce using rule 52 (asignacion -> varcte EQUALS seen_equals expresion seen_final_asignacion SEMICOLON .)
    PRINT           reduce using rule 52 (asignacion -> varcte EQUALS seen_equals expresion seen_final_asignacion SEMICOLON .)
    WHILE           reduce using rule 52 (asignacion -> varcte EQUALS seen_equals expresion seen_final_asignacion SEMICOLON .)
    ID              reduce using rule 52 (asignacion -> varcte EQUALS seen_equals expresion seen_final_asignacion SEMICOLON .)
    INT_CTE         reduce using rule 52 (asignacion -> varcte EQUALS seen_equals expresion seen_final_asignacion SEMICOLON .)
    FLOAT_CTE       reduce using rule 52 (asignacion -> varcte EQUALS seen_equals expresion seen_final_asignacion SEMICOLON .)
    RIGHTBRACE      reduce using rule 52 (asignacion -> varcte EQUALS seen_equals expresion seen_final_asignacion SEMICOLON .)


state 141

    (83) factoraux -> LEFTPARENTHESES seen_insert_fondo expresion RIGHTPARENTHESES . seen_remove_fondo
    (90) seen_remove_fondo -> .

    DIVIDE          reduce using rule 90 (seen_remove_fondo -> .)
    MULTIPLY        reduce using rule 90 (seen_remove_fondo -> .)
    PLUS            reduce using rule 90 (seen_remove_fondo -> .)
    MINUS           reduce using rule 90 (seen_remove_fondo -> .)
    GREATERTHAN     reduce using rule 90 (seen_remove_fondo -> .)
    LESSTHAN        reduce using rule 90 (seen_remove_fondo -> .)
    NOTEQUALS       reduce using rule 90 (seen_remove_fondo -> .)
    LEFTPARENTHESES reduce using rule 90 (seen_remove_fondo -> .)
    ID              reduce using rule 90 (seen_remove_fondo -> .)
    INT_CTE         reduce using rule 90 (seen_remove_fondo -> .)
    FLOAT_CTE       reduce using rule 90 (seen_remove_fondo -> .)
    RIGHTPARENTHESES reduce using rule 90 (seen_remove_fondo -> .)
    COMMA           reduce using rule 90 (seen_remove_fondo -> .)
    SEMICOLON       reduce using rule 90 (seen_remove_fondo -> .)

    seen_remove_fondo              shift and go to state 154

state 142

    (75) condicion -> IF LEFTPARENTHESES expresion RIGHTPARENTHESES seen_right_parentheses_condicion bloque . condicionaux
    (76) condicionaux -> . ELSE seen_else bloque SEMICOLON seen_end_condicion
    (77) condicionaux -> . SEMICOLON seen_end_condicion

    ELSE            shift and go to state 156
    SEMICOLON       shift and go to state 157

    condicionaux                   shift and go to state 155

state 143

    (56) expresion -> exp seen_comparacion expresionaux exp . seen_comparacion
    (95) seen_comparacion -> .

    RIGHTPARENTHESES reduce using rule 95 (seen_comparacion -> .)
    COMMA           reduce using rule 95 (seen_comparacion -> .)
    SEMICOLON       reduce using rule 95 (seen_comparacion -> .)

    seen_comparacion               shift and go to state 158

state 144

    (57) expresionaux -> GREATERTHAN seen_operador .

    LEFTPARENTHESES reduce using rule 57 (expresionaux -> GREATERTHAN seen_operador .)
    ID              reduce using rule 57 (expresionaux -> GREATERTHAN seen_operador .)
    INT_CTE         reduce using rule 57 (expresionaux -> GREATERTHAN seen_operador .)
    FLOAT_CTE       reduce using rule 57 (expresionaux -> GREATERTHAN seen_operador .)


state 145

    (58) expresionaux -> LESSTHAN seen_operador .

    LEFTPARENTHESES reduce using rule 58 (expresionaux -> LESSTHAN seen_operador .)
    ID              reduce using rule 58 (expresionaux -> LESSTHAN seen_operador .)
    INT_CTE         reduce using rule 58 (expresionaux -> LESSTHAN seen_operador .)
    FLOAT_CTE       reduce using rule 58 (expresionaux -> LESSTHAN seen_operador .)


state 146

    (59) expresionaux -> NOTEQUALS seen_operador .

    LEFTPARENTHESES reduce using rule 59 (expresionaux -> NOTEQUALS seen_operador .)
    ID              reduce using rule 59 (expresionaux -> NOTEQUALS seen_operador .)
    INT_CTE         reduce using rule 59 (expresionaux -> NOTEQUALS seen_operador .)
    FLOAT_CTE       reduce using rule 59 (expresionaux -> NOTEQUALS seen_operador .)


state 147

    (69) expaux -> PLUS seen_operador . exp
    (67) exp -> . termino seen_termino
    (68) exp -> . termino seen_termino expaux
    (71) termino -> . factor seen_factor
    (72) termino -> . factor seen_factor terminoaux
    (81) factor -> . factoraux
    (82) factor -> . varcte
    (83) factoraux -> . LEFTPARENTHESES seen_insert_fondo expresion RIGHTPARENTHESES seen_remove_fondo
    (84) varcte -> . ID seen_ID
    (85) varcte -> . INT_CTE seen_CTE_INT
    (86) varcte -> . FLOAT_CTE seen_CTE_FLOAT

    LEFTPARENTHESES shift and go to state 93
    ID              shift and go to state 100
    INT_CTE         shift and go to state 75
    FLOAT_CTE       shift and go to state 76

    exp                            shift and go to state 159
    termino                        shift and go to state 96
    factor                         shift and go to state 97
    factoraux                      shift and go to state 98
    varcte                         shift and go to state 99

state 148

    (70) expaux -> MINUS seen_operador . exp
    (67) exp -> . termino seen_termino
    (68) exp -> . termino seen_termino expaux
    (71) termino -> . factor seen_factor
    (72) termino -> . factor seen_factor terminoaux
    (81) factor -> . factoraux
    (82) factor -> . varcte
    (83) factoraux -> . LEFTPARENTHESES seen_insert_fondo expresion RIGHTPARENTHESES seen_remove_fondo
    (84) varcte -> . ID seen_ID
    (85) varcte -> . INT_CTE seen_CTE_INT
    (86) varcte -> . FLOAT_CTE seen_CTE_FLOAT

    LEFTPARENTHESES shift and go to state 93
    ID              shift and go to state 100
    INT_CTE         shift and go to state 75
    FLOAT_CTE       shift and go to state 76

    exp                            shift and go to state 160
    termino                        shift and go to state 96
    factor                         shift and go to state 97
    factoraux                      shift and go to state 98
    varcte                         shift and go to state 99

state 149

    (73) terminoaux -> DIVIDE seen_operador . termino
    (71) termino -> . factor seen_factor
    (72) termino -> . factor seen_factor terminoaux
    (81) factor -> . factoraux
    (82) factor -> . varcte
    (83) factoraux -> . LEFTPARENTHESES seen_insert_fondo expresion RIGHTPARENTHESES seen_remove_fondo
    (84) varcte -> . ID seen_ID
    (85) varcte -> . INT_CTE seen_CTE_INT
    (86) varcte -> . FLOAT_CTE seen_CTE_FLOAT

    LEFTPARENTHESES shift and go to state 93
    ID              shift and go to state 100
    INT_CTE         shift and go to state 75
    FLOAT_CTE       shift and go to state 76

    termino                        shift and go to state 161
    factor                         shift and go to state 97
    factoraux                      shift and go to state 98
    varcte                         shift and go to state 99

state 150

    (74) terminoaux -> MULTIPLY seen_operador . termino
    (71) termino -> . factor seen_factor
    (72) termino -> . factor seen_factor terminoaux
    (81) factor -> . factoraux
    (82) factor -> . varcte
    (83) factoraux -> . LEFTPARENTHESES seen_insert_fondo expresion RIGHTPARENTHESES seen_remove_fondo
    (84) varcte -> . ID seen_ID
    (85) varcte -> . INT_CTE seen_CTE_INT
    (86) varcte -> . FLOAT_CTE seen_CTE_FLOAT

    LEFTPARENTHESES shift and go to state 93
    ID              shift and go to state 100
    INT_CTE         shift and go to state 75
    FLOAT_CTE       shift and go to state 76

    termino                        shift and go to state 162
    factor                         shift and go to state 97
    factoraux                      shift and go to state 98
    varcte                         shift and go to state 99

state 151

    (96) while -> WHILE seen_while LEFTPARENTHESES expresion RIGHTPARENTHESES seen_right_parentheses_while . bloque SEMICOLON seen_end_while
    (43) bloque -> . LEFTBRACE vars seen_start_bloqueaux bloqueaux RIGHTBRACE

    LEFTBRACE       shift and go to state 44

    bloque                         shift and go to state 163

state 152

    (100) functionCall -> ID seen_fCall_id LEFTPARENTHESES seen_leftp_fCall paramsFunctionCall seen_end_paramsFCall . RIGHTPARENTHESES seen_rightp_fCall SEMICOLON

    RIGHTPARENTHESES shift and go to state 164


state 153

    (103) paramsFunctionCall -> expresion seen_parameter_fCall . COMMA seen_comma_params_fCall paramsFunctionCall
    (104) paramsFunctionCall -> expresion seen_parameter_fCall .

    COMMA           shift and go to state 165
    RIGHTPARENTHESES reduce using rule 104 (paramsFunctionCall -> expresion seen_parameter_fCall .)


state 154

    (83) factoraux -> LEFTPARENTHESES seen_insert_fondo expresion RIGHTPARENTHESES seen_remove_fondo .

    DIVIDE          reduce using rule 83 (factoraux -> LEFTPARENTHESES seen_insert_fondo expresion RIGHTPARENTHESES seen_remove_fondo .)
    MULTIPLY        reduce using rule 83 (factoraux -> LEFTPARENTHESES seen_insert_fondo expresion RIGHTPARENTHESES seen_remove_fondo .)
    PLUS            reduce using rule 83 (factoraux -> LEFTPARENTHESES seen_insert_fondo expresion RIGHTPARENTHESES seen_remove_fondo .)
    MINUS           reduce using rule 83 (factoraux -> LEFTPARENTHESES seen_insert_fondo expresion RIGHTPARENTHESES seen_remove_fondo .)
    GREATERTHAN     reduce using rule 83 (factoraux -> LEFTPARENTHESES seen_insert_fondo expresion RIGHTPARENTHESES seen_remove_fondo .)
    LESSTHAN        reduce using rule 83 (factoraux -> LEFTPARENTHESES seen_insert_fondo expresion RIGHTPARENTHESES seen_remove_fondo .)
    NOTEQUALS       reduce using rule 83 (factoraux -> LEFTPARENTHESES seen_insert_fondo expresion RIGHTPARENTHESES seen_remove_fondo .)
    LEFTPARENTHESES reduce using rule 83 (factoraux -> LEFTPARENTHESES seen_insert_fondo expresion RIGHTPARENTHESES seen_remove_fondo .)
    ID              reduce using rule 83 (factoraux -> LEFTPARENTHESES seen_insert_fondo expresion RIGHTPARENTHESES seen_remove_fondo .)
    INT_CTE         reduce using rule 83 (factoraux -> LEFTPARENTHESES seen_insert_fondo expresion RIGHTPARENTHESES seen_remove_fondo .)
    FLOAT_CTE       reduce using rule 83 (factoraux -> LEFTPARENTHESES seen_insert_fondo expresion RIGHTPARENTHESES seen_remove_fondo .)
    RIGHTPARENTHESES reduce using rule 83 (factoraux -> LEFTPARENTHESES seen_insert_fondo expresion RIGHTPARENTHESES seen_remove_fondo .)
    COMMA           reduce using rule 83 (factoraux -> LEFTPARENTHESES seen_insert_fondo expresion RIGHTPARENTHESES seen_remove_fondo .)
    SEMICOLON       reduce using rule 83 (factoraux -> LEFTPARENTHESES seen_insert_fondo expresion RIGHTPARENTHESES seen_remove_fondo .)


state 155

    (75) condicion -> IF LEFTPARENTHESES expresion RIGHTPARENTHESES seen_right_parentheses_condicion bloque condicionaux .

    IF              reduce using rule 75 (condicion -> IF LEFTPARENTHESES expresion RIGHTPARENTHESES seen_right_parentheses_condicion bloque condicionaux .)
    PRINT           reduce using rule 75 (condicion -> IF LEFTPARENTHESES expresion RIGHTPARENTHESES seen_right_parentheses_condicion bloque condicionaux .)
    WHILE           reduce using rule 75 (condicion -> IF LEFTPARENTHESES expresion RIGHTPARENTHESES seen_right_parentheses_condicion bloque condicionaux .)
    ID              reduce using rule 75 (condicion -> IF LEFTPARENTHESES expresion RIGHTPARENTHESES seen_right_parentheses_condicion bloque condicionaux .)
    INT_CTE         reduce using rule 75 (condicion -> IF LEFTPARENTHESES expresion RIGHTPARENTHESES seen_right_parentheses_condicion bloque condicionaux .)
    FLOAT_CTE       reduce using rule 75 (condicion -> IF LEFTPARENTHESES expresion RIGHTPARENTHESES seen_right_parentheses_condicion bloque condicionaux .)
    RIGHTBRACE      reduce using rule 75 (condicion -> IF LEFTPARENTHESES expresion RIGHTPARENTHESES seen_right_parentheses_condicion bloque condicionaux .)


state 156

    (76) condicionaux -> ELSE . seen_else bloque SEMICOLON seen_end_condicion
    (79) seen_else -> .

    LEFTBRACE       reduce using rule 79 (seen_else -> .)

    seen_else                      shift and go to state 166

state 157

    (77) condicionaux -> SEMICOLON . seen_end_condicion
    (80) seen_end_condicion -> .

    IF              reduce using rule 80 (seen_end_condicion -> .)
    PRINT           reduce using rule 80 (seen_end_condicion -> .)
    WHILE           reduce using rule 80 (seen_end_condicion -> .)
    ID              reduce using rule 80 (seen_end_condicion -> .)
    INT_CTE         reduce using rule 80 (seen_end_condicion -> .)
    FLOAT_CTE       reduce using rule 80 (seen_end_condicion -> .)
    RIGHTBRACE      reduce using rule 80 (seen_end_condicion -> .)

    seen_end_condicion             shift and go to state 167

state 158

    (56) expresion -> exp seen_comparacion expresionaux exp seen_comparacion .

    RIGHTPARENTHESES reduce using rule 56 (expresion -> exp seen_comparacion expresionaux exp seen_comparacion .)
    COMMA           reduce using rule 56 (expresion -> exp seen_comparacion expresionaux exp seen_comparacion .)
    SEMICOLON       reduce using rule 56 (expresion -> exp seen_comparacion expresionaux exp seen_comparacion .)


state 159

    (69) expaux -> PLUS seen_operador exp .

    GREATERTHAN     reduce using rule 69 (expaux -> PLUS seen_operador exp .)
    LESSTHAN        reduce using rule 69 (expaux -> PLUS seen_operador exp .)
    NOTEQUALS       reduce using rule 69 (expaux -> PLUS seen_operador exp .)
    LEFTPARENTHESES reduce using rule 69 (expaux -> PLUS seen_operador exp .)
    ID              reduce using rule 69 (expaux -> PLUS seen_operador exp .)
    INT_CTE         reduce using rule 69 (expaux -> PLUS seen_operador exp .)
    FLOAT_CTE       reduce using rule 69 (expaux -> PLUS seen_operador exp .)
    RIGHTPARENTHESES reduce using rule 69 (expaux -> PLUS seen_operador exp .)
    COMMA           reduce using rule 69 (expaux -> PLUS seen_operador exp .)
    SEMICOLON       reduce using rule 69 (expaux -> PLUS seen_operador exp .)


state 160

    (70) expaux -> MINUS seen_operador exp .

    GREATERTHAN     reduce using rule 70 (expaux -> MINUS seen_operador exp .)
    LESSTHAN        reduce using rule 70 (expaux -> MINUS seen_operador exp .)
    NOTEQUALS       reduce using rule 70 (expaux -> MINUS seen_operador exp .)
    LEFTPARENTHESES reduce using rule 70 (expaux -> MINUS seen_operador exp .)
    ID              reduce using rule 70 (expaux -> MINUS seen_operador exp .)
    INT_CTE         reduce using rule 70 (expaux -> MINUS seen_operador exp .)
    FLOAT_CTE       reduce using rule 70 (expaux -> MINUS seen_operador exp .)
    RIGHTPARENTHESES reduce using rule 70 (expaux -> MINUS seen_operador exp .)
    COMMA           reduce using rule 70 (expaux -> MINUS seen_operador exp .)
    SEMICOLON       reduce using rule 70 (expaux -> MINUS seen_operador exp .)


state 161

    (73) terminoaux -> DIVIDE seen_operador termino .

    PLUS            reduce using rule 73 (terminoaux -> DIVIDE seen_operador termino .)
    MINUS           reduce using rule 73 (terminoaux -> DIVIDE seen_operador termino .)
    GREATERTHAN     reduce using rule 73 (terminoaux -> DIVIDE seen_operador termino .)
    LESSTHAN        reduce using rule 73 (terminoaux -> DIVIDE seen_operador termino .)
    NOTEQUALS       reduce using rule 73 (terminoaux -> DIVIDE seen_operador termino .)
    LEFTPARENTHESES reduce using rule 73 (terminoaux -> DIVIDE seen_operador termino .)
    ID              reduce using rule 73 (terminoaux -> DIVIDE seen_operador termino .)
    INT_CTE         reduce using rule 73 (terminoaux -> DIVIDE seen_operador termino .)
    FLOAT_CTE       reduce using rule 73 (terminoaux -> DIVIDE seen_operador termino .)
    RIGHTPARENTHESES reduce using rule 73 (terminoaux -> DIVIDE seen_operador termino .)
    COMMA           reduce using rule 73 (terminoaux -> DIVIDE seen_operador termino .)
    SEMICOLON       reduce using rule 73 (terminoaux -> DIVIDE seen_operador termino .)


state 162

    (74) terminoaux -> MULTIPLY seen_operador termino .

    PLUS            reduce using rule 74 (terminoaux -> MULTIPLY seen_operador termino .)
    MINUS           reduce using rule 74 (terminoaux -> MULTIPLY seen_operador termino .)
    GREATERTHAN     reduce using rule 74 (terminoaux -> MULTIPLY seen_operador termino .)
    LESSTHAN        reduce using rule 74 (terminoaux -> MULTIPLY seen_operador termino .)
    NOTEQUALS       reduce using rule 74 (terminoaux -> MULTIPLY seen_operador termino .)
    LEFTPARENTHESES reduce using rule 74 (terminoaux -> MULTIPLY seen_operador termino .)
    ID              reduce using rule 74 (terminoaux -> MULTIPLY seen_operador termino .)
    INT_CTE         reduce using rule 74 (terminoaux -> MULTIPLY seen_operador termino .)
    FLOAT_CTE       reduce using rule 74 (terminoaux -> MULTIPLY seen_operador termino .)
    RIGHTPARENTHESES reduce using rule 74 (terminoaux -> MULTIPLY seen_operador termino .)
    COMMA           reduce using rule 74 (terminoaux -> MULTIPLY seen_operador termino .)
    SEMICOLON       reduce using rule 74 (terminoaux -> MULTIPLY seen_operador termino .)


state 163

    (96) while -> WHILE seen_while LEFTPARENTHESES expresion RIGHTPARENTHESES seen_right_parentheses_while bloque . SEMICOLON seen_end_while

    SEMICOLON       shift and go to state 168


state 164

    (100) functionCall -> ID seen_fCall_id LEFTPARENTHESES seen_leftp_fCall paramsFunctionCall seen_end_paramsFCall RIGHTPARENTHESES . seen_rightp_fCall SEMICOLON
    (108) seen_rightp_fCall -> .

    SEMICOLON       reduce using rule 108 (seen_rightp_fCall -> .)

    seen_rightp_fCall              shift and go to state 169

state 165

    (103) paramsFunctionCall -> expresion seen_parameter_fCall COMMA . seen_comma_params_fCall paramsFunctionCall
    (106) seen_comma_params_fCall -> .

    LEFTPARENTHESES reduce using rule 106 (seen_comma_params_fCall -> .)
    ID              reduce using rule 106 (seen_comma_params_fCall -> .)
    INT_CTE         reduce using rule 106 (seen_comma_params_fCall -> .)
    FLOAT_CTE       reduce using rule 106 (seen_comma_params_fCall -> .)

    seen_comma_params_fCall        shift and go to state 170

state 166

    (76) condicionaux -> ELSE seen_else . bloque SEMICOLON seen_end_condicion
    (43) bloque -> . LEFTBRACE vars seen_start_bloqueaux bloqueaux RIGHTBRACE

    LEFTBRACE       shift and go to state 44

    bloque                         shift and go to state 171

state 167

    (77) condicionaux -> SEMICOLON seen_end_condicion .

    IF              reduce using rule 77 (condicionaux -> SEMICOLON seen_end_condicion .)
    PRINT           reduce using rule 77 (condicionaux -> SEMICOLON seen_end_condicion .)
    WHILE           reduce using rule 77 (condicionaux -> SEMICOLON seen_end_condicion .)
    ID              reduce using rule 77 (condicionaux -> SEMICOLON seen_end_condicion .)
    INT_CTE         reduce using rule 77 (condicionaux -> SEMICOLON seen_end_condicion .)
    FLOAT_CTE       reduce using rule 77 (condicionaux -> SEMICOLON seen_end_condicion .)
    RIGHTBRACE      reduce using rule 77 (condicionaux -> SEMICOLON seen_end_condicion .)


state 168

    (96) while -> WHILE seen_while LEFTPARENTHESES expresion RIGHTPARENTHESES seen_right_parentheses_while bloque SEMICOLON . seen_end_while
    (99) seen_end_while -> .

    IF              reduce using rule 99 (seen_end_while -> .)
    PRINT           reduce using rule 99 (seen_end_while -> .)
    WHILE           reduce using rule 99 (seen_end_while -> .)
    ID              reduce using rule 99 (seen_end_while -> .)
    INT_CTE         reduce using rule 99 (seen_end_while -> .)
    FLOAT_CTE       reduce using rule 99 (seen_end_while -> .)
    RIGHTBRACE      reduce using rule 99 (seen_end_while -> .)

    seen_end_while                 shift and go to state 172

state 169

    (100) functionCall -> ID seen_fCall_id LEFTPARENTHESES seen_leftp_fCall paramsFunctionCall seen_end_paramsFCall RIGHTPARENTHESES seen_rightp_fCall . SEMICOLON

    SEMICOLON       shift and go to state 173


state 170

    (103) paramsFunctionCall -> expresion seen_parameter_fCall COMMA seen_comma_params_fCall . paramsFunctionCall
    (103) paramsFunctionCall -> . expresion seen_parameter_fCall COMMA seen_comma_params_fCall paramsFunctionCall
    (104) paramsFunctionCall -> . expresion seen_parameter_fCall
    (55) expresion -> . exp seen_comparacion
    (56) expresion -> . exp seen_comparacion expresionaux exp seen_comparacion
    (67) exp -> . termino seen_termino
    (68) exp -> . termino seen_termino expaux
    (71) termino -> . factor seen_factor
    (72) termino -> . factor seen_factor terminoaux
    (81) factor -> . factoraux
    (82) factor -> . varcte
    (83) factoraux -> . LEFTPARENTHESES seen_insert_fondo expresion RIGHTPARENTHESES seen_remove_fondo
    (84) varcte -> . ID seen_ID
    (85) varcte -> . INT_CTE seen_CTE_INT
    (86) varcte -> . FLOAT_CTE seen_CTE_FLOAT

    LEFTPARENTHESES shift and go to state 93
    ID              shift and go to state 100
    INT_CTE         shift and go to state 75
    FLOAT_CTE       shift and go to state 76

    expresion                      shift and go to state 138
    paramsFunctionCall             shift and go to state 174
    exp                            shift and go to state 95
    termino                        shift and go to state 96
    factor                         shift and go to state 97
    factoraux                      shift and go to state 98
    varcte                         shift and go to state 99

state 171

    (76) condicionaux -> ELSE seen_else bloque . SEMICOLON seen_end_condicion

    SEMICOLON       shift and go to state 175


state 172

    (96) while -> WHILE seen_while LEFTPARENTHESES expresion RIGHTPARENTHESES seen_right_parentheses_while bloque SEMICOLON seen_end_while .

    IF              reduce using rule 96 (while -> WHILE seen_while LEFTPARENTHESES expresion RIGHTPARENTHESES seen_right_parentheses_while bloque SEMICOLON seen_end_while .)
    PRINT           reduce using rule 96 (while -> WHILE seen_while LEFTPARENTHESES expresion RIGHTPARENTHESES seen_right_parentheses_while bloque SEMICOLON seen_end_while .)
    WHILE           reduce using rule 96 (while -> WHILE seen_while LEFTPARENTHESES expresion RIGHTPARENTHESES seen_right_parentheses_while bloque SEMICOLON seen_end_while .)
    ID              reduce using rule 96 (while -> WHILE seen_while LEFTPARENTHESES expresion RIGHTPARENTHESES seen_right_parentheses_while bloque SEMICOLON seen_end_while .)
    INT_CTE         reduce using rule 96 (while -> WHILE seen_while LEFTPARENTHESES expresion RIGHTPARENTHESES seen_right_parentheses_while bloque SEMICOLON seen_end_while .)
    FLOAT_CTE       reduce using rule 96 (while -> WHILE seen_while LEFTPARENTHESES expresion RIGHTPARENTHESES seen_right_parentheses_while bloque SEMICOLON seen_end_while .)
    RIGHTBRACE      reduce using rule 96 (while -> WHILE seen_while LEFTPARENTHESES expresion RIGHTPARENTHESES seen_right_parentheses_while bloque SEMICOLON seen_end_while .)


state 173

    (100) functionCall -> ID seen_fCall_id LEFTPARENTHESES seen_leftp_fCall paramsFunctionCall seen_end_paramsFCall RIGHTPARENTHESES seen_rightp_fCall SEMICOLON .

    IF              reduce using rule 100 (functionCall -> ID seen_fCall_id LEFTPARENTHESES seen_leftp_fCall paramsFunctionCall seen_end_paramsFCall RIGHTPARENTHESES seen_rightp_fCall SEMICOLON .)
    PRINT           reduce using rule 100 (functionCall -> ID seen_fCall_id LEFTPARENTHESES seen_leftp_fCall paramsFunctionCall seen_end_paramsFCall RIGHTPARENTHESES seen_rightp_fCall SEMICOLON .)
    WHILE           reduce using rule 100 (functionCall -> ID seen_fCall_id LEFTPARENTHESES seen_leftp_fCall paramsFunctionCall seen_end_paramsFCall RIGHTPARENTHESES seen_rightp_fCall SEMICOLON .)
    ID              reduce using rule 100 (functionCall -> ID seen_fCall_id LEFTPARENTHESES seen_leftp_fCall paramsFunctionCall seen_end_paramsFCall RIGHTPARENTHESES seen_rightp_fCall SEMICOLON .)
    INT_CTE         reduce using rule 100 (functionCall -> ID seen_fCall_id LEFTPARENTHESES seen_leftp_fCall paramsFunctionCall seen_end_paramsFCall RIGHTPARENTHESES seen_rightp_fCall SEMICOLON .)
    FLOAT_CTE       reduce using rule 100 (functionCall -> ID seen_fCall_id LEFTPARENTHESES seen_leftp_fCall paramsFunctionCall seen_end_paramsFCall RIGHTPARENTHESES seen_rightp_fCall SEMICOLON .)
    RIGHTBRACE      reduce using rule 100 (functionCall -> ID seen_fCall_id LEFTPARENTHESES seen_leftp_fCall paramsFunctionCall seen_end_paramsFCall RIGHTPARENTHESES seen_rightp_fCall SEMICOLON .)


state 174

    (103) paramsFunctionCall -> expresion seen_parameter_fCall COMMA seen_comma_params_fCall paramsFunctionCall .

    RIGHTPARENTHESES reduce using rule 103 (paramsFunctionCall -> expresion seen_parameter_fCall COMMA seen_comma_params_fCall paramsFunctionCall .)


state 175

    (76) condicionaux -> ELSE seen_else bloque SEMICOLON . seen_end_condicion
    (80) seen_end_condicion -> .

    IF              reduce using rule 80 (seen_end_condicion -> .)
    PRINT           reduce using rule 80 (seen_end_condicion -> .)
    WHILE           reduce using rule 80 (seen_end_condicion -> .)
    ID              reduce using rule 80 (seen_end_condicion -> .)
    INT_CTE         reduce using rule 80 (seen_end_condicion -> .)
    FLOAT_CTE       reduce using rule 80 (seen_end_condicion -> .)
    RIGHTBRACE      reduce using rule 80 (seen_end_condicion -> .)

    seen_end_condicion             shift and go to state 176

state 176

    (76) condicionaux -> ELSE seen_else bloque SEMICOLON seen_end_condicion .

    IF              reduce using rule 76 (condicionaux -> ELSE seen_else bloque SEMICOLON seen_end_condicion .)
    PRINT           reduce using rule 76 (condicionaux -> ELSE seen_else bloque SEMICOLON seen_end_condicion .)
    WHILE           reduce using rule 76 (condicionaux -> ELSE seen_else bloque SEMICOLON seen_end_condicion .)
    ID              reduce using rule 76 (condicionaux -> ELSE seen_else bloque SEMICOLON seen_end_condicion .)
    INT_CTE         reduce using rule 76 (condicionaux -> ELSE seen_else bloque SEMICOLON seen_end_condicion .)
    FLOAT_CTE       reduce using rule 76 (condicionaux -> ELSE seen_else bloque SEMICOLON seen_end_condicion .)
    RIGHTBRACE      reduce using rule 76 (condicionaux -> ELSE seen_else bloque SEMICOLON seen_end_condicion .)

