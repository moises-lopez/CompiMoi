Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    NOTEQUAL
    READ

Grammar

Rule 0     S' -> calc
Rule 1     calc -> PROGRAMA ID seen_program SEMICOLON vars modulesaux functionmain
Rule 2     modulesaux -> function modulesaux
Rule 3     modulesaux -> <empty>
Rule 4     seen_program -> <empty>
Rule 5     vars -> VAR seen_vars tipo ID seen_ID_var varsaux SEMICOLON vars
Rule 6     vars -> empty
Rule 7     seen_vars -> <empty>
Rule 8     varsaux -> COMMA ID seen_ID_var varsaux
Rule 9     varsaux -> <empty>
Rule 10    seen_ID_var -> <empty>
Rule 11    tipo -> INT seen_tipo
Rule 12    tipo -> FLOAT seen_tipo
Rule 13    seen_tipo -> <empty>
Rule 14    function -> FUNCTION returnfunctionaux ID seen_id_function params bloque
Rule 15    seen_id_function -> <empty>
Rule 16    functionmain -> MAIN LEFTPARENTHESES RIGHTPARENTHESES bloque
Rule 17    returnfunctionaux -> tipo
Rule 18    returnfunctionaux -> VOID seen_void
Rule 19    seen_void -> <empty>
Rule 20    params -> LEFTPARENTHESES paramsaux RIGHTPARENTHESES
Rule 21    paramsaux -> ID COLON tipo
Rule 22    paramsaux -> ID COLON tipo COMMA paramsaux
Rule 23    bloque -> LEFTBRACE vars bloqueaux RIGHTBRACE
Rule 24    bloqueaux -> estatuto bloqueaux
Rule 25    bloqueaux -> <empty>
Rule 26    estatuto -> asignacion
Rule 27    estatuto -> condicion
Rule 28    estatuto -> escritura
Rule 29    asignacion -> varcte EQUALS expresion SEMICOLON
Rule 30    expresion -> exp expresionaux
Rule 31    expresionaux -> GREATERTHAN exp
Rule 32    expresionaux -> LESSTHAN exp
Rule 33    expresionaux -> NOTEQUALS exp
Rule 34    expresionaux -> <empty>
Rule 35    escritura -> PRINT LEFTPARENTHESES escrituraaux RIGHTPARENTHESES SEMICOLON
Rule 36    escrituraaux -> expresion
Rule 37    escrituraaux -> STRING_CTE
Rule 38    escrituraaux -> expresion COMMA escrituraaux
Rule 39    escrituraaux -> STRING_CTE COMMA escrituraaux
Rule 40    exp -> termino seen_termino
Rule 41    exp -> termino seen_termino expaux
Rule 42    expaux -> PLUS seen_operador exp
Rule 43    expaux -> MINUS seen_operador exp
Rule 44    termino -> factor seen_factor
Rule 45    termino -> factor seen_factor terminoaux
Rule 46    terminoaux -> DIVIDE seen_operador termino
Rule 47    terminoaux -> MULTIPLY seen_operador termino
Rule 48    condicion -> IF LEFTPARENTHESES expresion RIGHTPARENTHESES bloque condicionaux
Rule 49    condicionaux -> ELSE bloque SEMICOLON
Rule 50    condicionaux -> SEMICOLON
Rule 51    factor -> factoraux
Rule 52    factor -> factoraux2
Rule 53    factoraux -> LEFTPARENTHESES expresion RIGHTPARENTHESES
Rule 54    factoraux2 -> factoraux3 varcte
Rule 55    factoraux3 -> PLUS
Rule 56    factoraux3 -> MINUS
Rule 57    factoraux3 -> <empty>
Rule 58    varcte -> ID seen_ID
Rule 59    varcte -> INT_CTE
Rule 60    varcte -> FLOAT_CTE
Rule 61    seen_ID -> <empty>
Rule 62    seen_operador -> <empty>
Rule 63    seen_termino -> <empty>
Rule 64    seen_factor -> <empty>
Rule 65    arrayIntDefinition -> LEFTBRACKET INT_CTE RIGHTBRACKET
Rule 66    empty -> <empty>

Terminals, with rules where they appear

COLON                : 21 22
COMMA                : 8 22 38 39
DIVIDE               : 46
ELSE                 : 49
EQUALS               : 29
FLOAT                : 12
FLOAT_CTE            : 60
FUNCTION             : 14
GREATERTHAN          : 31
ID                   : 1 5 8 14 21 22 58
IF                   : 48
INT                  : 11
INT_CTE              : 59 65
LEFTBRACE            : 23
LEFTBRACKET          : 65
LEFTPARENTHESES      : 16 20 35 48 53
LESSTHAN             : 32
MAIN                 : 16
MINUS                : 43 56
MULTIPLY             : 47
NOTEQUAL             : 
NOTEQUALS            : 33
PLUS                 : 42 55
PRINT                : 35
PROGRAMA             : 1
READ                 : 
RIGHTBRACE           : 23
RIGHTBRACKET         : 65
RIGHTPARENTHESES     : 16 20 35 48 53
SEMICOLON            : 1 5 29 35 49 50
STRING_CTE           : 37 39
VAR                  : 5
VOID                 : 18
error                : 

Nonterminals, with rules where they appear

arrayIntDefinition   : 
asignacion           : 26
bloque               : 14 16 48 49
bloqueaux            : 23 24
calc                 : 0
condicion            : 27
condicionaux         : 48
empty                : 6
escritura            : 28
escrituraaux         : 35 38 39
estatuto             : 24
exp                  : 30 31 32 33 42 43
expaux               : 41
expresion            : 29 36 38 48 53
expresionaux         : 30
factor               : 44 45
factoraux            : 51
factoraux2           : 52
factoraux3           : 54
function             : 2
functionmain         : 1
modulesaux           : 1 2
params               : 14
paramsaux            : 20 22
returnfunctionaux    : 14
seen_ID              : 58
seen_ID_var          : 5 8
seen_factor          : 44 45
seen_id_function     : 14
seen_operador        : 42 43 46 47
seen_program         : 1
seen_termino         : 40 41
seen_tipo            : 11 12
seen_vars            : 5
seen_void            : 18
termino              : 40 41 46 47
terminoaux           : 45
tipo                 : 5 17 21 22
varcte               : 29 54
vars                 : 1 5 23
varsaux              : 5 8

Parsing method: LALR

state 0

    (0) S' -> . calc
    (1) calc -> . PROGRAMA ID seen_program SEMICOLON vars modulesaux functionmain

    PROGRAMA        shift and go to state 2

    calc                           shift and go to state 1

state 1

    (0) S' -> calc .



state 2

    (1) calc -> PROGRAMA . ID seen_program SEMICOLON vars modulesaux functionmain

    ID              shift and go to state 3


state 3

    (1) calc -> PROGRAMA ID . seen_program SEMICOLON vars modulesaux functionmain
    (4) seen_program -> .

    SEMICOLON       reduce using rule 4 (seen_program -> .)

    seen_program                   shift and go to state 4

state 4

    (1) calc -> PROGRAMA ID seen_program . SEMICOLON vars modulesaux functionmain

    SEMICOLON       shift and go to state 5


state 5

    (1) calc -> PROGRAMA ID seen_program SEMICOLON . vars modulesaux functionmain
    (5) vars -> . VAR seen_vars tipo ID seen_ID_var varsaux SEMICOLON vars
    (6) vars -> . empty
    (66) empty -> .

    VAR             shift and go to state 7
    FUNCTION        reduce using rule 66 (empty -> .)
    MAIN            reduce using rule 66 (empty -> .)

    vars                           shift and go to state 6
    empty                          shift and go to state 8

state 6

    (1) calc -> PROGRAMA ID seen_program SEMICOLON vars . modulesaux functionmain
    (2) modulesaux -> . function modulesaux
    (3) modulesaux -> .
    (14) function -> . FUNCTION returnfunctionaux ID seen_id_function params bloque

    MAIN            reduce using rule 3 (modulesaux -> .)
    FUNCTION        shift and go to state 11

    modulesaux                     shift and go to state 9
    function                       shift and go to state 10

state 7

    (5) vars -> VAR . seen_vars tipo ID seen_ID_var varsaux SEMICOLON vars
    (7) seen_vars -> .

    INT             reduce using rule 7 (seen_vars -> .)
    FLOAT           reduce using rule 7 (seen_vars -> .)

    seen_vars                      shift and go to state 12

state 8

    (6) vars -> empty .

    FUNCTION        reduce using rule 6 (vars -> empty .)
    MAIN            reduce using rule 6 (vars -> empty .)
    IF              reduce using rule 6 (vars -> empty .)
    PRINT           reduce using rule 6 (vars -> empty .)
    ID              reduce using rule 6 (vars -> empty .)
    INT_CTE         reduce using rule 6 (vars -> empty .)
    FLOAT_CTE       reduce using rule 6 (vars -> empty .)
    RIGHTBRACE      reduce using rule 6 (vars -> empty .)


state 9

    (1) calc -> PROGRAMA ID seen_program SEMICOLON vars modulesaux . functionmain
    (16) functionmain -> . MAIN LEFTPARENTHESES RIGHTPARENTHESES bloque

    MAIN            shift and go to state 14

    functionmain                   shift and go to state 13

state 10

    (2) modulesaux -> function . modulesaux
    (2) modulesaux -> . function modulesaux
    (3) modulesaux -> .
    (14) function -> . FUNCTION returnfunctionaux ID seen_id_function params bloque

    MAIN            reduce using rule 3 (modulesaux -> .)
    FUNCTION        shift and go to state 11

    function                       shift and go to state 10
    modulesaux                     shift and go to state 15

state 11

    (14) function -> FUNCTION . returnfunctionaux ID seen_id_function params bloque
    (17) returnfunctionaux -> . tipo
    (18) returnfunctionaux -> . VOID seen_void
    (11) tipo -> . INT seen_tipo
    (12) tipo -> . FLOAT seen_tipo

    VOID            shift and go to state 18
    INT             shift and go to state 19
    FLOAT           shift and go to state 20

    returnfunctionaux              shift and go to state 16
    tipo                           shift and go to state 17

state 12

    (5) vars -> VAR seen_vars . tipo ID seen_ID_var varsaux SEMICOLON vars
    (11) tipo -> . INT seen_tipo
    (12) tipo -> . FLOAT seen_tipo

    INT             shift and go to state 19
    FLOAT           shift and go to state 20

    tipo                           shift and go to state 21

state 13

    (1) calc -> PROGRAMA ID seen_program SEMICOLON vars modulesaux functionmain .

    $end            reduce using rule 1 (calc -> PROGRAMA ID seen_program SEMICOLON vars modulesaux functionmain .)


state 14

    (16) functionmain -> MAIN . LEFTPARENTHESES RIGHTPARENTHESES bloque

    LEFTPARENTHESES shift and go to state 22


state 15

    (2) modulesaux -> function modulesaux .

    MAIN            reduce using rule 2 (modulesaux -> function modulesaux .)


state 16

    (14) function -> FUNCTION returnfunctionaux . ID seen_id_function params bloque

    ID              shift and go to state 23


state 17

    (17) returnfunctionaux -> tipo .

    ID              reduce using rule 17 (returnfunctionaux -> tipo .)


state 18

    (18) returnfunctionaux -> VOID . seen_void
    (19) seen_void -> .

    ID              reduce using rule 19 (seen_void -> .)

    seen_void                      shift and go to state 24

state 19

    (11) tipo -> INT . seen_tipo
    (13) seen_tipo -> .

    ID              reduce using rule 13 (seen_tipo -> .)
    COMMA           reduce using rule 13 (seen_tipo -> .)
    RIGHTPARENTHESES reduce using rule 13 (seen_tipo -> .)

    seen_tipo                      shift and go to state 25

state 20

    (12) tipo -> FLOAT . seen_tipo
    (13) seen_tipo -> .

    ID              reduce using rule 13 (seen_tipo -> .)
    COMMA           reduce using rule 13 (seen_tipo -> .)
    RIGHTPARENTHESES reduce using rule 13 (seen_tipo -> .)

    seen_tipo                      shift and go to state 26

state 21

    (5) vars -> VAR seen_vars tipo . ID seen_ID_var varsaux SEMICOLON vars

    ID              shift and go to state 27


state 22

    (16) functionmain -> MAIN LEFTPARENTHESES . RIGHTPARENTHESES bloque

    RIGHTPARENTHESES shift and go to state 28


state 23

    (14) function -> FUNCTION returnfunctionaux ID . seen_id_function params bloque
    (15) seen_id_function -> .

    LEFTPARENTHESES reduce using rule 15 (seen_id_function -> .)

    seen_id_function               shift and go to state 29

state 24

    (18) returnfunctionaux -> VOID seen_void .

    ID              reduce using rule 18 (returnfunctionaux -> VOID seen_void .)


state 25

    (11) tipo -> INT seen_tipo .

    ID              reduce using rule 11 (tipo -> INT seen_tipo .)
    COMMA           reduce using rule 11 (tipo -> INT seen_tipo .)
    RIGHTPARENTHESES reduce using rule 11 (tipo -> INT seen_tipo .)


state 26

    (12) tipo -> FLOAT seen_tipo .

    ID              reduce using rule 12 (tipo -> FLOAT seen_tipo .)
    COMMA           reduce using rule 12 (tipo -> FLOAT seen_tipo .)
    RIGHTPARENTHESES reduce using rule 12 (tipo -> FLOAT seen_tipo .)


state 27

    (5) vars -> VAR seen_vars tipo ID . seen_ID_var varsaux SEMICOLON vars
    (10) seen_ID_var -> .

    COMMA           reduce using rule 10 (seen_ID_var -> .)
    SEMICOLON       reduce using rule 10 (seen_ID_var -> .)

    seen_ID_var                    shift and go to state 30

state 28

    (16) functionmain -> MAIN LEFTPARENTHESES RIGHTPARENTHESES . bloque
    (23) bloque -> . LEFTBRACE vars bloqueaux RIGHTBRACE

    LEFTBRACE       shift and go to state 32

    bloque                         shift and go to state 31

state 29

    (14) function -> FUNCTION returnfunctionaux ID seen_id_function . params bloque
    (20) params -> . LEFTPARENTHESES paramsaux RIGHTPARENTHESES

    LEFTPARENTHESES shift and go to state 34

    params                         shift and go to state 33

state 30

    (5) vars -> VAR seen_vars tipo ID seen_ID_var . varsaux SEMICOLON vars
    (8) varsaux -> . COMMA ID seen_ID_var varsaux
    (9) varsaux -> .

    COMMA           shift and go to state 36
    SEMICOLON       reduce using rule 9 (varsaux -> .)

    varsaux                        shift and go to state 35

state 31

    (16) functionmain -> MAIN LEFTPARENTHESES RIGHTPARENTHESES bloque .

    $end            reduce using rule 16 (functionmain -> MAIN LEFTPARENTHESES RIGHTPARENTHESES bloque .)


state 32

    (23) bloque -> LEFTBRACE . vars bloqueaux RIGHTBRACE
    (5) vars -> . VAR seen_vars tipo ID seen_ID_var varsaux SEMICOLON vars
    (6) vars -> . empty
    (66) empty -> .

    VAR             shift and go to state 7
    IF              reduce using rule 66 (empty -> .)
    PRINT           reduce using rule 66 (empty -> .)
    ID              reduce using rule 66 (empty -> .)
    INT_CTE         reduce using rule 66 (empty -> .)
    FLOAT_CTE       reduce using rule 66 (empty -> .)
    RIGHTBRACE      reduce using rule 66 (empty -> .)

    vars                           shift and go to state 37
    empty                          shift and go to state 8

state 33

    (14) function -> FUNCTION returnfunctionaux ID seen_id_function params . bloque
    (23) bloque -> . LEFTBRACE vars bloqueaux RIGHTBRACE

    LEFTBRACE       shift and go to state 32

    bloque                         shift and go to state 38

state 34

    (20) params -> LEFTPARENTHESES . paramsaux RIGHTPARENTHESES
    (21) paramsaux -> . ID COLON tipo
    (22) paramsaux -> . ID COLON tipo COMMA paramsaux

    ID              shift and go to state 40

    paramsaux                      shift and go to state 39

state 35

    (5) vars -> VAR seen_vars tipo ID seen_ID_var varsaux . SEMICOLON vars

    SEMICOLON       shift and go to state 41


state 36

    (8) varsaux -> COMMA . ID seen_ID_var varsaux

    ID              shift and go to state 42


state 37

    (23) bloque -> LEFTBRACE vars . bloqueaux RIGHTBRACE
    (24) bloqueaux -> . estatuto bloqueaux
    (25) bloqueaux -> .
    (26) estatuto -> . asignacion
    (27) estatuto -> . condicion
    (28) estatuto -> . escritura
    (29) asignacion -> . varcte EQUALS expresion SEMICOLON
    (48) condicion -> . IF LEFTPARENTHESES expresion RIGHTPARENTHESES bloque condicionaux
    (35) escritura -> . PRINT LEFTPARENTHESES escrituraaux RIGHTPARENTHESES SEMICOLON
    (58) varcte -> . ID seen_ID
    (59) varcte -> . INT_CTE
    (60) varcte -> . FLOAT_CTE

    RIGHTBRACE      reduce using rule 25 (bloqueaux -> .)
    IF              shift and go to state 49
    PRINT           shift and go to state 50
    ID              shift and go to state 51
    INT_CTE         shift and go to state 52
    FLOAT_CTE       shift and go to state 53

    bloqueaux                      shift and go to state 43
    estatuto                       shift and go to state 44
    asignacion                     shift and go to state 45
    condicion                      shift and go to state 46
    escritura                      shift and go to state 47
    varcte                         shift and go to state 48

state 38

    (14) function -> FUNCTION returnfunctionaux ID seen_id_function params bloque .

    FUNCTION        reduce using rule 14 (function -> FUNCTION returnfunctionaux ID seen_id_function params bloque .)
    MAIN            reduce using rule 14 (function -> FUNCTION returnfunctionaux ID seen_id_function params bloque .)


state 39

    (20) params -> LEFTPARENTHESES paramsaux . RIGHTPARENTHESES

    RIGHTPARENTHESES shift and go to state 54


state 40

    (21) paramsaux -> ID . COLON tipo
    (22) paramsaux -> ID . COLON tipo COMMA paramsaux

    COLON           shift and go to state 55


state 41

    (5) vars -> VAR seen_vars tipo ID seen_ID_var varsaux SEMICOLON . vars
    (5) vars -> . VAR seen_vars tipo ID seen_ID_var varsaux SEMICOLON vars
    (6) vars -> . empty
    (66) empty -> .

    VAR             shift and go to state 7
    FUNCTION        reduce using rule 66 (empty -> .)
    MAIN            reduce using rule 66 (empty -> .)
    IF              reduce using rule 66 (empty -> .)
    PRINT           reduce using rule 66 (empty -> .)
    ID              reduce using rule 66 (empty -> .)
    INT_CTE         reduce using rule 66 (empty -> .)
    FLOAT_CTE       reduce using rule 66 (empty -> .)
    RIGHTBRACE      reduce using rule 66 (empty -> .)

    vars                           shift and go to state 56
    empty                          shift and go to state 8

state 42

    (8) varsaux -> COMMA ID . seen_ID_var varsaux
    (10) seen_ID_var -> .

    COMMA           reduce using rule 10 (seen_ID_var -> .)
    SEMICOLON       reduce using rule 10 (seen_ID_var -> .)

    seen_ID_var                    shift and go to state 57

state 43

    (23) bloque -> LEFTBRACE vars bloqueaux . RIGHTBRACE

    RIGHTBRACE      shift and go to state 58


state 44

    (24) bloqueaux -> estatuto . bloqueaux
    (24) bloqueaux -> . estatuto bloqueaux
    (25) bloqueaux -> .
    (26) estatuto -> . asignacion
    (27) estatuto -> . condicion
    (28) estatuto -> . escritura
    (29) asignacion -> . varcte EQUALS expresion SEMICOLON
    (48) condicion -> . IF LEFTPARENTHESES expresion RIGHTPARENTHESES bloque condicionaux
    (35) escritura -> . PRINT LEFTPARENTHESES escrituraaux RIGHTPARENTHESES SEMICOLON
    (58) varcte -> . ID seen_ID
    (59) varcte -> . INT_CTE
    (60) varcte -> . FLOAT_CTE

    RIGHTBRACE      reduce using rule 25 (bloqueaux -> .)
    IF              shift and go to state 49
    PRINT           shift and go to state 50
    ID              shift and go to state 51
    INT_CTE         shift and go to state 52
    FLOAT_CTE       shift and go to state 53

    estatuto                       shift and go to state 44
    bloqueaux                      shift and go to state 59
    asignacion                     shift and go to state 45
    condicion                      shift and go to state 46
    escritura                      shift and go to state 47
    varcte                         shift and go to state 48

state 45

    (26) estatuto -> asignacion .

    IF              reduce using rule 26 (estatuto -> asignacion .)
    PRINT           reduce using rule 26 (estatuto -> asignacion .)
    ID              reduce using rule 26 (estatuto -> asignacion .)
    INT_CTE         reduce using rule 26 (estatuto -> asignacion .)
    FLOAT_CTE       reduce using rule 26 (estatuto -> asignacion .)
    RIGHTBRACE      reduce using rule 26 (estatuto -> asignacion .)


state 46

    (27) estatuto -> condicion .

    IF              reduce using rule 27 (estatuto -> condicion .)
    PRINT           reduce using rule 27 (estatuto -> condicion .)
    ID              reduce using rule 27 (estatuto -> condicion .)
    INT_CTE         reduce using rule 27 (estatuto -> condicion .)
    FLOAT_CTE       reduce using rule 27 (estatuto -> condicion .)
    RIGHTBRACE      reduce using rule 27 (estatuto -> condicion .)


state 47

    (28) estatuto -> escritura .

    IF              reduce using rule 28 (estatuto -> escritura .)
    PRINT           reduce using rule 28 (estatuto -> escritura .)
    ID              reduce using rule 28 (estatuto -> escritura .)
    INT_CTE         reduce using rule 28 (estatuto -> escritura .)
    FLOAT_CTE       reduce using rule 28 (estatuto -> escritura .)
    RIGHTBRACE      reduce using rule 28 (estatuto -> escritura .)


state 48

    (29) asignacion -> varcte . EQUALS expresion SEMICOLON

    EQUALS          shift and go to state 60


state 49

    (48) condicion -> IF . LEFTPARENTHESES expresion RIGHTPARENTHESES bloque condicionaux

    LEFTPARENTHESES shift and go to state 61


state 50

    (35) escritura -> PRINT . LEFTPARENTHESES escrituraaux RIGHTPARENTHESES SEMICOLON

    LEFTPARENTHESES shift and go to state 62


state 51

    (58) varcte -> ID . seen_ID
    (61) seen_ID -> .

    EQUALS          reduce using rule 61 (seen_ID -> .)
    DIVIDE          reduce using rule 61 (seen_ID -> .)
    MULTIPLY        reduce using rule 61 (seen_ID -> .)
    PLUS            reduce using rule 61 (seen_ID -> .)
    MINUS           reduce using rule 61 (seen_ID -> .)
    GREATERTHAN     reduce using rule 61 (seen_ID -> .)
    LESSTHAN        reduce using rule 61 (seen_ID -> .)
    NOTEQUALS       reduce using rule 61 (seen_ID -> .)
    SEMICOLON       reduce using rule 61 (seen_ID -> .)
    RIGHTPARENTHESES reduce using rule 61 (seen_ID -> .)
    COMMA           reduce using rule 61 (seen_ID -> .)

    seen_ID                        shift and go to state 63

state 52

    (59) varcte -> INT_CTE .

    EQUALS          reduce using rule 59 (varcte -> INT_CTE .)
    DIVIDE          reduce using rule 59 (varcte -> INT_CTE .)
    MULTIPLY        reduce using rule 59 (varcte -> INT_CTE .)
    PLUS            reduce using rule 59 (varcte -> INT_CTE .)
    MINUS           reduce using rule 59 (varcte -> INT_CTE .)
    GREATERTHAN     reduce using rule 59 (varcte -> INT_CTE .)
    LESSTHAN        reduce using rule 59 (varcte -> INT_CTE .)
    NOTEQUALS       reduce using rule 59 (varcte -> INT_CTE .)
    SEMICOLON       reduce using rule 59 (varcte -> INT_CTE .)
    RIGHTPARENTHESES reduce using rule 59 (varcte -> INT_CTE .)
    COMMA           reduce using rule 59 (varcte -> INT_CTE .)


state 53

    (60) varcte -> FLOAT_CTE .

    EQUALS          reduce using rule 60 (varcte -> FLOAT_CTE .)
    DIVIDE          reduce using rule 60 (varcte -> FLOAT_CTE .)
    MULTIPLY        reduce using rule 60 (varcte -> FLOAT_CTE .)
    PLUS            reduce using rule 60 (varcte -> FLOAT_CTE .)
    MINUS           reduce using rule 60 (varcte -> FLOAT_CTE .)
    GREATERTHAN     reduce using rule 60 (varcte -> FLOAT_CTE .)
    LESSTHAN        reduce using rule 60 (varcte -> FLOAT_CTE .)
    NOTEQUALS       reduce using rule 60 (varcte -> FLOAT_CTE .)
    SEMICOLON       reduce using rule 60 (varcte -> FLOAT_CTE .)
    RIGHTPARENTHESES reduce using rule 60 (varcte -> FLOAT_CTE .)
    COMMA           reduce using rule 60 (varcte -> FLOAT_CTE .)


state 54

    (20) params -> LEFTPARENTHESES paramsaux RIGHTPARENTHESES .

    LEFTBRACE       reduce using rule 20 (params -> LEFTPARENTHESES paramsaux RIGHTPARENTHESES .)


state 55

    (21) paramsaux -> ID COLON . tipo
    (22) paramsaux -> ID COLON . tipo COMMA paramsaux
    (11) tipo -> . INT seen_tipo
    (12) tipo -> . FLOAT seen_tipo

    INT             shift and go to state 19
    FLOAT           shift and go to state 20

    tipo                           shift and go to state 64

state 56

    (5) vars -> VAR seen_vars tipo ID seen_ID_var varsaux SEMICOLON vars .

    FUNCTION        reduce using rule 5 (vars -> VAR seen_vars tipo ID seen_ID_var varsaux SEMICOLON vars .)
    MAIN            reduce using rule 5 (vars -> VAR seen_vars tipo ID seen_ID_var varsaux SEMICOLON vars .)
    IF              reduce using rule 5 (vars -> VAR seen_vars tipo ID seen_ID_var varsaux SEMICOLON vars .)
    PRINT           reduce using rule 5 (vars -> VAR seen_vars tipo ID seen_ID_var varsaux SEMICOLON vars .)
    ID              reduce using rule 5 (vars -> VAR seen_vars tipo ID seen_ID_var varsaux SEMICOLON vars .)
    INT_CTE         reduce using rule 5 (vars -> VAR seen_vars tipo ID seen_ID_var varsaux SEMICOLON vars .)
    FLOAT_CTE       reduce using rule 5 (vars -> VAR seen_vars tipo ID seen_ID_var varsaux SEMICOLON vars .)
    RIGHTBRACE      reduce using rule 5 (vars -> VAR seen_vars tipo ID seen_ID_var varsaux SEMICOLON vars .)


state 57

    (8) varsaux -> COMMA ID seen_ID_var . varsaux
    (8) varsaux -> . COMMA ID seen_ID_var varsaux
    (9) varsaux -> .

    COMMA           shift and go to state 36
    SEMICOLON       reduce using rule 9 (varsaux -> .)

    varsaux                        shift and go to state 65

state 58

    (23) bloque -> LEFTBRACE vars bloqueaux RIGHTBRACE .

    $end            reduce using rule 23 (bloque -> LEFTBRACE vars bloqueaux RIGHTBRACE .)
    FUNCTION        reduce using rule 23 (bloque -> LEFTBRACE vars bloqueaux RIGHTBRACE .)
    MAIN            reduce using rule 23 (bloque -> LEFTBRACE vars bloqueaux RIGHTBRACE .)
    ELSE            reduce using rule 23 (bloque -> LEFTBRACE vars bloqueaux RIGHTBRACE .)
    SEMICOLON       reduce using rule 23 (bloque -> LEFTBRACE vars bloqueaux RIGHTBRACE .)


state 59

    (24) bloqueaux -> estatuto bloqueaux .

    RIGHTBRACE      reduce using rule 24 (bloqueaux -> estatuto bloqueaux .)


state 60

    (29) asignacion -> varcte EQUALS . expresion SEMICOLON
    (30) expresion -> . exp expresionaux
    (40) exp -> . termino seen_termino
    (41) exp -> . termino seen_termino expaux
    (44) termino -> . factor seen_factor
    (45) termino -> . factor seen_factor terminoaux
    (51) factor -> . factoraux
    (52) factor -> . factoraux2
    (53) factoraux -> . LEFTPARENTHESES expresion RIGHTPARENTHESES
    (54) factoraux2 -> . factoraux3 varcte
    (55) factoraux3 -> . PLUS
    (56) factoraux3 -> . MINUS
    (57) factoraux3 -> .

    LEFTPARENTHESES shift and go to state 72
    PLUS            shift and go to state 74
    MINUS           shift and go to state 75
    ID              reduce using rule 57 (factoraux3 -> .)
    INT_CTE         reduce using rule 57 (factoraux3 -> .)
    FLOAT_CTE       reduce using rule 57 (factoraux3 -> .)

    expresion                      shift and go to state 66
    exp                            shift and go to state 67
    termino                        shift and go to state 68
    factor                         shift and go to state 69
    factoraux                      shift and go to state 70
    factoraux2                     shift and go to state 71
    factoraux3                     shift and go to state 73

state 61

    (48) condicion -> IF LEFTPARENTHESES . expresion RIGHTPARENTHESES bloque condicionaux
    (30) expresion -> . exp expresionaux
    (40) exp -> . termino seen_termino
    (41) exp -> . termino seen_termino expaux
    (44) termino -> . factor seen_factor
    (45) termino -> . factor seen_factor terminoaux
    (51) factor -> . factoraux
    (52) factor -> . factoraux2
    (53) factoraux -> . LEFTPARENTHESES expresion RIGHTPARENTHESES
    (54) factoraux2 -> . factoraux3 varcte
    (55) factoraux3 -> . PLUS
    (56) factoraux3 -> . MINUS
    (57) factoraux3 -> .

    LEFTPARENTHESES shift and go to state 72
    PLUS            shift and go to state 74
    MINUS           shift and go to state 75
    ID              reduce using rule 57 (factoraux3 -> .)
    INT_CTE         reduce using rule 57 (factoraux3 -> .)
    FLOAT_CTE       reduce using rule 57 (factoraux3 -> .)

    expresion                      shift and go to state 76
    exp                            shift and go to state 67
    termino                        shift and go to state 68
    factor                         shift and go to state 69
    factoraux                      shift and go to state 70
    factoraux2                     shift and go to state 71
    factoraux3                     shift and go to state 73

state 62

    (35) escritura -> PRINT LEFTPARENTHESES . escrituraaux RIGHTPARENTHESES SEMICOLON
    (36) escrituraaux -> . expresion
    (37) escrituraaux -> . STRING_CTE
    (38) escrituraaux -> . expresion COMMA escrituraaux
    (39) escrituraaux -> . STRING_CTE COMMA escrituraaux
    (30) expresion -> . exp expresionaux
    (40) exp -> . termino seen_termino
    (41) exp -> . termino seen_termino expaux
    (44) termino -> . factor seen_factor
    (45) termino -> . factor seen_factor terminoaux
    (51) factor -> . factoraux
    (52) factor -> . factoraux2
    (53) factoraux -> . LEFTPARENTHESES expresion RIGHTPARENTHESES
    (54) factoraux2 -> . factoraux3 varcte
    (55) factoraux3 -> . PLUS
    (56) factoraux3 -> . MINUS
    (57) factoraux3 -> .

    STRING_CTE      shift and go to state 79
    LEFTPARENTHESES shift and go to state 72
    PLUS            shift and go to state 74
    MINUS           shift and go to state 75
    ID              reduce using rule 57 (factoraux3 -> .)
    INT_CTE         reduce using rule 57 (factoraux3 -> .)
    FLOAT_CTE       reduce using rule 57 (factoraux3 -> .)

    escrituraaux                   shift and go to state 77
    expresion                      shift and go to state 78
    exp                            shift and go to state 67
    termino                        shift and go to state 68
    factor                         shift and go to state 69
    factoraux                      shift and go to state 70
    factoraux2                     shift and go to state 71
    factoraux3                     shift and go to state 73

state 63

    (58) varcte -> ID seen_ID .

    EQUALS          reduce using rule 58 (varcte -> ID seen_ID .)
    DIVIDE          reduce using rule 58 (varcte -> ID seen_ID .)
    MULTIPLY        reduce using rule 58 (varcte -> ID seen_ID .)
    PLUS            reduce using rule 58 (varcte -> ID seen_ID .)
    MINUS           reduce using rule 58 (varcte -> ID seen_ID .)
    GREATERTHAN     reduce using rule 58 (varcte -> ID seen_ID .)
    LESSTHAN        reduce using rule 58 (varcte -> ID seen_ID .)
    NOTEQUALS       reduce using rule 58 (varcte -> ID seen_ID .)
    SEMICOLON       reduce using rule 58 (varcte -> ID seen_ID .)
    RIGHTPARENTHESES reduce using rule 58 (varcte -> ID seen_ID .)
    COMMA           reduce using rule 58 (varcte -> ID seen_ID .)


state 64

    (21) paramsaux -> ID COLON tipo .
    (22) paramsaux -> ID COLON tipo . COMMA paramsaux

    RIGHTPARENTHESES reduce using rule 21 (paramsaux -> ID COLON tipo .)
    COMMA           shift and go to state 80


state 65

    (8) varsaux -> COMMA ID seen_ID_var varsaux .

    SEMICOLON       reduce using rule 8 (varsaux -> COMMA ID seen_ID_var varsaux .)


state 66

    (29) asignacion -> varcte EQUALS expresion . SEMICOLON

    SEMICOLON       shift and go to state 81


state 67

    (30) expresion -> exp . expresionaux
    (31) expresionaux -> . GREATERTHAN exp
    (32) expresionaux -> . LESSTHAN exp
    (33) expresionaux -> . NOTEQUALS exp
    (34) expresionaux -> .

    GREATERTHAN     shift and go to state 83
    LESSTHAN        shift and go to state 84
    NOTEQUALS       shift and go to state 85
    SEMICOLON       reduce using rule 34 (expresionaux -> .)
    RIGHTPARENTHESES reduce using rule 34 (expresionaux -> .)
    COMMA           reduce using rule 34 (expresionaux -> .)

    expresionaux                   shift and go to state 82

state 68

    (40) exp -> termino . seen_termino
    (41) exp -> termino . seen_termino expaux
    (63) seen_termino -> .

    PLUS            reduce using rule 63 (seen_termino -> .)
    MINUS           reduce using rule 63 (seen_termino -> .)
    GREATERTHAN     reduce using rule 63 (seen_termino -> .)
    LESSTHAN        reduce using rule 63 (seen_termino -> .)
    NOTEQUALS       reduce using rule 63 (seen_termino -> .)
    SEMICOLON       reduce using rule 63 (seen_termino -> .)
    RIGHTPARENTHESES reduce using rule 63 (seen_termino -> .)
    COMMA           reduce using rule 63 (seen_termino -> .)

    seen_termino                   shift and go to state 86

state 69

    (44) termino -> factor . seen_factor
    (45) termino -> factor . seen_factor terminoaux
    (64) seen_factor -> .

    DIVIDE          reduce using rule 64 (seen_factor -> .)
    MULTIPLY        reduce using rule 64 (seen_factor -> .)
    PLUS            reduce using rule 64 (seen_factor -> .)
    MINUS           reduce using rule 64 (seen_factor -> .)
    GREATERTHAN     reduce using rule 64 (seen_factor -> .)
    LESSTHAN        reduce using rule 64 (seen_factor -> .)
    NOTEQUALS       reduce using rule 64 (seen_factor -> .)
    SEMICOLON       reduce using rule 64 (seen_factor -> .)
    RIGHTPARENTHESES reduce using rule 64 (seen_factor -> .)
    COMMA           reduce using rule 64 (seen_factor -> .)

    seen_factor                    shift and go to state 87

state 70

    (51) factor -> factoraux .

    DIVIDE          reduce using rule 51 (factor -> factoraux .)
    MULTIPLY        reduce using rule 51 (factor -> factoraux .)
    PLUS            reduce using rule 51 (factor -> factoraux .)
    MINUS           reduce using rule 51 (factor -> factoraux .)
    GREATERTHAN     reduce using rule 51 (factor -> factoraux .)
    LESSTHAN        reduce using rule 51 (factor -> factoraux .)
    NOTEQUALS       reduce using rule 51 (factor -> factoraux .)
    SEMICOLON       reduce using rule 51 (factor -> factoraux .)
    RIGHTPARENTHESES reduce using rule 51 (factor -> factoraux .)
    COMMA           reduce using rule 51 (factor -> factoraux .)


state 71

    (52) factor -> factoraux2 .

    DIVIDE          reduce using rule 52 (factor -> factoraux2 .)
    MULTIPLY        reduce using rule 52 (factor -> factoraux2 .)
    PLUS            reduce using rule 52 (factor -> factoraux2 .)
    MINUS           reduce using rule 52 (factor -> factoraux2 .)
    GREATERTHAN     reduce using rule 52 (factor -> factoraux2 .)
    LESSTHAN        reduce using rule 52 (factor -> factoraux2 .)
    NOTEQUALS       reduce using rule 52 (factor -> factoraux2 .)
    SEMICOLON       reduce using rule 52 (factor -> factoraux2 .)
    RIGHTPARENTHESES reduce using rule 52 (factor -> factoraux2 .)
    COMMA           reduce using rule 52 (factor -> factoraux2 .)


state 72

    (53) factoraux -> LEFTPARENTHESES . expresion RIGHTPARENTHESES
    (30) expresion -> . exp expresionaux
    (40) exp -> . termino seen_termino
    (41) exp -> . termino seen_termino expaux
    (44) termino -> . factor seen_factor
    (45) termino -> . factor seen_factor terminoaux
    (51) factor -> . factoraux
    (52) factor -> . factoraux2
    (53) factoraux -> . LEFTPARENTHESES expresion RIGHTPARENTHESES
    (54) factoraux2 -> . factoraux3 varcte
    (55) factoraux3 -> . PLUS
    (56) factoraux3 -> . MINUS
    (57) factoraux3 -> .

    LEFTPARENTHESES shift and go to state 72
    PLUS            shift and go to state 74
    MINUS           shift and go to state 75
    ID              reduce using rule 57 (factoraux3 -> .)
    INT_CTE         reduce using rule 57 (factoraux3 -> .)
    FLOAT_CTE       reduce using rule 57 (factoraux3 -> .)

    expresion                      shift and go to state 88
    exp                            shift and go to state 67
    termino                        shift and go to state 68
    factor                         shift and go to state 69
    factoraux                      shift and go to state 70
    factoraux2                     shift and go to state 71
    factoraux3                     shift and go to state 73

state 73

    (54) factoraux2 -> factoraux3 . varcte
    (58) varcte -> . ID seen_ID
    (59) varcte -> . INT_CTE
    (60) varcte -> . FLOAT_CTE

    ID              shift and go to state 51
    INT_CTE         shift and go to state 52
    FLOAT_CTE       shift and go to state 53

    varcte                         shift and go to state 89

state 74

    (55) factoraux3 -> PLUS .

    ID              reduce using rule 55 (factoraux3 -> PLUS .)
    INT_CTE         reduce using rule 55 (factoraux3 -> PLUS .)
    FLOAT_CTE       reduce using rule 55 (factoraux3 -> PLUS .)


state 75

    (56) factoraux3 -> MINUS .

    ID              reduce using rule 56 (factoraux3 -> MINUS .)
    INT_CTE         reduce using rule 56 (factoraux3 -> MINUS .)
    FLOAT_CTE       reduce using rule 56 (factoraux3 -> MINUS .)


state 76

    (48) condicion -> IF LEFTPARENTHESES expresion . RIGHTPARENTHESES bloque condicionaux

    RIGHTPARENTHESES shift and go to state 90


state 77

    (35) escritura -> PRINT LEFTPARENTHESES escrituraaux . RIGHTPARENTHESES SEMICOLON

    RIGHTPARENTHESES shift and go to state 91


state 78

    (36) escrituraaux -> expresion .
    (38) escrituraaux -> expresion . COMMA escrituraaux

    RIGHTPARENTHESES reduce using rule 36 (escrituraaux -> expresion .)
    COMMA           shift and go to state 92


state 79

    (37) escrituraaux -> STRING_CTE .
    (39) escrituraaux -> STRING_CTE . COMMA escrituraaux

    RIGHTPARENTHESES reduce using rule 37 (escrituraaux -> STRING_CTE .)
    COMMA           shift and go to state 93


state 80

    (22) paramsaux -> ID COLON tipo COMMA . paramsaux
    (21) paramsaux -> . ID COLON tipo
    (22) paramsaux -> . ID COLON tipo COMMA paramsaux

    ID              shift and go to state 40

    paramsaux                      shift and go to state 94

state 81

    (29) asignacion -> varcte EQUALS expresion SEMICOLON .

    IF              reduce using rule 29 (asignacion -> varcte EQUALS expresion SEMICOLON .)
    PRINT           reduce using rule 29 (asignacion -> varcte EQUALS expresion SEMICOLON .)
    ID              reduce using rule 29 (asignacion -> varcte EQUALS expresion SEMICOLON .)
    INT_CTE         reduce using rule 29 (asignacion -> varcte EQUALS expresion SEMICOLON .)
    FLOAT_CTE       reduce using rule 29 (asignacion -> varcte EQUALS expresion SEMICOLON .)
    RIGHTBRACE      reduce using rule 29 (asignacion -> varcte EQUALS expresion SEMICOLON .)


state 82

    (30) expresion -> exp expresionaux .

    SEMICOLON       reduce using rule 30 (expresion -> exp expresionaux .)
    RIGHTPARENTHESES reduce using rule 30 (expresion -> exp expresionaux .)
    COMMA           reduce using rule 30 (expresion -> exp expresionaux .)


state 83

    (31) expresionaux -> GREATERTHAN . exp
    (40) exp -> . termino seen_termino
    (41) exp -> . termino seen_termino expaux
    (44) termino -> . factor seen_factor
    (45) termino -> . factor seen_factor terminoaux
    (51) factor -> . factoraux
    (52) factor -> . factoraux2
    (53) factoraux -> . LEFTPARENTHESES expresion RIGHTPARENTHESES
    (54) factoraux2 -> . factoraux3 varcte
    (55) factoraux3 -> . PLUS
    (56) factoraux3 -> . MINUS
    (57) factoraux3 -> .

    LEFTPARENTHESES shift and go to state 72
    PLUS            shift and go to state 74
    MINUS           shift and go to state 75
    ID              reduce using rule 57 (factoraux3 -> .)
    INT_CTE         reduce using rule 57 (factoraux3 -> .)
    FLOAT_CTE       reduce using rule 57 (factoraux3 -> .)

    exp                            shift and go to state 95
    termino                        shift and go to state 68
    factor                         shift and go to state 69
    factoraux                      shift and go to state 70
    factoraux2                     shift and go to state 71
    factoraux3                     shift and go to state 73

state 84

    (32) expresionaux -> LESSTHAN . exp
    (40) exp -> . termino seen_termino
    (41) exp -> . termino seen_termino expaux
    (44) termino -> . factor seen_factor
    (45) termino -> . factor seen_factor terminoaux
    (51) factor -> . factoraux
    (52) factor -> . factoraux2
    (53) factoraux -> . LEFTPARENTHESES expresion RIGHTPARENTHESES
    (54) factoraux2 -> . factoraux3 varcte
    (55) factoraux3 -> . PLUS
    (56) factoraux3 -> . MINUS
    (57) factoraux3 -> .

    LEFTPARENTHESES shift and go to state 72
    PLUS            shift and go to state 74
    MINUS           shift and go to state 75
    ID              reduce using rule 57 (factoraux3 -> .)
    INT_CTE         reduce using rule 57 (factoraux3 -> .)
    FLOAT_CTE       reduce using rule 57 (factoraux3 -> .)

    exp                            shift and go to state 96
    termino                        shift and go to state 68
    factor                         shift and go to state 69
    factoraux                      shift and go to state 70
    factoraux2                     shift and go to state 71
    factoraux3                     shift and go to state 73

state 85

    (33) expresionaux -> NOTEQUALS . exp
    (40) exp -> . termino seen_termino
    (41) exp -> . termino seen_termino expaux
    (44) termino -> . factor seen_factor
    (45) termino -> . factor seen_factor terminoaux
    (51) factor -> . factoraux
    (52) factor -> . factoraux2
    (53) factoraux -> . LEFTPARENTHESES expresion RIGHTPARENTHESES
    (54) factoraux2 -> . factoraux3 varcte
    (55) factoraux3 -> . PLUS
    (56) factoraux3 -> . MINUS
    (57) factoraux3 -> .

    LEFTPARENTHESES shift and go to state 72
    PLUS            shift and go to state 74
    MINUS           shift and go to state 75
    ID              reduce using rule 57 (factoraux3 -> .)
    INT_CTE         reduce using rule 57 (factoraux3 -> .)
    FLOAT_CTE       reduce using rule 57 (factoraux3 -> .)

    exp                            shift and go to state 97
    termino                        shift and go to state 68
    factor                         shift and go to state 69
    factoraux                      shift and go to state 70
    factoraux2                     shift and go to state 71
    factoraux3                     shift and go to state 73

state 86

    (40) exp -> termino seen_termino .
    (41) exp -> termino seen_termino . expaux
    (42) expaux -> . PLUS seen_operador exp
    (43) expaux -> . MINUS seen_operador exp

    GREATERTHAN     reduce using rule 40 (exp -> termino seen_termino .)
    LESSTHAN        reduce using rule 40 (exp -> termino seen_termino .)
    NOTEQUALS       reduce using rule 40 (exp -> termino seen_termino .)
    SEMICOLON       reduce using rule 40 (exp -> termino seen_termino .)
    RIGHTPARENTHESES reduce using rule 40 (exp -> termino seen_termino .)
    COMMA           reduce using rule 40 (exp -> termino seen_termino .)
    PLUS            shift and go to state 99
    MINUS           shift and go to state 100

    expaux                         shift and go to state 98

state 87

    (44) termino -> factor seen_factor .
    (45) termino -> factor seen_factor . terminoaux
    (46) terminoaux -> . DIVIDE seen_operador termino
    (47) terminoaux -> . MULTIPLY seen_operador termino

    PLUS            reduce using rule 44 (termino -> factor seen_factor .)
    MINUS           reduce using rule 44 (termino -> factor seen_factor .)
    GREATERTHAN     reduce using rule 44 (termino -> factor seen_factor .)
    LESSTHAN        reduce using rule 44 (termino -> factor seen_factor .)
    NOTEQUALS       reduce using rule 44 (termino -> factor seen_factor .)
    SEMICOLON       reduce using rule 44 (termino -> factor seen_factor .)
    RIGHTPARENTHESES reduce using rule 44 (termino -> factor seen_factor .)
    COMMA           reduce using rule 44 (termino -> factor seen_factor .)
    DIVIDE          shift and go to state 102
    MULTIPLY        shift and go to state 103

    terminoaux                     shift and go to state 101

state 88

    (53) factoraux -> LEFTPARENTHESES expresion . RIGHTPARENTHESES

    RIGHTPARENTHESES shift and go to state 104


state 89

    (54) factoraux2 -> factoraux3 varcte .

    DIVIDE          reduce using rule 54 (factoraux2 -> factoraux3 varcte .)
    MULTIPLY        reduce using rule 54 (factoraux2 -> factoraux3 varcte .)
    PLUS            reduce using rule 54 (factoraux2 -> factoraux3 varcte .)
    MINUS           reduce using rule 54 (factoraux2 -> factoraux3 varcte .)
    GREATERTHAN     reduce using rule 54 (factoraux2 -> factoraux3 varcte .)
    LESSTHAN        reduce using rule 54 (factoraux2 -> factoraux3 varcte .)
    NOTEQUALS       reduce using rule 54 (factoraux2 -> factoraux3 varcte .)
    SEMICOLON       reduce using rule 54 (factoraux2 -> factoraux3 varcte .)
    RIGHTPARENTHESES reduce using rule 54 (factoraux2 -> factoraux3 varcte .)
    COMMA           reduce using rule 54 (factoraux2 -> factoraux3 varcte .)


state 90

    (48) condicion -> IF LEFTPARENTHESES expresion RIGHTPARENTHESES . bloque condicionaux
    (23) bloque -> . LEFTBRACE vars bloqueaux RIGHTBRACE

    LEFTBRACE       shift and go to state 32

    bloque                         shift and go to state 105

state 91

    (35) escritura -> PRINT LEFTPARENTHESES escrituraaux RIGHTPARENTHESES . SEMICOLON

    SEMICOLON       shift and go to state 106


state 92

    (38) escrituraaux -> expresion COMMA . escrituraaux
    (36) escrituraaux -> . expresion
    (37) escrituraaux -> . STRING_CTE
    (38) escrituraaux -> . expresion COMMA escrituraaux
    (39) escrituraaux -> . STRING_CTE COMMA escrituraaux
    (30) expresion -> . exp expresionaux
    (40) exp -> . termino seen_termino
    (41) exp -> . termino seen_termino expaux
    (44) termino -> . factor seen_factor
    (45) termino -> . factor seen_factor terminoaux
    (51) factor -> . factoraux
    (52) factor -> . factoraux2
    (53) factoraux -> . LEFTPARENTHESES expresion RIGHTPARENTHESES
    (54) factoraux2 -> . factoraux3 varcte
    (55) factoraux3 -> . PLUS
    (56) factoraux3 -> . MINUS
    (57) factoraux3 -> .

    STRING_CTE      shift and go to state 79
    LEFTPARENTHESES shift and go to state 72
    PLUS            shift and go to state 74
    MINUS           shift and go to state 75
    ID              reduce using rule 57 (factoraux3 -> .)
    INT_CTE         reduce using rule 57 (factoraux3 -> .)
    FLOAT_CTE       reduce using rule 57 (factoraux3 -> .)

    expresion                      shift and go to state 78
    escrituraaux                   shift and go to state 107
    exp                            shift and go to state 67
    termino                        shift and go to state 68
    factor                         shift and go to state 69
    factoraux                      shift and go to state 70
    factoraux2                     shift and go to state 71
    factoraux3                     shift and go to state 73

state 93

    (39) escrituraaux -> STRING_CTE COMMA . escrituraaux
    (36) escrituraaux -> . expresion
    (37) escrituraaux -> . STRING_CTE
    (38) escrituraaux -> . expresion COMMA escrituraaux
    (39) escrituraaux -> . STRING_CTE COMMA escrituraaux
    (30) expresion -> . exp expresionaux
    (40) exp -> . termino seen_termino
    (41) exp -> . termino seen_termino expaux
    (44) termino -> . factor seen_factor
    (45) termino -> . factor seen_factor terminoaux
    (51) factor -> . factoraux
    (52) factor -> . factoraux2
    (53) factoraux -> . LEFTPARENTHESES expresion RIGHTPARENTHESES
    (54) factoraux2 -> . factoraux3 varcte
    (55) factoraux3 -> . PLUS
    (56) factoraux3 -> . MINUS
    (57) factoraux3 -> .

    STRING_CTE      shift and go to state 79
    LEFTPARENTHESES shift and go to state 72
    PLUS            shift and go to state 74
    MINUS           shift and go to state 75
    ID              reduce using rule 57 (factoraux3 -> .)
    INT_CTE         reduce using rule 57 (factoraux3 -> .)
    FLOAT_CTE       reduce using rule 57 (factoraux3 -> .)

    escrituraaux                   shift and go to state 108
    expresion                      shift and go to state 78
    exp                            shift and go to state 67
    termino                        shift and go to state 68
    factor                         shift and go to state 69
    factoraux                      shift and go to state 70
    factoraux2                     shift and go to state 71
    factoraux3                     shift and go to state 73

state 94

    (22) paramsaux -> ID COLON tipo COMMA paramsaux .

    RIGHTPARENTHESES reduce using rule 22 (paramsaux -> ID COLON tipo COMMA paramsaux .)


state 95

    (31) expresionaux -> GREATERTHAN exp .

    SEMICOLON       reduce using rule 31 (expresionaux -> GREATERTHAN exp .)
    RIGHTPARENTHESES reduce using rule 31 (expresionaux -> GREATERTHAN exp .)
    COMMA           reduce using rule 31 (expresionaux -> GREATERTHAN exp .)


state 96

    (32) expresionaux -> LESSTHAN exp .

    SEMICOLON       reduce using rule 32 (expresionaux -> LESSTHAN exp .)
    RIGHTPARENTHESES reduce using rule 32 (expresionaux -> LESSTHAN exp .)
    COMMA           reduce using rule 32 (expresionaux -> LESSTHAN exp .)


state 97

    (33) expresionaux -> NOTEQUALS exp .

    SEMICOLON       reduce using rule 33 (expresionaux -> NOTEQUALS exp .)
    RIGHTPARENTHESES reduce using rule 33 (expresionaux -> NOTEQUALS exp .)
    COMMA           reduce using rule 33 (expresionaux -> NOTEQUALS exp .)


state 98

    (41) exp -> termino seen_termino expaux .

    GREATERTHAN     reduce using rule 41 (exp -> termino seen_termino expaux .)
    LESSTHAN        reduce using rule 41 (exp -> termino seen_termino expaux .)
    NOTEQUALS       reduce using rule 41 (exp -> termino seen_termino expaux .)
    SEMICOLON       reduce using rule 41 (exp -> termino seen_termino expaux .)
    RIGHTPARENTHESES reduce using rule 41 (exp -> termino seen_termino expaux .)
    COMMA           reduce using rule 41 (exp -> termino seen_termino expaux .)


state 99

    (42) expaux -> PLUS . seen_operador exp
    (62) seen_operador -> .

    LEFTPARENTHESES reduce using rule 62 (seen_operador -> .)
    PLUS            reduce using rule 62 (seen_operador -> .)
    MINUS           reduce using rule 62 (seen_operador -> .)
    ID              reduce using rule 62 (seen_operador -> .)
    INT_CTE         reduce using rule 62 (seen_operador -> .)
    FLOAT_CTE       reduce using rule 62 (seen_operador -> .)

    seen_operador                  shift and go to state 109

state 100

    (43) expaux -> MINUS . seen_operador exp
    (62) seen_operador -> .

    LEFTPARENTHESES reduce using rule 62 (seen_operador -> .)
    PLUS            reduce using rule 62 (seen_operador -> .)
    MINUS           reduce using rule 62 (seen_operador -> .)
    ID              reduce using rule 62 (seen_operador -> .)
    INT_CTE         reduce using rule 62 (seen_operador -> .)
    FLOAT_CTE       reduce using rule 62 (seen_operador -> .)

    seen_operador                  shift and go to state 110

state 101

    (45) termino -> factor seen_factor terminoaux .

    PLUS            reduce using rule 45 (termino -> factor seen_factor terminoaux .)
    MINUS           reduce using rule 45 (termino -> factor seen_factor terminoaux .)
    GREATERTHAN     reduce using rule 45 (termino -> factor seen_factor terminoaux .)
    LESSTHAN        reduce using rule 45 (termino -> factor seen_factor terminoaux .)
    NOTEQUALS       reduce using rule 45 (termino -> factor seen_factor terminoaux .)
    SEMICOLON       reduce using rule 45 (termino -> factor seen_factor terminoaux .)
    RIGHTPARENTHESES reduce using rule 45 (termino -> factor seen_factor terminoaux .)
    COMMA           reduce using rule 45 (termino -> factor seen_factor terminoaux .)


state 102

    (46) terminoaux -> DIVIDE . seen_operador termino
    (62) seen_operador -> .

    LEFTPARENTHESES reduce using rule 62 (seen_operador -> .)
    PLUS            reduce using rule 62 (seen_operador -> .)
    MINUS           reduce using rule 62 (seen_operador -> .)
    ID              reduce using rule 62 (seen_operador -> .)
    INT_CTE         reduce using rule 62 (seen_operador -> .)
    FLOAT_CTE       reduce using rule 62 (seen_operador -> .)

    seen_operador                  shift and go to state 111

state 103

    (47) terminoaux -> MULTIPLY . seen_operador termino
    (62) seen_operador -> .

    LEFTPARENTHESES reduce using rule 62 (seen_operador -> .)
    PLUS            reduce using rule 62 (seen_operador -> .)
    MINUS           reduce using rule 62 (seen_operador -> .)
    ID              reduce using rule 62 (seen_operador -> .)
    INT_CTE         reduce using rule 62 (seen_operador -> .)
    FLOAT_CTE       reduce using rule 62 (seen_operador -> .)

    seen_operador                  shift and go to state 112

state 104

    (53) factoraux -> LEFTPARENTHESES expresion RIGHTPARENTHESES .

    DIVIDE          reduce using rule 53 (factoraux -> LEFTPARENTHESES expresion RIGHTPARENTHESES .)
    MULTIPLY        reduce using rule 53 (factoraux -> LEFTPARENTHESES expresion RIGHTPARENTHESES .)
    PLUS            reduce using rule 53 (factoraux -> LEFTPARENTHESES expresion RIGHTPARENTHESES .)
    MINUS           reduce using rule 53 (factoraux -> LEFTPARENTHESES expresion RIGHTPARENTHESES .)
    GREATERTHAN     reduce using rule 53 (factoraux -> LEFTPARENTHESES expresion RIGHTPARENTHESES .)
    LESSTHAN        reduce using rule 53 (factoraux -> LEFTPARENTHESES expresion RIGHTPARENTHESES .)
    NOTEQUALS       reduce using rule 53 (factoraux -> LEFTPARENTHESES expresion RIGHTPARENTHESES .)
    SEMICOLON       reduce using rule 53 (factoraux -> LEFTPARENTHESES expresion RIGHTPARENTHESES .)
    RIGHTPARENTHESES reduce using rule 53 (factoraux -> LEFTPARENTHESES expresion RIGHTPARENTHESES .)
    COMMA           reduce using rule 53 (factoraux -> LEFTPARENTHESES expresion RIGHTPARENTHESES .)


state 105

    (48) condicion -> IF LEFTPARENTHESES expresion RIGHTPARENTHESES bloque . condicionaux
    (49) condicionaux -> . ELSE bloque SEMICOLON
    (50) condicionaux -> . SEMICOLON

    ELSE            shift and go to state 114
    SEMICOLON       shift and go to state 115

    condicionaux                   shift and go to state 113

state 106

    (35) escritura -> PRINT LEFTPARENTHESES escrituraaux RIGHTPARENTHESES SEMICOLON .

    IF              reduce using rule 35 (escritura -> PRINT LEFTPARENTHESES escrituraaux RIGHTPARENTHESES SEMICOLON .)
    PRINT           reduce using rule 35 (escritura -> PRINT LEFTPARENTHESES escrituraaux RIGHTPARENTHESES SEMICOLON .)
    ID              reduce using rule 35 (escritura -> PRINT LEFTPARENTHESES escrituraaux RIGHTPARENTHESES SEMICOLON .)
    INT_CTE         reduce using rule 35 (escritura -> PRINT LEFTPARENTHESES escrituraaux RIGHTPARENTHESES SEMICOLON .)
    FLOAT_CTE       reduce using rule 35 (escritura -> PRINT LEFTPARENTHESES escrituraaux RIGHTPARENTHESES SEMICOLON .)
    RIGHTBRACE      reduce using rule 35 (escritura -> PRINT LEFTPARENTHESES escrituraaux RIGHTPARENTHESES SEMICOLON .)


state 107

    (38) escrituraaux -> expresion COMMA escrituraaux .

    RIGHTPARENTHESES reduce using rule 38 (escrituraaux -> expresion COMMA escrituraaux .)


state 108

    (39) escrituraaux -> STRING_CTE COMMA escrituraaux .

    RIGHTPARENTHESES reduce using rule 39 (escrituraaux -> STRING_CTE COMMA escrituraaux .)


state 109

    (42) expaux -> PLUS seen_operador . exp
    (40) exp -> . termino seen_termino
    (41) exp -> . termino seen_termino expaux
    (44) termino -> . factor seen_factor
    (45) termino -> . factor seen_factor terminoaux
    (51) factor -> . factoraux
    (52) factor -> . factoraux2
    (53) factoraux -> . LEFTPARENTHESES expresion RIGHTPARENTHESES
    (54) factoraux2 -> . factoraux3 varcte
    (55) factoraux3 -> . PLUS
    (56) factoraux3 -> . MINUS
    (57) factoraux3 -> .

    LEFTPARENTHESES shift and go to state 72
    PLUS            shift and go to state 74
    MINUS           shift and go to state 75
    ID              reduce using rule 57 (factoraux3 -> .)
    INT_CTE         reduce using rule 57 (factoraux3 -> .)
    FLOAT_CTE       reduce using rule 57 (factoraux3 -> .)

    exp                            shift and go to state 116
    termino                        shift and go to state 68
    factor                         shift and go to state 69
    factoraux                      shift and go to state 70
    factoraux2                     shift and go to state 71
    factoraux3                     shift and go to state 73

state 110

    (43) expaux -> MINUS seen_operador . exp
    (40) exp -> . termino seen_termino
    (41) exp -> . termino seen_termino expaux
    (44) termino -> . factor seen_factor
    (45) termino -> . factor seen_factor terminoaux
    (51) factor -> . factoraux
    (52) factor -> . factoraux2
    (53) factoraux -> . LEFTPARENTHESES expresion RIGHTPARENTHESES
    (54) factoraux2 -> . factoraux3 varcte
    (55) factoraux3 -> . PLUS
    (56) factoraux3 -> . MINUS
    (57) factoraux3 -> .

    LEFTPARENTHESES shift and go to state 72
    PLUS            shift and go to state 74
    MINUS           shift and go to state 75
    ID              reduce using rule 57 (factoraux3 -> .)
    INT_CTE         reduce using rule 57 (factoraux3 -> .)
    FLOAT_CTE       reduce using rule 57 (factoraux3 -> .)

    exp                            shift and go to state 117
    termino                        shift and go to state 68
    factor                         shift and go to state 69
    factoraux                      shift and go to state 70
    factoraux2                     shift and go to state 71
    factoraux3                     shift and go to state 73

state 111

    (46) terminoaux -> DIVIDE seen_operador . termino
    (44) termino -> . factor seen_factor
    (45) termino -> . factor seen_factor terminoaux
    (51) factor -> . factoraux
    (52) factor -> . factoraux2
    (53) factoraux -> . LEFTPARENTHESES expresion RIGHTPARENTHESES
    (54) factoraux2 -> . factoraux3 varcte
    (55) factoraux3 -> . PLUS
    (56) factoraux3 -> . MINUS
    (57) factoraux3 -> .

    LEFTPARENTHESES shift and go to state 72
    PLUS            shift and go to state 74
    MINUS           shift and go to state 75
    ID              reduce using rule 57 (factoraux3 -> .)
    INT_CTE         reduce using rule 57 (factoraux3 -> .)
    FLOAT_CTE       reduce using rule 57 (factoraux3 -> .)

    termino                        shift and go to state 118
    factor                         shift and go to state 69
    factoraux                      shift and go to state 70
    factoraux2                     shift and go to state 71
    factoraux3                     shift and go to state 73

state 112

    (47) terminoaux -> MULTIPLY seen_operador . termino
    (44) termino -> . factor seen_factor
    (45) termino -> . factor seen_factor terminoaux
    (51) factor -> . factoraux
    (52) factor -> . factoraux2
    (53) factoraux -> . LEFTPARENTHESES expresion RIGHTPARENTHESES
    (54) factoraux2 -> . factoraux3 varcte
    (55) factoraux3 -> . PLUS
    (56) factoraux3 -> . MINUS
    (57) factoraux3 -> .

    LEFTPARENTHESES shift and go to state 72
    PLUS            shift and go to state 74
    MINUS           shift and go to state 75
    ID              reduce using rule 57 (factoraux3 -> .)
    INT_CTE         reduce using rule 57 (factoraux3 -> .)
    FLOAT_CTE       reduce using rule 57 (factoraux3 -> .)

    termino                        shift and go to state 119
    factor                         shift and go to state 69
    factoraux                      shift and go to state 70
    factoraux2                     shift and go to state 71
    factoraux3                     shift and go to state 73

state 113

    (48) condicion -> IF LEFTPARENTHESES expresion RIGHTPARENTHESES bloque condicionaux .

    IF              reduce using rule 48 (condicion -> IF LEFTPARENTHESES expresion RIGHTPARENTHESES bloque condicionaux .)
    PRINT           reduce using rule 48 (condicion -> IF LEFTPARENTHESES expresion RIGHTPARENTHESES bloque condicionaux .)
    ID              reduce using rule 48 (condicion -> IF LEFTPARENTHESES expresion RIGHTPARENTHESES bloque condicionaux .)
    INT_CTE         reduce using rule 48 (condicion -> IF LEFTPARENTHESES expresion RIGHTPARENTHESES bloque condicionaux .)
    FLOAT_CTE       reduce using rule 48 (condicion -> IF LEFTPARENTHESES expresion RIGHTPARENTHESES bloque condicionaux .)
    RIGHTBRACE      reduce using rule 48 (condicion -> IF LEFTPARENTHESES expresion RIGHTPARENTHESES bloque condicionaux .)


state 114

    (49) condicionaux -> ELSE . bloque SEMICOLON
    (23) bloque -> . LEFTBRACE vars bloqueaux RIGHTBRACE

    LEFTBRACE       shift and go to state 32

    bloque                         shift and go to state 120

state 115

    (50) condicionaux -> SEMICOLON .

    IF              reduce using rule 50 (condicionaux -> SEMICOLON .)
    PRINT           reduce using rule 50 (condicionaux -> SEMICOLON .)
    ID              reduce using rule 50 (condicionaux -> SEMICOLON .)
    INT_CTE         reduce using rule 50 (condicionaux -> SEMICOLON .)
    FLOAT_CTE       reduce using rule 50 (condicionaux -> SEMICOLON .)
    RIGHTBRACE      reduce using rule 50 (condicionaux -> SEMICOLON .)


state 116

    (42) expaux -> PLUS seen_operador exp .

    GREATERTHAN     reduce using rule 42 (expaux -> PLUS seen_operador exp .)
    LESSTHAN        reduce using rule 42 (expaux -> PLUS seen_operador exp .)
    NOTEQUALS       reduce using rule 42 (expaux -> PLUS seen_operador exp .)
    SEMICOLON       reduce using rule 42 (expaux -> PLUS seen_operador exp .)
    RIGHTPARENTHESES reduce using rule 42 (expaux -> PLUS seen_operador exp .)
    COMMA           reduce using rule 42 (expaux -> PLUS seen_operador exp .)


state 117

    (43) expaux -> MINUS seen_operador exp .

    GREATERTHAN     reduce using rule 43 (expaux -> MINUS seen_operador exp .)
    LESSTHAN        reduce using rule 43 (expaux -> MINUS seen_operador exp .)
    NOTEQUALS       reduce using rule 43 (expaux -> MINUS seen_operador exp .)
    SEMICOLON       reduce using rule 43 (expaux -> MINUS seen_operador exp .)
    RIGHTPARENTHESES reduce using rule 43 (expaux -> MINUS seen_operador exp .)
    COMMA           reduce using rule 43 (expaux -> MINUS seen_operador exp .)


state 118

    (46) terminoaux -> DIVIDE seen_operador termino .

    PLUS            reduce using rule 46 (terminoaux -> DIVIDE seen_operador termino .)
    MINUS           reduce using rule 46 (terminoaux -> DIVIDE seen_operador termino .)
    GREATERTHAN     reduce using rule 46 (terminoaux -> DIVIDE seen_operador termino .)
    LESSTHAN        reduce using rule 46 (terminoaux -> DIVIDE seen_operador termino .)
    NOTEQUALS       reduce using rule 46 (terminoaux -> DIVIDE seen_operador termino .)
    SEMICOLON       reduce using rule 46 (terminoaux -> DIVIDE seen_operador termino .)
    RIGHTPARENTHESES reduce using rule 46 (terminoaux -> DIVIDE seen_operador termino .)
    COMMA           reduce using rule 46 (terminoaux -> DIVIDE seen_operador termino .)


state 119

    (47) terminoaux -> MULTIPLY seen_operador termino .

    PLUS            reduce using rule 47 (terminoaux -> MULTIPLY seen_operador termino .)
    MINUS           reduce using rule 47 (terminoaux -> MULTIPLY seen_operador termino .)
    GREATERTHAN     reduce using rule 47 (terminoaux -> MULTIPLY seen_operador termino .)
    LESSTHAN        reduce using rule 47 (terminoaux -> MULTIPLY seen_operador termino .)
    NOTEQUALS       reduce using rule 47 (terminoaux -> MULTIPLY seen_operador termino .)
    SEMICOLON       reduce using rule 47 (terminoaux -> MULTIPLY seen_operador termino .)
    RIGHTPARENTHESES reduce using rule 47 (terminoaux -> MULTIPLY seen_operador termino .)
    COMMA           reduce using rule 47 (terminoaux -> MULTIPLY seen_operador termino .)


state 120

    (49) condicionaux -> ELSE bloque . SEMICOLON

    SEMICOLON       shift and go to state 121


state 121

    (49) condicionaux -> ELSE bloque SEMICOLON .

    IF              reduce using rule 49 (condicionaux -> ELSE bloque SEMICOLON .)
    PRINT           reduce using rule 49 (condicionaux -> ELSE bloque SEMICOLON .)
    ID              reduce using rule 49 (condicionaux -> ELSE bloque SEMICOLON .)
    INT_CTE         reduce using rule 49 (condicionaux -> ELSE bloque SEMICOLON .)
    FLOAT_CTE       reduce using rule 49 (condicionaux -> ELSE bloque SEMICOLON .)
    RIGHTBRACE      reduce using rule 49 (condicionaux -> ELSE bloque SEMICOLON .)

