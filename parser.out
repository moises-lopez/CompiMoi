Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    BOOLEAN_CTE
    CALL
    COLON
    NOTEQUAL
    READ
    THREEDOTS

Grammar

Rule 0     S' -> calc
Rule 1     calc -> PROGRAMA ID seen_program SEMICOLON vars modulesaux functionmain
Rule 2     modulesaux -> function modulesaux
Rule 3     modulesaux -> <empty>
Rule 4     seen_program -> <empty>
Rule 5     vars -> VAR seen_vars tipo varsAuxDeclaration SEMICOLON vars
Rule 6     vars -> empty
Rule 7     varsAuxDeclaration -> idOrArrayDeclaration seen_end_declaration COMMA varsAuxDeclaration
Rule 8     varsAuxDeclaration -> idOrArrayDeclaration seen_end_declaration
Rule 9     seen_end_declaration -> <empty>
Rule 10    idOrArrayDeclaration -> ID seen_ID_var
Rule 11    idOrArrayDeclaration -> ID seen_ID_var LEFTBRACKET seen_lBracket_array arrayDimesionAux RIGHTBRACKET seen_rBracket_array
Rule 12    arrayAccesing -> ID seen_ID LEFTBRACKET seen_initArrayAccesing arrayAccesingExpresionAux RIGHTBRACKET seen_endArrayAccesing
Rule 13    arrayAccesingExpresionAux -> expresion seen_expresion_array
Rule 14    arrayAccesingExpresionAux -> expresion seen_expresion_array COMMA seen_commaAccesingExpresion
Rule 15    seen_initArrayAccesing -> <empty>
Rule 16    seen_expresion_array -> <empty>
Rule 17    seen_commaAccesingExpresion -> <empty>
Rule 18    seen_endArrayAccesing -> <empty>
Rule 19    arrayDimesionAux -> INT_CTE seen_lim_inf INT_CTE seen_lim_sup
Rule 20    arrayDimesionAux -> INT_CTE seen_lim_inf INT_CTE seen_lim_sup COMMA seen_extra_dimension_array arrayDimesionAux
Rule 21    seen_extra_dimension_array -> <empty>
Rule 22    seen_lim_inf -> <empty>
Rule 23    seen_lim_sup -> <empty>
Rule 24    seen_lBracket_array -> <empty>
Rule 25    seen_rBracket_array -> <empty>
Rule 26    seen_vars -> <empty>
Rule 27    varsaux -> COMMA ID seen_ID_var varsaux
Rule 28    varsaux -> <empty>
Rule 29    seen_ID_var -> <empty>
Rule 30    tipo -> INT seen_tipo
Rule 31    tipo -> FLOAT seen_tipo
Rule 32    tipo -> BOOLEAN seen_tipo
Rule 33    seen_tipo -> <empty>
Rule 34    function -> FUNCTION returnfunctionaux ID seen_id_function params bloque seen_function_end
Rule 35    seen_id_function -> <empty>
Rule 36    seen_function_end -> <empty>
Rule 37    functionmain -> MAIN seen_function_main LEFTPARENTHESES RIGHTPARENTHESES bloque seen_end_program
Rule 38    seen_end_program -> <empty>
Rule 39    seen_function_main -> <empty>
Rule 40    returnfunctionaux -> tipo
Rule 41    returnfunctionaux -> VOID seen_void
Rule 42    seen_void -> <empty>
Rule 43    params -> LEFTPARENTHESES seen_params_init paramsaux RIGHTPARENTHESES
Rule 44    seen_params_init -> <empty>
Rule 45    paramsaux -> tipo ID seen_ID_params paramsaux
Rule 46    paramsaux -> COMMA paramsaux
Rule 47    paramsaux -> empty
Rule 48    seen_ID_params -> <empty>
Rule 49    bloque -> LEFTBRACE seen_start_bloqueaux vars bloqueaux returnaux RIGHTBRACE
Rule 50    returnaux -> RETURN expresion seen_return_function SEMICOLON
Rule 51    returnaux -> <empty>
Rule 52    seen_return_function -> <empty>
Rule 53    seen_start_bloqueaux -> <empty>
Rule 54    bloqueaux -> estatuto bloqueaux
Rule 55    bloqueaux -> <empty>
Rule 56    estatuto -> asignacion
Rule 57    estatuto -> condicion
Rule 58    estatuto -> escritura
Rule 59    estatuto -> while
Rule 60    estatuto -> functionCall SEMICOLON
Rule 61    asignacion -> varcte ASIGNATION seen_equals expresion seen_final_asignacion SEMICOLON
Rule 62    seen_equals -> <empty>
Rule 63    seen_final_asignacion -> <empty>
Rule 64    expresion -> exp seen_comparacion
Rule 65    expresion -> exp seen_comparacion expresionaux exp seen_comparacion
Rule 66    expresionaux -> GREATERTHAN seen_operador
Rule 67    expresionaux -> LESSTHAN seen_operador
Rule 68    expresionaux -> LESSTHANOREQUALS seen_operador
Rule 69    expresionaux -> NOTEQUALS seen_operador
Rule 70    expresionaux -> EQUALS seen_operador
Rule 71    expresionaux -> <empty>
Rule 72    escritura -> PRINT LEFTPARENTHESES escrituraaux RIGHTPARENTHESES SEMICOLON
Rule 73    escrituraaux -> escrituraaux2
Rule 74    escrituraaux -> escrituraaux2 COMMA escrituraaux
Rule 75    escrituraaux2 -> expresion seen_print_cuadruplo
Rule 76    escrituraaux2 -> STRING_CTE seen_print_cuadruplo
Rule 77    seen_print_cuadruplo -> <empty>
Rule 78    exp -> termino seen_termino
Rule 79    exp -> termino seen_termino expaux
Rule 80    expaux -> PLUS seen_operador exp
Rule 81    expaux -> MINUS seen_operador exp
Rule 82    termino -> factor seen_factor
Rule 83    termino -> factor seen_factor terminoaux
Rule 84    terminoaux -> DIVIDE seen_operador termino
Rule 85    terminoaux -> MULTIPLY seen_operador termino
Rule 86    condicion -> IF LEFTPARENTHESES expresion RIGHTPARENTHESES seen_right_parentheses_condicion bloque condicionaux
Rule 87    condicionaux -> ELSE seen_else bloque SEMICOLON seen_end_condicion
Rule 88    condicionaux -> SEMICOLON seen_end_condicion
Rule 89    seen_right_parentheses_condicion -> <empty>
Rule 90    seen_else -> <empty>
Rule 91    seen_end_condicion -> <empty>
Rule 92    factor -> factoraux
Rule 93    factor -> varcte
Rule 94    factoraux -> LEFTPARENTHESES seen_insert_fondo expresion RIGHTPARENTHESES seen_remove_fondo
Rule 95    varcte -> ID seen_ID
Rule 96    varcte -> INT_CTE seen_CTE_INT
Rule 97    varcte -> FLOAT_CTE seen_CTE_FLOAT
Rule 98    varcte -> functionCall
Rule 99    varcte -> arrayAccesing
Rule 100   seen_CTE_INT -> <empty>
Rule 101   seen_CTE_FLOAT -> <empty>
Rule 102   seen_insert_fondo -> <empty>
Rule 103   seen_remove_fondo -> <empty>
Rule 104   seen_ID -> <empty>
Rule 105   seen_operador -> <empty>
Rule 106   seen_termino -> <empty>
Rule 107   seen_factor -> <empty>
Rule 108   seen_comparacion -> <empty>
Rule 109   while -> WHILE seen_while LEFTPARENTHESES expresion RIGHTPARENTHESES seen_right_parentheses_while bloque SEMICOLON seen_end_while
Rule 110   seen_while -> <empty>
Rule 111   seen_right_parentheses_while -> <empty>
Rule 112   seen_end_while -> <empty>
Rule 113   functionCall -> AT ID seen_fCall_id LEFTPARENTHESES seen_leftp_fCall paramsFunctionCall seen_end_paramsFCall RIGHTPARENTHESES seen_rightp_fCall
Rule 114   seen_fCall_id -> <empty>
Rule 115   seen_leftp_fCall -> <empty>
Rule 116   paramsFunctionCall -> expresion seen_parameter_fCall COMMA seen_comma_params_fCall paramsFunctionCall
Rule 117   paramsFunctionCall -> expresion seen_parameter_fCall seen_comma_params_fCall
Rule 118   seen_parameter_fCall -> <empty>
Rule 119   seen_comma_params_fCall -> <empty>
Rule 120   seen_end_paramsFCall -> <empty>
Rule 121   seen_rightp_fCall -> <empty>
Rule 122   empty -> <empty>

Terminals, with rules where they appear

ASIGNATION           : 61
AT                   : 113
BOOLEAN              : 32
BOOLEAN_CTE          : 
CALL                 : 
COLON                : 
COMMA                : 7 14 20 27 46 74 116
DIVIDE               : 84
ELSE                 : 87
EQUALS               : 70
FLOAT                : 31
FLOAT_CTE            : 97
FUNCTION             : 34
GREATERTHAN          : 66
ID                   : 1 10 11 12 27 34 45 95 113
IF                   : 86
INT                  : 30
INT_CTE              : 19 19 20 20 96
LEFTBRACE            : 49
LEFTBRACKET          : 11 12
LEFTPARENTHESES      : 37 43 72 86 94 109 113
LESSTHAN             : 67
LESSTHANOREQUALS     : 68
MAIN                 : 37
MINUS                : 81
MULTIPLY             : 85
NOTEQUAL             : 
NOTEQUALS            : 69
PLUS                 : 80
PRINT                : 72
PROGRAMA             : 1
READ                 : 
RETURN               : 50
RIGHTBRACE           : 49
RIGHTBRACKET         : 11 12
RIGHTPARENTHESES     : 37 43 72 86 94 109 113
SEMICOLON            : 1 5 50 60 61 72 87 88 109
STRING_CTE           : 76
THREEDOTS            : 
VAR                  : 5
VOID                 : 41
WHILE                : 109
error                : 

Nonterminals, with rules where they appear

arrayAccesing        : 99
arrayAccesingExpresionAux : 12
arrayDimesionAux     : 11 20
asignacion           : 56
bloque               : 34 37 86 87 109
bloqueaux            : 49 54
calc                 : 0
condicion            : 57
condicionaux         : 86
empty                : 6 47
escritura            : 58
escrituraaux         : 72 74
escrituraaux2        : 73 74
estatuto             : 54
exp                  : 64 65 65 80 81
expaux               : 79
expresion            : 13 14 50 61 75 86 94 109 116 117
expresionaux         : 65
factor               : 82 83
factoraux            : 92
function             : 2
functionCall         : 60 98
functionmain         : 1
idOrArrayDeclaration : 7 8
modulesaux           : 1 2
params               : 34
paramsFunctionCall   : 113 116
paramsaux            : 43 45 46
returnaux            : 49
returnfunctionaux    : 34
seen_CTE_FLOAT       : 97
seen_CTE_INT         : 96
seen_ID              : 12 95
seen_ID_params       : 45
seen_ID_var          : 10 11 27
seen_commaAccesingExpresion : 14
seen_comma_params_fCall : 116 117
seen_comparacion     : 64 65 65
seen_else            : 87
seen_endArrayAccesing : 12
seen_end_condicion   : 87 88
seen_end_declaration : 7 8
seen_end_paramsFCall : 113
seen_end_program     : 37
seen_end_while       : 109
seen_equals          : 61
seen_expresion_array : 13 14
seen_extra_dimension_array : 20
seen_fCall_id        : 113
seen_factor          : 82 83
seen_final_asignacion : 61
seen_function_end    : 34
seen_function_main   : 37
seen_id_function     : 34
seen_initArrayAccesing : 12
seen_insert_fondo    : 94
seen_lBracket_array  : 11
seen_leftp_fCall     : 113
seen_lim_inf         : 19 20
seen_lim_sup         : 19 20
seen_operador        : 66 67 68 69 70 80 81 84 85
seen_parameter_fCall : 116 117
seen_params_init     : 43
seen_print_cuadruplo : 75 76
seen_program         : 1
seen_rBracket_array  : 11
seen_remove_fondo    : 94
seen_return_function : 50
seen_right_parentheses_condicion : 86
seen_right_parentheses_while : 109
seen_rightp_fCall    : 113
seen_start_bloqueaux : 49
seen_termino         : 78 79
seen_tipo            : 30 31 32
seen_vars            : 5
seen_void            : 41
seen_while           : 109
termino              : 78 79 84 85
terminoaux           : 83
tipo                 : 5 40 45
varcte               : 61 93
vars                 : 1 5 49
varsAuxDeclaration   : 5 7
varsaux              : 27
while                : 59

Parsing method: LALR

state 0

    (0) S' -> . calc
    (1) calc -> . PROGRAMA ID seen_program SEMICOLON vars modulesaux functionmain

    PROGRAMA        shift and go to state 2

    calc                           shift and go to state 1

state 1

    (0) S' -> calc .



state 2

    (1) calc -> PROGRAMA . ID seen_program SEMICOLON vars modulesaux functionmain

    ID              shift and go to state 3


state 3

    (1) calc -> PROGRAMA ID . seen_program SEMICOLON vars modulesaux functionmain
    (4) seen_program -> .

    SEMICOLON       reduce using rule 4 (seen_program -> .)

    seen_program                   shift and go to state 4

state 4

    (1) calc -> PROGRAMA ID seen_program . SEMICOLON vars modulesaux functionmain

    SEMICOLON       shift and go to state 5


state 5

    (1) calc -> PROGRAMA ID seen_program SEMICOLON . vars modulesaux functionmain
    (5) vars -> . VAR seen_vars tipo varsAuxDeclaration SEMICOLON vars
    (6) vars -> . empty
    (122) empty -> .

    VAR             shift and go to state 7
    FUNCTION        reduce using rule 122 (empty -> .)
    MAIN            reduce using rule 122 (empty -> .)

    vars                           shift and go to state 6
    empty                          shift and go to state 8

state 6

    (1) calc -> PROGRAMA ID seen_program SEMICOLON vars . modulesaux functionmain
    (2) modulesaux -> . function modulesaux
    (3) modulesaux -> .
    (34) function -> . FUNCTION returnfunctionaux ID seen_id_function params bloque seen_function_end

    MAIN            reduce using rule 3 (modulesaux -> .)
    FUNCTION        shift and go to state 11

    modulesaux                     shift and go to state 9
    function                       shift and go to state 10

state 7

    (5) vars -> VAR . seen_vars tipo varsAuxDeclaration SEMICOLON vars
    (26) seen_vars -> .

    INT             reduce using rule 26 (seen_vars -> .)
    FLOAT           reduce using rule 26 (seen_vars -> .)
    BOOLEAN         reduce using rule 26 (seen_vars -> .)

    seen_vars                      shift and go to state 12

state 8

    (6) vars -> empty .

    FUNCTION        reduce using rule 6 (vars -> empty .)
    MAIN            reduce using rule 6 (vars -> empty .)
    IF              reduce using rule 6 (vars -> empty .)
    PRINT           reduce using rule 6 (vars -> empty .)
    WHILE           reduce using rule 6 (vars -> empty .)
    AT              reduce using rule 6 (vars -> empty .)
    ID              reduce using rule 6 (vars -> empty .)
    INT_CTE         reduce using rule 6 (vars -> empty .)
    FLOAT_CTE       reduce using rule 6 (vars -> empty .)
    RETURN          reduce using rule 6 (vars -> empty .)
    RIGHTBRACE      reduce using rule 6 (vars -> empty .)


state 9

    (1) calc -> PROGRAMA ID seen_program SEMICOLON vars modulesaux . functionmain
    (37) functionmain -> . MAIN seen_function_main LEFTPARENTHESES RIGHTPARENTHESES bloque seen_end_program

    MAIN            shift and go to state 14

    functionmain                   shift and go to state 13

state 10

    (2) modulesaux -> function . modulesaux
    (2) modulesaux -> . function modulesaux
    (3) modulesaux -> .
    (34) function -> . FUNCTION returnfunctionaux ID seen_id_function params bloque seen_function_end

    MAIN            reduce using rule 3 (modulesaux -> .)
    FUNCTION        shift and go to state 11

    function                       shift and go to state 10
    modulesaux                     shift and go to state 15

state 11

    (34) function -> FUNCTION . returnfunctionaux ID seen_id_function params bloque seen_function_end
    (40) returnfunctionaux -> . tipo
    (41) returnfunctionaux -> . VOID seen_void
    (30) tipo -> . INT seen_tipo
    (31) tipo -> . FLOAT seen_tipo
    (32) tipo -> . BOOLEAN seen_tipo

    VOID            shift and go to state 18
    INT             shift and go to state 19
    FLOAT           shift and go to state 20
    BOOLEAN         shift and go to state 21

    returnfunctionaux              shift and go to state 16
    tipo                           shift and go to state 17

state 12

    (5) vars -> VAR seen_vars . tipo varsAuxDeclaration SEMICOLON vars
    (30) tipo -> . INT seen_tipo
    (31) tipo -> . FLOAT seen_tipo
    (32) tipo -> . BOOLEAN seen_tipo

    INT             shift and go to state 19
    FLOAT           shift and go to state 20
    BOOLEAN         shift and go to state 21

    tipo                           shift and go to state 22

state 13

    (1) calc -> PROGRAMA ID seen_program SEMICOLON vars modulesaux functionmain .

    $end            reduce using rule 1 (calc -> PROGRAMA ID seen_program SEMICOLON vars modulesaux functionmain .)


state 14

    (37) functionmain -> MAIN . seen_function_main LEFTPARENTHESES RIGHTPARENTHESES bloque seen_end_program
    (39) seen_function_main -> .

    LEFTPARENTHESES reduce using rule 39 (seen_function_main -> .)

    seen_function_main             shift and go to state 23

state 15

    (2) modulesaux -> function modulesaux .

    MAIN            reduce using rule 2 (modulesaux -> function modulesaux .)


state 16

    (34) function -> FUNCTION returnfunctionaux . ID seen_id_function params bloque seen_function_end

    ID              shift and go to state 24


state 17

    (40) returnfunctionaux -> tipo .

    ID              reduce using rule 40 (returnfunctionaux -> tipo .)


state 18

    (41) returnfunctionaux -> VOID . seen_void
    (42) seen_void -> .

    ID              reduce using rule 42 (seen_void -> .)

    seen_void                      shift and go to state 25

state 19

    (30) tipo -> INT . seen_tipo
    (33) seen_tipo -> .

    ID              reduce using rule 33 (seen_tipo -> .)

    seen_tipo                      shift and go to state 26

state 20

    (31) tipo -> FLOAT . seen_tipo
    (33) seen_tipo -> .

    ID              reduce using rule 33 (seen_tipo -> .)

    seen_tipo                      shift and go to state 27

state 21

    (32) tipo -> BOOLEAN . seen_tipo
    (33) seen_tipo -> .

    ID              reduce using rule 33 (seen_tipo -> .)

    seen_tipo                      shift and go to state 28

state 22

    (5) vars -> VAR seen_vars tipo . varsAuxDeclaration SEMICOLON vars
    (7) varsAuxDeclaration -> . idOrArrayDeclaration seen_end_declaration COMMA varsAuxDeclaration
    (8) varsAuxDeclaration -> . idOrArrayDeclaration seen_end_declaration
    (10) idOrArrayDeclaration -> . ID seen_ID_var
    (11) idOrArrayDeclaration -> . ID seen_ID_var LEFTBRACKET seen_lBracket_array arrayDimesionAux RIGHTBRACKET seen_rBracket_array

    ID              shift and go to state 31

    varsAuxDeclaration             shift and go to state 29
    idOrArrayDeclaration           shift and go to state 30

state 23

    (37) functionmain -> MAIN seen_function_main . LEFTPARENTHESES RIGHTPARENTHESES bloque seen_end_program

    LEFTPARENTHESES shift and go to state 32


state 24

    (34) function -> FUNCTION returnfunctionaux ID . seen_id_function params bloque seen_function_end
    (35) seen_id_function -> .

    LEFTPARENTHESES reduce using rule 35 (seen_id_function -> .)

    seen_id_function               shift and go to state 33

state 25

    (41) returnfunctionaux -> VOID seen_void .

    ID              reduce using rule 41 (returnfunctionaux -> VOID seen_void .)


state 26

    (30) tipo -> INT seen_tipo .

    ID              reduce using rule 30 (tipo -> INT seen_tipo .)


state 27

    (31) tipo -> FLOAT seen_tipo .

    ID              reduce using rule 31 (tipo -> FLOAT seen_tipo .)


state 28

    (32) tipo -> BOOLEAN seen_tipo .

    ID              reduce using rule 32 (tipo -> BOOLEAN seen_tipo .)


state 29

    (5) vars -> VAR seen_vars tipo varsAuxDeclaration . SEMICOLON vars

    SEMICOLON       shift and go to state 34


state 30

    (7) varsAuxDeclaration -> idOrArrayDeclaration . seen_end_declaration COMMA varsAuxDeclaration
    (8) varsAuxDeclaration -> idOrArrayDeclaration . seen_end_declaration
    (9) seen_end_declaration -> .

    COMMA           reduce using rule 9 (seen_end_declaration -> .)
    SEMICOLON       reduce using rule 9 (seen_end_declaration -> .)

    seen_end_declaration           shift and go to state 35

state 31

    (10) idOrArrayDeclaration -> ID . seen_ID_var
    (11) idOrArrayDeclaration -> ID . seen_ID_var LEFTBRACKET seen_lBracket_array arrayDimesionAux RIGHTBRACKET seen_rBracket_array
    (29) seen_ID_var -> .

    LEFTBRACKET     reduce using rule 29 (seen_ID_var -> .)
    COMMA           reduce using rule 29 (seen_ID_var -> .)
    SEMICOLON       reduce using rule 29 (seen_ID_var -> .)

    seen_ID_var                    shift and go to state 36

state 32

    (37) functionmain -> MAIN seen_function_main LEFTPARENTHESES . RIGHTPARENTHESES bloque seen_end_program

    RIGHTPARENTHESES shift and go to state 37


state 33

    (34) function -> FUNCTION returnfunctionaux ID seen_id_function . params bloque seen_function_end
    (43) params -> . LEFTPARENTHESES seen_params_init paramsaux RIGHTPARENTHESES

    LEFTPARENTHESES shift and go to state 39

    params                         shift and go to state 38

state 34

    (5) vars -> VAR seen_vars tipo varsAuxDeclaration SEMICOLON . vars
    (5) vars -> . VAR seen_vars tipo varsAuxDeclaration SEMICOLON vars
    (6) vars -> . empty
    (122) empty -> .

    VAR             shift and go to state 7
    FUNCTION        reduce using rule 122 (empty -> .)
    MAIN            reduce using rule 122 (empty -> .)
    IF              reduce using rule 122 (empty -> .)
    PRINT           reduce using rule 122 (empty -> .)
    WHILE           reduce using rule 122 (empty -> .)
    AT              reduce using rule 122 (empty -> .)
    ID              reduce using rule 122 (empty -> .)
    INT_CTE         reduce using rule 122 (empty -> .)
    FLOAT_CTE       reduce using rule 122 (empty -> .)
    RETURN          reduce using rule 122 (empty -> .)
    RIGHTBRACE      reduce using rule 122 (empty -> .)

    vars                           shift and go to state 40
    empty                          shift and go to state 8

state 35

    (7) varsAuxDeclaration -> idOrArrayDeclaration seen_end_declaration . COMMA varsAuxDeclaration
    (8) varsAuxDeclaration -> idOrArrayDeclaration seen_end_declaration .

    COMMA           shift and go to state 41
    SEMICOLON       reduce using rule 8 (varsAuxDeclaration -> idOrArrayDeclaration seen_end_declaration .)


state 36

    (10) idOrArrayDeclaration -> ID seen_ID_var .
    (11) idOrArrayDeclaration -> ID seen_ID_var . LEFTBRACKET seen_lBracket_array arrayDimesionAux RIGHTBRACKET seen_rBracket_array

    COMMA           reduce using rule 10 (idOrArrayDeclaration -> ID seen_ID_var .)
    SEMICOLON       reduce using rule 10 (idOrArrayDeclaration -> ID seen_ID_var .)
    LEFTBRACKET     shift and go to state 42


state 37

    (37) functionmain -> MAIN seen_function_main LEFTPARENTHESES RIGHTPARENTHESES . bloque seen_end_program
    (49) bloque -> . LEFTBRACE seen_start_bloqueaux vars bloqueaux returnaux RIGHTBRACE

    LEFTBRACE       shift and go to state 44

    bloque                         shift and go to state 43

state 38

    (34) function -> FUNCTION returnfunctionaux ID seen_id_function params . bloque seen_function_end
    (49) bloque -> . LEFTBRACE seen_start_bloqueaux vars bloqueaux returnaux RIGHTBRACE

    LEFTBRACE       shift and go to state 44

    bloque                         shift and go to state 45

state 39

    (43) params -> LEFTPARENTHESES . seen_params_init paramsaux RIGHTPARENTHESES
    (44) seen_params_init -> .

    COMMA           reduce using rule 44 (seen_params_init -> .)
    INT             reduce using rule 44 (seen_params_init -> .)
    FLOAT           reduce using rule 44 (seen_params_init -> .)
    BOOLEAN         reduce using rule 44 (seen_params_init -> .)
    RIGHTPARENTHESES reduce using rule 44 (seen_params_init -> .)

    seen_params_init               shift and go to state 46

state 40

    (5) vars -> VAR seen_vars tipo varsAuxDeclaration SEMICOLON vars .

    FUNCTION        reduce using rule 5 (vars -> VAR seen_vars tipo varsAuxDeclaration SEMICOLON vars .)
    MAIN            reduce using rule 5 (vars -> VAR seen_vars tipo varsAuxDeclaration SEMICOLON vars .)
    IF              reduce using rule 5 (vars -> VAR seen_vars tipo varsAuxDeclaration SEMICOLON vars .)
    PRINT           reduce using rule 5 (vars -> VAR seen_vars tipo varsAuxDeclaration SEMICOLON vars .)
    WHILE           reduce using rule 5 (vars -> VAR seen_vars tipo varsAuxDeclaration SEMICOLON vars .)
    AT              reduce using rule 5 (vars -> VAR seen_vars tipo varsAuxDeclaration SEMICOLON vars .)
    ID              reduce using rule 5 (vars -> VAR seen_vars tipo varsAuxDeclaration SEMICOLON vars .)
    INT_CTE         reduce using rule 5 (vars -> VAR seen_vars tipo varsAuxDeclaration SEMICOLON vars .)
    FLOAT_CTE       reduce using rule 5 (vars -> VAR seen_vars tipo varsAuxDeclaration SEMICOLON vars .)
    RETURN          reduce using rule 5 (vars -> VAR seen_vars tipo varsAuxDeclaration SEMICOLON vars .)
    RIGHTBRACE      reduce using rule 5 (vars -> VAR seen_vars tipo varsAuxDeclaration SEMICOLON vars .)


state 41

    (7) varsAuxDeclaration -> idOrArrayDeclaration seen_end_declaration COMMA . varsAuxDeclaration
    (7) varsAuxDeclaration -> . idOrArrayDeclaration seen_end_declaration COMMA varsAuxDeclaration
    (8) varsAuxDeclaration -> . idOrArrayDeclaration seen_end_declaration
    (10) idOrArrayDeclaration -> . ID seen_ID_var
    (11) idOrArrayDeclaration -> . ID seen_ID_var LEFTBRACKET seen_lBracket_array arrayDimesionAux RIGHTBRACKET seen_rBracket_array

    ID              shift and go to state 31

    idOrArrayDeclaration           shift and go to state 30
    varsAuxDeclaration             shift and go to state 47

state 42

    (11) idOrArrayDeclaration -> ID seen_ID_var LEFTBRACKET . seen_lBracket_array arrayDimesionAux RIGHTBRACKET seen_rBracket_array
    (24) seen_lBracket_array -> .

    INT_CTE         reduce using rule 24 (seen_lBracket_array -> .)

    seen_lBracket_array            shift and go to state 48

state 43

    (37) functionmain -> MAIN seen_function_main LEFTPARENTHESES RIGHTPARENTHESES bloque . seen_end_program
    (38) seen_end_program -> .

    $end            reduce using rule 38 (seen_end_program -> .)

    seen_end_program               shift and go to state 49

state 44

    (49) bloque -> LEFTBRACE . seen_start_bloqueaux vars bloqueaux returnaux RIGHTBRACE
    (53) seen_start_bloqueaux -> .

    VAR             reduce using rule 53 (seen_start_bloqueaux -> .)
    IF              reduce using rule 53 (seen_start_bloqueaux -> .)
    PRINT           reduce using rule 53 (seen_start_bloqueaux -> .)
    WHILE           reduce using rule 53 (seen_start_bloqueaux -> .)
    AT              reduce using rule 53 (seen_start_bloqueaux -> .)
    ID              reduce using rule 53 (seen_start_bloqueaux -> .)
    INT_CTE         reduce using rule 53 (seen_start_bloqueaux -> .)
    FLOAT_CTE       reduce using rule 53 (seen_start_bloqueaux -> .)
    RETURN          reduce using rule 53 (seen_start_bloqueaux -> .)
    RIGHTBRACE      reduce using rule 53 (seen_start_bloqueaux -> .)

    seen_start_bloqueaux           shift and go to state 50

state 45

    (34) function -> FUNCTION returnfunctionaux ID seen_id_function params bloque . seen_function_end
    (36) seen_function_end -> .

    FUNCTION        reduce using rule 36 (seen_function_end -> .)
    MAIN            reduce using rule 36 (seen_function_end -> .)

    seen_function_end              shift and go to state 51

state 46

    (43) params -> LEFTPARENTHESES seen_params_init . paramsaux RIGHTPARENTHESES
    (45) paramsaux -> . tipo ID seen_ID_params paramsaux
    (46) paramsaux -> . COMMA paramsaux
    (47) paramsaux -> . empty
    (30) tipo -> . INT seen_tipo
    (31) tipo -> . FLOAT seen_tipo
    (32) tipo -> . BOOLEAN seen_tipo
    (122) empty -> .

    COMMA           shift and go to state 54
    INT             shift and go to state 19
    FLOAT           shift and go to state 20
    BOOLEAN         shift and go to state 21
    RIGHTPARENTHESES reduce using rule 122 (empty -> .)

    paramsaux                      shift and go to state 52
    tipo                           shift and go to state 53
    empty                          shift and go to state 55

state 47

    (7) varsAuxDeclaration -> idOrArrayDeclaration seen_end_declaration COMMA varsAuxDeclaration .

    SEMICOLON       reduce using rule 7 (varsAuxDeclaration -> idOrArrayDeclaration seen_end_declaration COMMA varsAuxDeclaration .)


state 48

    (11) idOrArrayDeclaration -> ID seen_ID_var LEFTBRACKET seen_lBracket_array . arrayDimesionAux RIGHTBRACKET seen_rBracket_array
    (19) arrayDimesionAux -> . INT_CTE seen_lim_inf INT_CTE seen_lim_sup
    (20) arrayDimesionAux -> . INT_CTE seen_lim_inf INT_CTE seen_lim_sup COMMA seen_extra_dimension_array arrayDimesionAux

    INT_CTE         shift and go to state 57

    arrayDimesionAux               shift and go to state 56

state 49

    (37) functionmain -> MAIN seen_function_main LEFTPARENTHESES RIGHTPARENTHESES bloque seen_end_program .

    $end            reduce using rule 37 (functionmain -> MAIN seen_function_main LEFTPARENTHESES RIGHTPARENTHESES bloque seen_end_program .)


state 50

    (49) bloque -> LEFTBRACE seen_start_bloqueaux . vars bloqueaux returnaux RIGHTBRACE
    (5) vars -> . VAR seen_vars tipo varsAuxDeclaration SEMICOLON vars
    (6) vars -> . empty
    (122) empty -> .

    VAR             shift and go to state 7
    IF              reduce using rule 122 (empty -> .)
    PRINT           reduce using rule 122 (empty -> .)
    WHILE           reduce using rule 122 (empty -> .)
    AT              reduce using rule 122 (empty -> .)
    ID              reduce using rule 122 (empty -> .)
    INT_CTE         reduce using rule 122 (empty -> .)
    FLOAT_CTE       reduce using rule 122 (empty -> .)
    RETURN          reduce using rule 122 (empty -> .)
    RIGHTBRACE      reduce using rule 122 (empty -> .)

    vars                           shift and go to state 58
    empty                          shift and go to state 8

state 51

    (34) function -> FUNCTION returnfunctionaux ID seen_id_function params bloque seen_function_end .

    FUNCTION        reduce using rule 34 (function -> FUNCTION returnfunctionaux ID seen_id_function params bloque seen_function_end .)
    MAIN            reduce using rule 34 (function -> FUNCTION returnfunctionaux ID seen_id_function params bloque seen_function_end .)


state 52

    (43) params -> LEFTPARENTHESES seen_params_init paramsaux . RIGHTPARENTHESES

    RIGHTPARENTHESES shift and go to state 59


state 53

    (45) paramsaux -> tipo . ID seen_ID_params paramsaux

    ID              shift and go to state 60


state 54

    (46) paramsaux -> COMMA . paramsaux
    (45) paramsaux -> . tipo ID seen_ID_params paramsaux
    (46) paramsaux -> . COMMA paramsaux
    (47) paramsaux -> . empty
    (30) tipo -> . INT seen_tipo
    (31) tipo -> . FLOAT seen_tipo
    (32) tipo -> . BOOLEAN seen_tipo
    (122) empty -> .

    COMMA           shift and go to state 54
    INT             shift and go to state 19
    FLOAT           shift and go to state 20
    BOOLEAN         shift and go to state 21
    RIGHTPARENTHESES reduce using rule 122 (empty -> .)

    paramsaux                      shift and go to state 61
    tipo                           shift and go to state 53
    empty                          shift and go to state 55

state 55

    (47) paramsaux -> empty .

    RIGHTPARENTHESES reduce using rule 47 (paramsaux -> empty .)


state 56

    (11) idOrArrayDeclaration -> ID seen_ID_var LEFTBRACKET seen_lBracket_array arrayDimesionAux . RIGHTBRACKET seen_rBracket_array

    RIGHTBRACKET    shift and go to state 62


state 57

    (19) arrayDimesionAux -> INT_CTE . seen_lim_inf INT_CTE seen_lim_sup
    (20) arrayDimesionAux -> INT_CTE . seen_lim_inf INT_CTE seen_lim_sup COMMA seen_extra_dimension_array arrayDimesionAux
    (22) seen_lim_inf -> .

    INT_CTE         reduce using rule 22 (seen_lim_inf -> .)

    seen_lim_inf                   shift and go to state 63

state 58

    (49) bloque -> LEFTBRACE seen_start_bloqueaux vars . bloqueaux returnaux RIGHTBRACE
    (54) bloqueaux -> . estatuto bloqueaux
    (55) bloqueaux -> .
    (56) estatuto -> . asignacion
    (57) estatuto -> . condicion
    (58) estatuto -> . escritura
    (59) estatuto -> . while
    (60) estatuto -> . functionCall SEMICOLON
    (61) asignacion -> . varcte ASIGNATION seen_equals expresion seen_final_asignacion SEMICOLON
    (86) condicion -> . IF LEFTPARENTHESES expresion RIGHTPARENTHESES seen_right_parentheses_condicion bloque condicionaux
    (72) escritura -> . PRINT LEFTPARENTHESES escrituraaux RIGHTPARENTHESES SEMICOLON
    (109) while -> . WHILE seen_while LEFTPARENTHESES expresion RIGHTPARENTHESES seen_right_parentheses_while bloque SEMICOLON seen_end_while
    (113) functionCall -> . AT ID seen_fCall_id LEFTPARENTHESES seen_leftp_fCall paramsFunctionCall seen_end_paramsFCall RIGHTPARENTHESES seen_rightp_fCall
    (95) varcte -> . ID seen_ID
    (96) varcte -> . INT_CTE seen_CTE_INT
    (97) varcte -> . FLOAT_CTE seen_CTE_FLOAT
    (98) varcte -> . functionCall
    (99) varcte -> . arrayAccesing
    (12) arrayAccesing -> . ID seen_ID LEFTBRACKET seen_initArrayAccesing arrayAccesingExpresionAux RIGHTBRACKET seen_endArrayAccesing

    RETURN          reduce using rule 55 (bloqueaux -> .)
    RIGHTBRACE      reduce using rule 55 (bloqueaux -> .)
    IF              shift and go to state 72
    PRINT           shift and go to state 73
    WHILE           shift and go to state 74
    AT              shift and go to state 75
    ID              shift and go to state 76
    INT_CTE         shift and go to state 77
    FLOAT_CTE       shift and go to state 78

    bloqueaux                      shift and go to state 64
    estatuto                       shift and go to state 65
    asignacion                     shift and go to state 66
    condicion                      shift and go to state 67
    escritura                      shift and go to state 68
    while                          shift and go to state 69
    functionCall                   shift and go to state 70
    varcte                         shift and go to state 71
    arrayAccesing                  shift and go to state 79

state 59

    (43) params -> LEFTPARENTHESES seen_params_init paramsaux RIGHTPARENTHESES .

    LEFTBRACE       reduce using rule 43 (params -> LEFTPARENTHESES seen_params_init paramsaux RIGHTPARENTHESES .)


state 60

    (45) paramsaux -> tipo ID . seen_ID_params paramsaux
    (48) seen_ID_params -> .

    COMMA           reduce using rule 48 (seen_ID_params -> .)
    INT             reduce using rule 48 (seen_ID_params -> .)
    FLOAT           reduce using rule 48 (seen_ID_params -> .)
    BOOLEAN         reduce using rule 48 (seen_ID_params -> .)
    RIGHTPARENTHESES reduce using rule 48 (seen_ID_params -> .)

    seen_ID_params                 shift and go to state 80

state 61

    (46) paramsaux -> COMMA paramsaux .

    RIGHTPARENTHESES reduce using rule 46 (paramsaux -> COMMA paramsaux .)


state 62

    (11) idOrArrayDeclaration -> ID seen_ID_var LEFTBRACKET seen_lBracket_array arrayDimesionAux RIGHTBRACKET . seen_rBracket_array
    (25) seen_rBracket_array -> .

    COMMA           reduce using rule 25 (seen_rBracket_array -> .)
    SEMICOLON       reduce using rule 25 (seen_rBracket_array -> .)

    seen_rBracket_array            shift and go to state 81

state 63

    (19) arrayDimesionAux -> INT_CTE seen_lim_inf . INT_CTE seen_lim_sup
    (20) arrayDimesionAux -> INT_CTE seen_lim_inf . INT_CTE seen_lim_sup COMMA seen_extra_dimension_array arrayDimesionAux

    INT_CTE         shift and go to state 82


state 64

    (49) bloque -> LEFTBRACE seen_start_bloqueaux vars bloqueaux . returnaux RIGHTBRACE
    (50) returnaux -> . RETURN expresion seen_return_function SEMICOLON
    (51) returnaux -> .

    RETURN          shift and go to state 84
    RIGHTBRACE      reduce using rule 51 (returnaux -> .)

    returnaux                      shift and go to state 83

state 65

    (54) bloqueaux -> estatuto . bloqueaux
    (54) bloqueaux -> . estatuto bloqueaux
    (55) bloqueaux -> .
    (56) estatuto -> . asignacion
    (57) estatuto -> . condicion
    (58) estatuto -> . escritura
    (59) estatuto -> . while
    (60) estatuto -> . functionCall SEMICOLON
    (61) asignacion -> . varcte ASIGNATION seen_equals expresion seen_final_asignacion SEMICOLON
    (86) condicion -> . IF LEFTPARENTHESES expresion RIGHTPARENTHESES seen_right_parentheses_condicion bloque condicionaux
    (72) escritura -> . PRINT LEFTPARENTHESES escrituraaux RIGHTPARENTHESES SEMICOLON
    (109) while -> . WHILE seen_while LEFTPARENTHESES expresion RIGHTPARENTHESES seen_right_parentheses_while bloque SEMICOLON seen_end_while
    (113) functionCall -> . AT ID seen_fCall_id LEFTPARENTHESES seen_leftp_fCall paramsFunctionCall seen_end_paramsFCall RIGHTPARENTHESES seen_rightp_fCall
    (95) varcte -> . ID seen_ID
    (96) varcte -> . INT_CTE seen_CTE_INT
    (97) varcte -> . FLOAT_CTE seen_CTE_FLOAT
    (98) varcte -> . functionCall
    (99) varcte -> . arrayAccesing
    (12) arrayAccesing -> . ID seen_ID LEFTBRACKET seen_initArrayAccesing arrayAccesingExpresionAux RIGHTBRACKET seen_endArrayAccesing

    RETURN          reduce using rule 55 (bloqueaux -> .)
    RIGHTBRACE      reduce using rule 55 (bloqueaux -> .)
    IF              shift and go to state 72
    PRINT           shift and go to state 73
    WHILE           shift and go to state 74
    AT              shift and go to state 75
    ID              shift and go to state 76
    INT_CTE         shift and go to state 77
    FLOAT_CTE       shift and go to state 78

    estatuto                       shift and go to state 65
    bloqueaux                      shift and go to state 85
    asignacion                     shift and go to state 66
    condicion                      shift and go to state 67
    escritura                      shift and go to state 68
    while                          shift and go to state 69
    functionCall                   shift and go to state 70
    varcte                         shift and go to state 71
    arrayAccesing                  shift and go to state 79

state 66

    (56) estatuto -> asignacion .

    IF              reduce using rule 56 (estatuto -> asignacion .)
    PRINT           reduce using rule 56 (estatuto -> asignacion .)
    WHILE           reduce using rule 56 (estatuto -> asignacion .)
    AT              reduce using rule 56 (estatuto -> asignacion .)
    ID              reduce using rule 56 (estatuto -> asignacion .)
    INT_CTE         reduce using rule 56 (estatuto -> asignacion .)
    FLOAT_CTE       reduce using rule 56 (estatuto -> asignacion .)
    RETURN          reduce using rule 56 (estatuto -> asignacion .)
    RIGHTBRACE      reduce using rule 56 (estatuto -> asignacion .)


state 67

    (57) estatuto -> condicion .

    IF              reduce using rule 57 (estatuto -> condicion .)
    PRINT           reduce using rule 57 (estatuto -> condicion .)
    WHILE           reduce using rule 57 (estatuto -> condicion .)
    AT              reduce using rule 57 (estatuto -> condicion .)
    ID              reduce using rule 57 (estatuto -> condicion .)
    INT_CTE         reduce using rule 57 (estatuto -> condicion .)
    FLOAT_CTE       reduce using rule 57 (estatuto -> condicion .)
    RETURN          reduce using rule 57 (estatuto -> condicion .)
    RIGHTBRACE      reduce using rule 57 (estatuto -> condicion .)


state 68

    (58) estatuto -> escritura .

    IF              reduce using rule 58 (estatuto -> escritura .)
    PRINT           reduce using rule 58 (estatuto -> escritura .)
    WHILE           reduce using rule 58 (estatuto -> escritura .)
    AT              reduce using rule 58 (estatuto -> escritura .)
    ID              reduce using rule 58 (estatuto -> escritura .)
    INT_CTE         reduce using rule 58 (estatuto -> escritura .)
    FLOAT_CTE       reduce using rule 58 (estatuto -> escritura .)
    RETURN          reduce using rule 58 (estatuto -> escritura .)
    RIGHTBRACE      reduce using rule 58 (estatuto -> escritura .)


state 69

    (59) estatuto -> while .

    IF              reduce using rule 59 (estatuto -> while .)
    PRINT           reduce using rule 59 (estatuto -> while .)
    WHILE           reduce using rule 59 (estatuto -> while .)
    AT              reduce using rule 59 (estatuto -> while .)
    ID              reduce using rule 59 (estatuto -> while .)
    INT_CTE         reduce using rule 59 (estatuto -> while .)
    FLOAT_CTE       reduce using rule 59 (estatuto -> while .)
    RETURN          reduce using rule 59 (estatuto -> while .)
    RIGHTBRACE      reduce using rule 59 (estatuto -> while .)


state 70

    (60) estatuto -> functionCall . SEMICOLON
    (98) varcte -> functionCall .

    SEMICOLON       shift and go to state 86
    ASIGNATION      reduce using rule 98 (varcte -> functionCall .)


state 71

    (61) asignacion -> varcte . ASIGNATION seen_equals expresion seen_final_asignacion SEMICOLON

    ASIGNATION      shift and go to state 87


state 72

    (86) condicion -> IF . LEFTPARENTHESES expresion RIGHTPARENTHESES seen_right_parentheses_condicion bloque condicionaux

    LEFTPARENTHESES shift and go to state 88


state 73

    (72) escritura -> PRINT . LEFTPARENTHESES escrituraaux RIGHTPARENTHESES SEMICOLON

    LEFTPARENTHESES shift and go to state 89


state 74

    (109) while -> WHILE . seen_while LEFTPARENTHESES expresion RIGHTPARENTHESES seen_right_parentheses_while bloque SEMICOLON seen_end_while
    (110) seen_while -> .

    LEFTPARENTHESES reduce using rule 110 (seen_while -> .)

    seen_while                     shift and go to state 90

state 75

    (113) functionCall -> AT . ID seen_fCall_id LEFTPARENTHESES seen_leftp_fCall paramsFunctionCall seen_end_paramsFCall RIGHTPARENTHESES seen_rightp_fCall

    ID              shift and go to state 91


state 76

    (95) varcte -> ID . seen_ID
    (12) arrayAccesing -> ID . seen_ID LEFTBRACKET seen_initArrayAccesing arrayAccesingExpresionAux RIGHTBRACKET seen_endArrayAccesing
    (104) seen_ID -> .

    LEFTBRACKET     reduce using rule 104 (seen_ID -> .)
    ASIGNATION      reduce using rule 104 (seen_ID -> .)
    DIVIDE          reduce using rule 104 (seen_ID -> .)
    MULTIPLY        reduce using rule 104 (seen_ID -> .)
    PLUS            reduce using rule 104 (seen_ID -> .)
    MINUS           reduce using rule 104 (seen_ID -> .)
    GREATERTHAN     reduce using rule 104 (seen_ID -> .)
    LESSTHAN        reduce using rule 104 (seen_ID -> .)
    LESSTHANOREQUALS reduce using rule 104 (seen_ID -> .)
    NOTEQUALS       reduce using rule 104 (seen_ID -> .)
    EQUALS          reduce using rule 104 (seen_ID -> .)
    LEFTPARENTHESES reduce using rule 104 (seen_ID -> .)
    ID              reduce using rule 104 (seen_ID -> .)
    INT_CTE         reduce using rule 104 (seen_ID -> .)
    FLOAT_CTE       reduce using rule 104 (seen_ID -> .)
    AT              reduce using rule 104 (seen_ID -> .)
    SEMICOLON       reduce using rule 104 (seen_ID -> .)
    RIGHTPARENTHESES reduce using rule 104 (seen_ID -> .)
    COMMA           reduce using rule 104 (seen_ID -> .)
    RIGHTBRACKET    reduce using rule 104 (seen_ID -> .)

    seen_ID                        shift and go to state 92

state 77

    (96) varcte -> INT_CTE . seen_CTE_INT
    (100) seen_CTE_INT -> .

    ASIGNATION      reduce using rule 100 (seen_CTE_INT -> .)
    DIVIDE          reduce using rule 100 (seen_CTE_INT -> .)
    MULTIPLY        reduce using rule 100 (seen_CTE_INT -> .)
    PLUS            reduce using rule 100 (seen_CTE_INT -> .)
    MINUS           reduce using rule 100 (seen_CTE_INT -> .)
    GREATERTHAN     reduce using rule 100 (seen_CTE_INT -> .)
    LESSTHAN        reduce using rule 100 (seen_CTE_INT -> .)
    LESSTHANOREQUALS reduce using rule 100 (seen_CTE_INT -> .)
    NOTEQUALS       reduce using rule 100 (seen_CTE_INT -> .)
    EQUALS          reduce using rule 100 (seen_CTE_INT -> .)
    LEFTPARENTHESES reduce using rule 100 (seen_CTE_INT -> .)
    ID              reduce using rule 100 (seen_CTE_INT -> .)
    INT_CTE         reduce using rule 100 (seen_CTE_INT -> .)
    FLOAT_CTE       reduce using rule 100 (seen_CTE_INT -> .)
    AT              reduce using rule 100 (seen_CTE_INT -> .)
    SEMICOLON       reduce using rule 100 (seen_CTE_INT -> .)
    RIGHTPARENTHESES reduce using rule 100 (seen_CTE_INT -> .)
    COMMA           reduce using rule 100 (seen_CTE_INT -> .)
    RIGHTBRACKET    reduce using rule 100 (seen_CTE_INT -> .)

    seen_CTE_INT                   shift and go to state 93

state 78

    (97) varcte -> FLOAT_CTE . seen_CTE_FLOAT
    (101) seen_CTE_FLOAT -> .

    ASIGNATION      reduce using rule 101 (seen_CTE_FLOAT -> .)
    DIVIDE          reduce using rule 101 (seen_CTE_FLOAT -> .)
    MULTIPLY        reduce using rule 101 (seen_CTE_FLOAT -> .)
    PLUS            reduce using rule 101 (seen_CTE_FLOAT -> .)
    MINUS           reduce using rule 101 (seen_CTE_FLOAT -> .)
    GREATERTHAN     reduce using rule 101 (seen_CTE_FLOAT -> .)
    LESSTHAN        reduce using rule 101 (seen_CTE_FLOAT -> .)
    LESSTHANOREQUALS reduce using rule 101 (seen_CTE_FLOAT -> .)
    NOTEQUALS       reduce using rule 101 (seen_CTE_FLOAT -> .)
    EQUALS          reduce using rule 101 (seen_CTE_FLOAT -> .)
    LEFTPARENTHESES reduce using rule 101 (seen_CTE_FLOAT -> .)
    ID              reduce using rule 101 (seen_CTE_FLOAT -> .)
    INT_CTE         reduce using rule 101 (seen_CTE_FLOAT -> .)
    FLOAT_CTE       reduce using rule 101 (seen_CTE_FLOAT -> .)
    AT              reduce using rule 101 (seen_CTE_FLOAT -> .)
    SEMICOLON       reduce using rule 101 (seen_CTE_FLOAT -> .)
    RIGHTPARENTHESES reduce using rule 101 (seen_CTE_FLOAT -> .)
    COMMA           reduce using rule 101 (seen_CTE_FLOAT -> .)
    RIGHTBRACKET    reduce using rule 101 (seen_CTE_FLOAT -> .)

    seen_CTE_FLOAT                 shift and go to state 94

state 79

    (99) varcte -> arrayAccesing .

    ASIGNATION      reduce using rule 99 (varcte -> arrayAccesing .)
    DIVIDE          reduce using rule 99 (varcte -> arrayAccesing .)
    MULTIPLY        reduce using rule 99 (varcte -> arrayAccesing .)
    PLUS            reduce using rule 99 (varcte -> arrayAccesing .)
    MINUS           reduce using rule 99 (varcte -> arrayAccesing .)
    GREATERTHAN     reduce using rule 99 (varcte -> arrayAccesing .)
    LESSTHAN        reduce using rule 99 (varcte -> arrayAccesing .)
    LESSTHANOREQUALS reduce using rule 99 (varcte -> arrayAccesing .)
    NOTEQUALS       reduce using rule 99 (varcte -> arrayAccesing .)
    EQUALS          reduce using rule 99 (varcte -> arrayAccesing .)
    LEFTPARENTHESES reduce using rule 99 (varcte -> arrayAccesing .)
    ID              reduce using rule 99 (varcte -> arrayAccesing .)
    INT_CTE         reduce using rule 99 (varcte -> arrayAccesing .)
    FLOAT_CTE       reduce using rule 99 (varcte -> arrayAccesing .)
    AT              reduce using rule 99 (varcte -> arrayAccesing .)
    SEMICOLON       reduce using rule 99 (varcte -> arrayAccesing .)
    RIGHTPARENTHESES reduce using rule 99 (varcte -> arrayAccesing .)
    COMMA           reduce using rule 99 (varcte -> arrayAccesing .)
    RIGHTBRACKET    reduce using rule 99 (varcte -> arrayAccesing .)


state 80

    (45) paramsaux -> tipo ID seen_ID_params . paramsaux
    (45) paramsaux -> . tipo ID seen_ID_params paramsaux
    (46) paramsaux -> . COMMA paramsaux
    (47) paramsaux -> . empty
    (30) tipo -> . INT seen_tipo
    (31) tipo -> . FLOAT seen_tipo
    (32) tipo -> . BOOLEAN seen_tipo
    (122) empty -> .

    COMMA           shift and go to state 54
    INT             shift and go to state 19
    FLOAT           shift and go to state 20
    BOOLEAN         shift and go to state 21
    RIGHTPARENTHESES reduce using rule 122 (empty -> .)

    tipo                           shift and go to state 53
    paramsaux                      shift and go to state 95
    empty                          shift and go to state 55

state 81

    (11) idOrArrayDeclaration -> ID seen_ID_var LEFTBRACKET seen_lBracket_array arrayDimesionAux RIGHTBRACKET seen_rBracket_array .

    COMMA           reduce using rule 11 (idOrArrayDeclaration -> ID seen_ID_var LEFTBRACKET seen_lBracket_array arrayDimesionAux RIGHTBRACKET seen_rBracket_array .)
    SEMICOLON       reduce using rule 11 (idOrArrayDeclaration -> ID seen_ID_var LEFTBRACKET seen_lBracket_array arrayDimesionAux RIGHTBRACKET seen_rBracket_array .)


state 82

    (19) arrayDimesionAux -> INT_CTE seen_lim_inf INT_CTE . seen_lim_sup
    (20) arrayDimesionAux -> INT_CTE seen_lim_inf INT_CTE . seen_lim_sup COMMA seen_extra_dimension_array arrayDimesionAux
    (23) seen_lim_sup -> .

    COMMA           reduce using rule 23 (seen_lim_sup -> .)
    RIGHTBRACKET    reduce using rule 23 (seen_lim_sup -> .)

    seen_lim_sup                   shift and go to state 96

state 83

    (49) bloque -> LEFTBRACE seen_start_bloqueaux vars bloqueaux returnaux . RIGHTBRACE

    RIGHTBRACE      shift and go to state 97


state 84

    (50) returnaux -> RETURN . expresion seen_return_function SEMICOLON
    (64) expresion -> . exp seen_comparacion
    (65) expresion -> . exp seen_comparacion expresionaux exp seen_comparacion
    (78) exp -> . termino seen_termino
    (79) exp -> . termino seen_termino expaux
    (82) termino -> . factor seen_factor
    (83) termino -> . factor seen_factor terminoaux
    (92) factor -> . factoraux
    (93) factor -> . varcte
    (94) factoraux -> . LEFTPARENTHESES seen_insert_fondo expresion RIGHTPARENTHESES seen_remove_fondo
    (95) varcte -> . ID seen_ID
    (96) varcte -> . INT_CTE seen_CTE_INT
    (97) varcte -> . FLOAT_CTE seen_CTE_FLOAT
    (98) varcte -> . functionCall
    (99) varcte -> . arrayAccesing
    (113) functionCall -> . AT ID seen_fCall_id LEFTPARENTHESES seen_leftp_fCall paramsFunctionCall seen_end_paramsFCall RIGHTPARENTHESES seen_rightp_fCall
    (12) arrayAccesing -> . ID seen_ID LEFTBRACKET seen_initArrayAccesing arrayAccesingExpresionAux RIGHTBRACKET seen_endArrayAccesing

    LEFTPARENTHESES shift and go to state 104
    ID              shift and go to state 76
    INT_CTE         shift and go to state 77
    FLOAT_CTE       shift and go to state 78
    AT              shift and go to state 75

    expresion                      shift and go to state 98
    exp                            shift and go to state 99
    termino                        shift and go to state 100
    factor                         shift and go to state 101
    factoraux                      shift and go to state 102
    varcte                         shift and go to state 103
    functionCall                   shift and go to state 105
    arrayAccesing                  shift and go to state 79

state 85

    (54) bloqueaux -> estatuto bloqueaux .

    RETURN          reduce using rule 54 (bloqueaux -> estatuto bloqueaux .)
    RIGHTBRACE      reduce using rule 54 (bloqueaux -> estatuto bloqueaux .)


state 86

    (60) estatuto -> functionCall SEMICOLON .

    IF              reduce using rule 60 (estatuto -> functionCall SEMICOLON .)
    PRINT           reduce using rule 60 (estatuto -> functionCall SEMICOLON .)
    WHILE           reduce using rule 60 (estatuto -> functionCall SEMICOLON .)
    AT              reduce using rule 60 (estatuto -> functionCall SEMICOLON .)
    ID              reduce using rule 60 (estatuto -> functionCall SEMICOLON .)
    INT_CTE         reduce using rule 60 (estatuto -> functionCall SEMICOLON .)
    FLOAT_CTE       reduce using rule 60 (estatuto -> functionCall SEMICOLON .)
    RETURN          reduce using rule 60 (estatuto -> functionCall SEMICOLON .)
    RIGHTBRACE      reduce using rule 60 (estatuto -> functionCall SEMICOLON .)


state 87

    (61) asignacion -> varcte ASIGNATION . seen_equals expresion seen_final_asignacion SEMICOLON
    (62) seen_equals -> .

    LEFTPARENTHESES reduce using rule 62 (seen_equals -> .)
    ID              reduce using rule 62 (seen_equals -> .)
    INT_CTE         reduce using rule 62 (seen_equals -> .)
    FLOAT_CTE       reduce using rule 62 (seen_equals -> .)
    AT              reduce using rule 62 (seen_equals -> .)

    seen_equals                    shift and go to state 106

state 88

    (86) condicion -> IF LEFTPARENTHESES . expresion RIGHTPARENTHESES seen_right_parentheses_condicion bloque condicionaux
    (64) expresion -> . exp seen_comparacion
    (65) expresion -> . exp seen_comparacion expresionaux exp seen_comparacion
    (78) exp -> . termino seen_termino
    (79) exp -> . termino seen_termino expaux
    (82) termino -> . factor seen_factor
    (83) termino -> . factor seen_factor terminoaux
    (92) factor -> . factoraux
    (93) factor -> . varcte
    (94) factoraux -> . LEFTPARENTHESES seen_insert_fondo expresion RIGHTPARENTHESES seen_remove_fondo
    (95) varcte -> . ID seen_ID
    (96) varcte -> . INT_CTE seen_CTE_INT
    (97) varcte -> . FLOAT_CTE seen_CTE_FLOAT
    (98) varcte -> . functionCall
    (99) varcte -> . arrayAccesing
    (113) functionCall -> . AT ID seen_fCall_id LEFTPARENTHESES seen_leftp_fCall paramsFunctionCall seen_end_paramsFCall RIGHTPARENTHESES seen_rightp_fCall
    (12) arrayAccesing -> . ID seen_ID LEFTBRACKET seen_initArrayAccesing arrayAccesingExpresionAux RIGHTBRACKET seen_endArrayAccesing

    LEFTPARENTHESES shift and go to state 104
    ID              shift and go to state 76
    INT_CTE         shift and go to state 77
    FLOAT_CTE       shift and go to state 78
    AT              shift and go to state 75

    expresion                      shift and go to state 107
    exp                            shift and go to state 99
    termino                        shift and go to state 100
    factor                         shift and go to state 101
    factoraux                      shift and go to state 102
    varcte                         shift and go to state 103
    functionCall                   shift and go to state 105
    arrayAccesing                  shift and go to state 79

state 89

    (72) escritura -> PRINT LEFTPARENTHESES . escrituraaux RIGHTPARENTHESES SEMICOLON
    (73) escrituraaux -> . escrituraaux2
    (74) escrituraaux -> . escrituraaux2 COMMA escrituraaux
    (75) escrituraaux2 -> . expresion seen_print_cuadruplo
    (76) escrituraaux2 -> . STRING_CTE seen_print_cuadruplo
    (64) expresion -> . exp seen_comparacion
    (65) expresion -> . exp seen_comparacion expresionaux exp seen_comparacion
    (78) exp -> . termino seen_termino
    (79) exp -> . termino seen_termino expaux
    (82) termino -> . factor seen_factor
    (83) termino -> . factor seen_factor terminoaux
    (92) factor -> . factoraux
    (93) factor -> . varcte
    (94) factoraux -> . LEFTPARENTHESES seen_insert_fondo expresion RIGHTPARENTHESES seen_remove_fondo
    (95) varcte -> . ID seen_ID
    (96) varcte -> . INT_CTE seen_CTE_INT
    (97) varcte -> . FLOAT_CTE seen_CTE_FLOAT
    (98) varcte -> . functionCall
    (99) varcte -> . arrayAccesing
    (113) functionCall -> . AT ID seen_fCall_id LEFTPARENTHESES seen_leftp_fCall paramsFunctionCall seen_end_paramsFCall RIGHTPARENTHESES seen_rightp_fCall
    (12) arrayAccesing -> . ID seen_ID LEFTBRACKET seen_initArrayAccesing arrayAccesingExpresionAux RIGHTBRACKET seen_endArrayAccesing

    STRING_CTE      shift and go to state 111
    LEFTPARENTHESES shift and go to state 104
    ID              shift and go to state 76
    INT_CTE         shift and go to state 77
    FLOAT_CTE       shift and go to state 78
    AT              shift and go to state 75

    escrituraaux                   shift and go to state 108
    escrituraaux2                  shift and go to state 109
    expresion                      shift and go to state 110
    exp                            shift and go to state 99
    termino                        shift and go to state 100
    factor                         shift and go to state 101
    factoraux                      shift and go to state 102
    varcte                         shift and go to state 103
    functionCall                   shift and go to state 105
    arrayAccesing                  shift and go to state 79

state 90

    (109) while -> WHILE seen_while . LEFTPARENTHESES expresion RIGHTPARENTHESES seen_right_parentheses_while bloque SEMICOLON seen_end_while

    LEFTPARENTHESES shift and go to state 112


state 91

    (113) functionCall -> AT ID . seen_fCall_id LEFTPARENTHESES seen_leftp_fCall paramsFunctionCall seen_end_paramsFCall RIGHTPARENTHESES seen_rightp_fCall
    (114) seen_fCall_id -> .

    LEFTPARENTHESES reduce using rule 114 (seen_fCall_id -> .)

    seen_fCall_id                  shift and go to state 113

state 92

    (95) varcte -> ID seen_ID .
    (12) arrayAccesing -> ID seen_ID . LEFTBRACKET seen_initArrayAccesing arrayAccesingExpresionAux RIGHTBRACKET seen_endArrayAccesing

    ASIGNATION      reduce using rule 95 (varcte -> ID seen_ID .)
    DIVIDE          reduce using rule 95 (varcte -> ID seen_ID .)
    MULTIPLY        reduce using rule 95 (varcte -> ID seen_ID .)
    PLUS            reduce using rule 95 (varcte -> ID seen_ID .)
    MINUS           reduce using rule 95 (varcte -> ID seen_ID .)
    GREATERTHAN     reduce using rule 95 (varcte -> ID seen_ID .)
    LESSTHAN        reduce using rule 95 (varcte -> ID seen_ID .)
    LESSTHANOREQUALS reduce using rule 95 (varcte -> ID seen_ID .)
    NOTEQUALS       reduce using rule 95 (varcte -> ID seen_ID .)
    EQUALS          reduce using rule 95 (varcte -> ID seen_ID .)
    LEFTPARENTHESES reduce using rule 95 (varcte -> ID seen_ID .)
    ID              reduce using rule 95 (varcte -> ID seen_ID .)
    INT_CTE         reduce using rule 95 (varcte -> ID seen_ID .)
    FLOAT_CTE       reduce using rule 95 (varcte -> ID seen_ID .)
    AT              reduce using rule 95 (varcte -> ID seen_ID .)
    SEMICOLON       reduce using rule 95 (varcte -> ID seen_ID .)
    RIGHTPARENTHESES reduce using rule 95 (varcte -> ID seen_ID .)
    COMMA           reduce using rule 95 (varcte -> ID seen_ID .)
    RIGHTBRACKET    reduce using rule 95 (varcte -> ID seen_ID .)
    LEFTBRACKET     shift and go to state 114


state 93

    (96) varcte -> INT_CTE seen_CTE_INT .

    ASIGNATION      reduce using rule 96 (varcte -> INT_CTE seen_CTE_INT .)
    DIVIDE          reduce using rule 96 (varcte -> INT_CTE seen_CTE_INT .)
    MULTIPLY        reduce using rule 96 (varcte -> INT_CTE seen_CTE_INT .)
    PLUS            reduce using rule 96 (varcte -> INT_CTE seen_CTE_INT .)
    MINUS           reduce using rule 96 (varcte -> INT_CTE seen_CTE_INT .)
    GREATERTHAN     reduce using rule 96 (varcte -> INT_CTE seen_CTE_INT .)
    LESSTHAN        reduce using rule 96 (varcte -> INT_CTE seen_CTE_INT .)
    LESSTHANOREQUALS reduce using rule 96 (varcte -> INT_CTE seen_CTE_INT .)
    NOTEQUALS       reduce using rule 96 (varcte -> INT_CTE seen_CTE_INT .)
    EQUALS          reduce using rule 96 (varcte -> INT_CTE seen_CTE_INT .)
    LEFTPARENTHESES reduce using rule 96 (varcte -> INT_CTE seen_CTE_INT .)
    ID              reduce using rule 96 (varcte -> INT_CTE seen_CTE_INT .)
    INT_CTE         reduce using rule 96 (varcte -> INT_CTE seen_CTE_INT .)
    FLOAT_CTE       reduce using rule 96 (varcte -> INT_CTE seen_CTE_INT .)
    AT              reduce using rule 96 (varcte -> INT_CTE seen_CTE_INT .)
    SEMICOLON       reduce using rule 96 (varcte -> INT_CTE seen_CTE_INT .)
    RIGHTPARENTHESES reduce using rule 96 (varcte -> INT_CTE seen_CTE_INT .)
    COMMA           reduce using rule 96 (varcte -> INT_CTE seen_CTE_INT .)
    RIGHTBRACKET    reduce using rule 96 (varcte -> INT_CTE seen_CTE_INT .)


state 94

    (97) varcte -> FLOAT_CTE seen_CTE_FLOAT .

    ASIGNATION      reduce using rule 97 (varcte -> FLOAT_CTE seen_CTE_FLOAT .)
    DIVIDE          reduce using rule 97 (varcte -> FLOAT_CTE seen_CTE_FLOAT .)
    MULTIPLY        reduce using rule 97 (varcte -> FLOAT_CTE seen_CTE_FLOAT .)
    PLUS            reduce using rule 97 (varcte -> FLOAT_CTE seen_CTE_FLOAT .)
    MINUS           reduce using rule 97 (varcte -> FLOAT_CTE seen_CTE_FLOAT .)
    GREATERTHAN     reduce using rule 97 (varcte -> FLOAT_CTE seen_CTE_FLOAT .)
    LESSTHAN        reduce using rule 97 (varcte -> FLOAT_CTE seen_CTE_FLOAT .)
    LESSTHANOREQUALS reduce using rule 97 (varcte -> FLOAT_CTE seen_CTE_FLOAT .)
    NOTEQUALS       reduce using rule 97 (varcte -> FLOAT_CTE seen_CTE_FLOAT .)
    EQUALS          reduce using rule 97 (varcte -> FLOAT_CTE seen_CTE_FLOAT .)
    LEFTPARENTHESES reduce using rule 97 (varcte -> FLOAT_CTE seen_CTE_FLOAT .)
    ID              reduce using rule 97 (varcte -> FLOAT_CTE seen_CTE_FLOAT .)
    INT_CTE         reduce using rule 97 (varcte -> FLOAT_CTE seen_CTE_FLOAT .)
    FLOAT_CTE       reduce using rule 97 (varcte -> FLOAT_CTE seen_CTE_FLOAT .)
    AT              reduce using rule 97 (varcte -> FLOAT_CTE seen_CTE_FLOAT .)
    SEMICOLON       reduce using rule 97 (varcte -> FLOAT_CTE seen_CTE_FLOAT .)
    RIGHTPARENTHESES reduce using rule 97 (varcte -> FLOAT_CTE seen_CTE_FLOAT .)
    COMMA           reduce using rule 97 (varcte -> FLOAT_CTE seen_CTE_FLOAT .)
    RIGHTBRACKET    reduce using rule 97 (varcte -> FLOAT_CTE seen_CTE_FLOAT .)


state 95

    (45) paramsaux -> tipo ID seen_ID_params paramsaux .

    RIGHTPARENTHESES reduce using rule 45 (paramsaux -> tipo ID seen_ID_params paramsaux .)


state 96

    (19) arrayDimesionAux -> INT_CTE seen_lim_inf INT_CTE seen_lim_sup .
    (20) arrayDimesionAux -> INT_CTE seen_lim_inf INT_CTE seen_lim_sup . COMMA seen_extra_dimension_array arrayDimesionAux

    RIGHTBRACKET    reduce using rule 19 (arrayDimesionAux -> INT_CTE seen_lim_inf INT_CTE seen_lim_sup .)
    COMMA           shift and go to state 115


state 97

    (49) bloque -> LEFTBRACE seen_start_bloqueaux vars bloqueaux returnaux RIGHTBRACE .

    $end            reduce using rule 49 (bloque -> LEFTBRACE seen_start_bloqueaux vars bloqueaux returnaux RIGHTBRACE .)
    FUNCTION        reduce using rule 49 (bloque -> LEFTBRACE seen_start_bloqueaux vars bloqueaux returnaux RIGHTBRACE .)
    MAIN            reduce using rule 49 (bloque -> LEFTBRACE seen_start_bloqueaux vars bloqueaux returnaux RIGHTBRACE .)
    ELSE            reduce using rule 49 (bloque -> LEFTBRACE seen_start_bloqueaux vars bloqueaux returnaux RIGHTBRACE .)
    SEMICOLON       reduce using rule 49 (bloque -> LEFTBRACE seen_start_bloqueaux vars bloqueaux returnaux RIGHTBRACE .)


state 98

    (50) returnaux -> RETURN expresion . seen_return_function SEMICOLON
    (52) seen_return_function -> .

    SEMICOLON       reduce using rule 52 (seen_return_function -> .)

    seen_return_function           shift and go to state 116

state 99

    (64) expresion -> exp . seen_comparacion
    (65) expresion -> exp . seen_comparacion expresionaux exp seen_comparacion
    (108) seen_comparacion -> .

    GREATERTHAN     reduce using rule 108 (seen_comparacion -> .)
    LESSTHAN        reduce using rule 108 (seen_comparacion -> .)
    LESSTHANOREQUALS reduce using rule 108 (seen_comparacion -> .)
    NOTEQUALS       reduce using rule 108 (seen_comparacion -> .)
    EQUALS          reduce using rule 108 (seen_comparacion -> .)
    LEFTPARENTHESES reduce using rule 108 (seen_comparacion -> .)
    ID              reduce using rule 108 (seen_comparacion -> .)
    INT_CTE         reduce using rule 108 (seen_comparacion -> .)
    FLOAT_CTE       reduce using rule 108 (seen_comparacion -> .)
    AT              reduce using rule 108 (seen_comparacion -> .)
    SEMICOLON       reduce using rule 108 (seen_comparacion -> .)
    RIGHTPARENTHESES reduce using rule 108 (seen_comparacion -> .)
    COMMA           reduce using rule 108 (seen_comparacion -> .)
    RIGHTBRACKET    reduce using rule 108 (seen_comparacion -> .)

    seen_comparacion               shift and go to state 117

state 100

    (78) exp -> termino . seen_termino
    (79) exp -> termino . seen_termino expaux
    (106) seen_termino -> .

    PLUS            reduce using rule 106 (seen_termino -> .)
    MINUS           reduce using rule 106 (seen_termino -> .)
    GREATERTHAN     reduce using rule 106 (seen_termino -> .)
    LESSTHAN        reduce using rule 106 (seen_termino -> .)
    LESSTHANOREQUALS reduce using rule 106 (seen_termino -> .)
    NOTEQUALS       reduce using rule 106 (seen_termino -> .)
    EQUALS          reduce using rule 106 (seen_termino -> .)
    LEFTPARENTHESES reduce using rule 106 (seen_termino -> .)
    ID              reduce using rule 106 (seen_termino -> .)
    INT_CTE         reduce using rule 106 (seen_termino -> .)
    FLOAT_CTE       reduce using rule 106 (seen_termino -> .)
    AT              reduce using rule 106 (seen_termino -> .)
    SEMICOLON       reduce using rule 106 (seen_termino -> .)
    RIGHTPARENTHESES reduce using rule 106 (seen_termino -> .)
    COMMA           reduce using rule 106 (seen_termino -> .)
    RIGHTBRACKET    reduce using rule 106 (seen_termino -> .)

    seen_termino                   shift and go to state 118

state 101

    (82) termino -> factor . seen_factor
    (83) termino -> factor . seen_factor terminoaux
    (107) seen_factor -> .

    DIVIDE          reduce using rule 107 (seen_factor -> .)
    MULTIPLY        reduce using rule 107 (seen_factor -> .)
    PLUS            reduce using rule 107 (seen_factor -> .)
    MINUS           reduce using rule 107 (seen_factor -> .)
    GREATERTHAN     reduce using rule 107 (seen_factor -> .)
    LESSTHAN        reduce using rule 107 (seen_factor -> .)
    LESSTHANOREQUALS reduce using rule 107 (seen_factor -> .)
    NOTEQUALS       reduce using rule 107 (seen_factor -> .)
    EQUALS          reduce using rule 107 (seen_factor -> .)
    LEFTPARENTHESES reduce using rule 107 (seen_factor -> .)
    ID              reduce using rule 107 (seen_factor -> .)
    INT_CTE         reduce using rule 107 (seen_factor -> .)
    FLOAT_CTE       reduce using rule 107 (seen_factor -> .)
    AT              reduce using rule 107 (seen_factor -> .)
    SEMICOLON       reduce using rule 107 (seen_factor -> .)
    RIGHTPARENTHESES reduce using rule 107 (seen_factor -> .)
    COMMA           reduce using rule 107 (seen_factor -> .)
    RIGHTBRACKET    reduce using rule 107 (seen_factor -> .)

    seen_factor                    shift and go to state 119

state 102

    (92) factor -> factoraux .

    DIVIDE          reduce using rule 92 (factor -> factoraux .)
    MULTIPLY        reduce using rule 92 (factor -> factoraux .)
    PLUS            reduce using rule 92 (factor -> factoraux .)
    MINUS           reduce using rule 92 (factor -> factoraux .)
    GREATERTHAN     reduce using rule 92 (factor -> factoraux .)
    LESSTHAN        reduce using rule 92 (factor -> factoraux .)
    LESSTHANOREQUALS reduce using rule 92 (factor -> factoraux .)
    NOTEQUALS       reduce using rule 92 (factor -> factoraux .)
    EQUALS          reduce using rule 92 (factor -> factoraux .)
    LEFTPARENTHESES reduce using rule 92 (factor -> factoraux .)
    ID              reduce using rule 92 (factor -> factoraux .)
    INT_CTE         reduce using rule 92 (factor -> factoraux .)
    FLOAT_CTE       reduce using rule 92 (factor -> factoraux .)
    AT              reduce using rule 92 (factor -> factoraux .)
    SEMICOLON       reduce using rule 92 (factor -> factoraux .)
    RIGHTPARENTHESES reduce using rule 92 (factor -> factoraux .)
    COMMA           reduce using rule 92 (factor -> factoraux .)
    RIGHTBRACKET    reduce using rule 92 (factor -> factoraux .)


state 103

    (93) factor -> varcte .

    DIVIDE          reduce using rule 93 (factor -> varcte .)
    MULTIPLY        reduce using rule 93 (factor -> varcte .)
    PLUS            reduce using rule 93 (factor -> varcte .)
    MINUS           reduce using rule 93 (factor -> varcte .)
    GREATERTHAN     reduce using rule 93 (factor -> varcte .)
    LESSTHAN        reduce using rule 93 (factor -> varcte .)
    LESSTHANOREQUALS reduce using rule 93 (factor -> varcte .)
    NOTEQUALS       reduce using rule 93 (factor -> varcte .)
    EQUALS          reduce using rule 93 (factor -> varcte .)
    LEFTPARENTHESES reduce using rule 93 (factor -> varcte .)
    ID              reduce using rule 93 (factor -> varcte .)
    INT_CTE         reduce using rule 93 (factor -> varcte .)
    FLOAT_CTE       reduce using rule 93 (factor -> varcte .)
    AT              reduce using rule 93 (factor -> varcte .)
    SEMICOLON       reduce using rule 93 (factor -> varcte .)
    RIGHTPARENTHESES reduce using rule 93 (factor -> varcte .)
    COMMA           reduce using rule 93 (factor -> varcte .)
    RIGHTBRACKET    reduce using rule 93 (factor -> varcte .)


state 104

    (94) factoraux -> LEFTPARENTHESES . seen_insert_fondo expresion RIGHTPARENTHESES seen_remove_fondo
    (102) seen_insert_fondo -> .

    LEFTPARENTHESES reduce using rule 102 (seen_insert_fondo -> .)
    ID              reduce using rule 102 (seen_insert_fondo -> .)
    INT_CTE         reduce using rule 102 (seen_insert_fondo -> .)
    FLOAT_CTE       reduce using rule 102 (seen_insert_fondo -> .)
    AT              reduce using rule 102 (seen_insert_fondo -> .)

    seen_insert_fondo              shift and go to state 120

state 105

    (98) varcte -> functionCall .

    DIVIDE          reduce using rule 98 (varcte -> functionCall .)
    MULTIPLY        reduce using rule 98 (varcte -> functionCall .)
    PLUS            reduce using rule 98 (varcte -> functionCall .)
    MINUS           reduce using rule 98 (varcte -> functionCall .)
    GREATERTHAN     reduce using rule 98 (varcte -> functionCall .)
    LESSTHAN        reduce using rule 98 (varcte -> functionCall .)
    LESSTHANOREQUALS reduce using rule 98 (varcte -> functionCall .)
    NOTEQUALS       reduce using rule 98 (varcte -> functionCall .)
    EQUALS          reduce using rule 98 (varcte -> functionCall .)
    LEFTPARENTHESES reduce using rule 98 (varcte -> functionCall .)
    ID              reduce using rule 98 (varcte -> functionCall .)
    INT_CTE         reduce using rule 98 (varcte -> functionCall .)
    FLOAT_CTE       reduce using rule 98 (varcte -> functionCall .)
    AT              reduce using rule 98 (varcte -> functionCall .)
    SEMICOLON       reduce using rule 98 (varcte -> functionCall .)
    RIGHTPARENTHESES reduce using rule 98 (varcte -> functionCall .)
    COMMA           reduce using rule 98 (varcte -> functionCall .)
    RIGHTBRACKET    reduce using rule 98 (varcte -> functionCall .)


state 106

    (61) asignacion -> varcte ASIGNATION seen_equals . expresion seen_final_asignacion SEMICOLON
    (64) expresion -> . exp seen_comparacion
    (65) expresion -> . exp seen_comparacion expresionaux exp seen_comparacion
    (78) exp -> . termino seen_termino
    (79) exp -> . termino seen_termino expaux
    (82) termino -> . factor seen_factor
    (83) termino -> . factor seen_factor terminoaux
    (92) factor -> . factoraux
    (93) factor -> . varcte
    (94) factoraux -> . LEFTPARENTHESES seen_insert_fondo expresion RIGHTPARENTHESES seen_remove_fondo
    (95) varcte -> . ID seen_ID
    (96) varcte -> . INT_CTE seen_CTE_INT
    (97) varcte -> . FLOAT_CTE seen_CTE_FLOAT
    (98) varcte -> . functionCall
    (99) varcte -> . arrayAccesing
    (113) functionCall -> . AT ID seen_fCall_id LEFTPARENTHESES seen_leftp_fCall paramsFunctionCall seen_end_paramsFCall RIGHTPARENTHESES seen_rightp_fCall
    (12) arrayAccesing -> . ID seen_ID LEFTBRACKET seen_initArrayAccesing arrayAccesingExpresionAux RIGHTBRACKET seen_endArrayAccesing

    LEFTPARENTHESES shift and go to state 104
    ID              shift and go to state 76
    INT_CTE         shift and go to state 77
    FLOAT_CTE       shift and go to state 78
    AT              shift and go to state 75

    varcte                         shift and go to state 103
    expresion                      shift and go to state 121
    exp                            shift and go to state 99
    termino                        shift and go to state 100
    factor                         shift and go to state 101
    factoraux                      shift and go to state 102
    functionCall                   shift and go to state 105
    arrayAccesing                  shift and go to state 79

state 107

    (86) condicion -> IF LEFTPARENTHESES expresion . RIGHTPARENTHESES seen_right_parentheses_condicion bloque condicionaux

    RIGHTPARENTHESES shift and go to state 122


state 108

    (72) escritura -> PRINT LEFTPARENTHESES escrituraaux . RIGHTPARENTHESES SEMICOLON

    RIGHTPARENTHESES shift and go to state 123


state 109

    (73) escrituraaux -> escrituraaux2 .
    (74) escrituraaux -> escrituraaux2 . COMMA escrituraaux

    RIGHTPARENTHESES reduce using rule 73 (escrituraaux -> escrituraaux2 .)
    COMMA           shift and go to state 124


state 110

    (75) escrituraaux2 -> expresion . seen_print_cuadruplo
    (77) seen_print_cuadruplo -> .

    COMMA           reduce using rule 77 (seen_print_cuadruplo -> .)
    RIGHTPARENTHESES reduce using rule 77 (seen_print_cuadruplo -> .)

    seen_print_cuadruplo           shift and go to state 125

state 111

    (76) escrituraaux2 -> STRING_CTE . seen_print_cuadruplo
    (77) seen_print_cuadruplo -> .

    COMMA           reduce using rule 77 (seen_print_cuadruplo -> .)
    RIGHTPARENTHESES reduce using rule 77 (seen_print_cuadruplo -> .)

    seen_print_cuadruplo           shift and go to state 126

state 112

    (109) while -> WHILE seen_while LEFTPARENTHESES . expresion RIGHTPARENTHESES seen_right_parentheses_while bloque SEMICOLON seen_end_while
    (64) expresion -> . exp seen_comparacion
    (65) expresion -> . exp seen_comparacion expresionaux exp seen_comparacion
    (78) exp -> . termino seen_termino
    (79) exp -> . termino seen_termino expaux
    (82) termino -> . factor seen_factor
    (83) termino -> . factor seen_factor terminoaux
    (92) factor -> . factoraux
    (93) factor -> . varcte
    (94) factoraux -> . LEFTPARENTHESES seen_insert_fondo expresion RIGHTPARENTHESES seen_remove_fondo
    (95) varcte -> . ID seen_ID
    (96) varcte -> . INT_CTE seen_CTE_INT
    (97) varcte -> . FLOAT_CTE seen_CTE_FLOAT
    (98) varcte -> . functionCall
    (99) varcte -> . arrayAccesing
    (113) functionCall -> . AT ID seen_fCall_id LEFTPARENTHESES seen_leftp_fCall paramsFunctionCall seen_end_paramsFCall RIGHTPARENTHESES seen_rightp_fCall
    (12) arrayAccesing -> . ID seen_ID LEFTBRACKET seen_initArrayAccesing arrayAccesingExpresionAux RIGHTBRACKET seen_endArrayAccesing

    LEFTPARENTHESES shift and go to state 104
    ID              shift and go to state 76
    INT_CTE         shift and go to state 77
    FLOAT_CTE       shift and go to state 78
    AT              shift and go to state 75

    expresion                      shift and go to state 127
    exp                            shift and go to state 99
    termino                        shift and go to state 100
    factor                         shift and go to state 101
    factoraux                      shift and go to state 102
    varcte                         shift and go to state 103
    functionCall                   shift and go to state 105
    arrayAccesing                  shift and go to state 79

state 113

    (113) functionCall -> AT ID seen_fCall_id . LEFTPARENTHESES seen_leftp_fCall paramsFunctionCall seen_end_paramsFCall RIGHTPARENTHESES seen_rightp_fCall

    LEFTPARENTHESES shift and go to state 128


state 114

    (12) arrayAccesing -> ID seen_ID LEFTBRACKET . seen_initArrayAccesing arrayAccesingExpresionAux RIGHTBRACKET seen_endArrayAccesing
    (15) seen_initArrayAccesing -> .

    LEFTPARENTHESES reduce using rule 15 (seen_initArrayAccesing -> .)
    ID              reduce using rule 15 (seen_initArrayAccesing -> .)
    INT_CTE         reduce using rule 15 (seen_initArrayAccesing -> .)
    FLOAT_CTE       reduce using rule 15 (seen_initArrayAccesing -> .)
    AT              reduce using rule 15 (seen_initArrayAccesing -> .)

    seen_initArrayAccesing         shift and go to state 129

state 115

    (20) arrayDimesionAux -> INT_CTE seen_lim_inf INT_CTE seen_lim_sup COMMA . seen_extra_dimension_array arrayDimesionAux
    (21) seen_extra_dimension_array -> .

    INT_CTE         reduce using rule 21 (seen_extra_dimension_array -> .)

    seen_extra_dimension_array     shift and go to state 130

state 116

    (50) returnaux -> RETURN expresion seen_return_function . SEMICOLON

    SEMICOLON       shift and go to state 131


state 117

    (64) expresion -> exp seen_comparacion .
    (65) expresion -> exp seen_comparacion . expresionaux exp seen_comparacion
    (66) expresionaux -> . GREATERTHAN seen_operador
    (67) expresionaux -> . LESSTHAN seen_operador
    (68) expresionaux -> . LESSTHANOREQUALS seen_operador
    (69) expresionaux -> . NOTEQUALS seen_operador
    (70) expresionaux -> . EQUALS seen_operador
    (71) expresionaux -> .

    SEMICOLON       reduce using rule 64 (expresion -> exp seen_comparacion .)
    RIGHTPARENTHESES reduce using rule 64 (expresion -> exp seen_comparacion .)
    COMMA           reduce using rule 64 (expresion -> exp seen_comparacion .)
    RIGHTBRACKET    reduce using rule 64 (expresion -> exp seen_comparacion .)
    GREATERTHAN     shift and go to state 133
    LESSTHAN        shift and go to state 134
    LESSTHANOREQUALS shift and go to state 135
    NOTEQUALS       shift and go to state 136
    EQUALS          shift and go to state 137
    LEFTPARENTHESES reduce using rule 71 (expresionaux -> .)
    ID              reduce using rule 71 (expresionaux -> .)
    INT_CTE         reduce using rule 71 (expresionaux -> .)
    FLOAT_CTE       reduce using rule 71 (expresionaux -> .)
    AT              reduce using rule 71 (expresionaux -> .)

    expresionaux                   shift and go to state 132

state 118

    (78) exp -> termino seen_termino .
    (79) exp -> termino seen_termino . expaux
    (80) expaux -> . PLUS seen_operador exp
    (81) expaux -> . MINUS seen_operador exp

    GREATERTHAN     reduce using rule 78 (exp -> termino seen_termino .)
    LESSTHAN        reduce using rule 78 (exp -> termino seen_termino .)
    LESSTHANOREQUALS reduce using rule 78 (exp -> termino seen_termino .)
    NOTEQUALS       reduce using rule 78 (exp -> termino seen_termino .)
    EQUALS          reduce using rule 78 (exp -> termino seen_termino .)
    LEFTPARENTHESES reduce using rule 78 (exp -> termino seen_termino .)
    ID              reduce using rule 78 (exp -> termino seen_termino .)
    INT_CTE         reduce using rule 78 (exp -> termino seen_termino .)
    FLOAT_CTE       reduce using rule 78 (exp -> termino seen_termino .)
    AT              reduce using rule 78 (exp -> termino seen_termino .)
    SEMICOLON       reduce using rule 78 (exp -> termino seen_termino .)
    RIGHTPARENTHESES reduce using rule 78 (exp -> termino seen_termino .)
    COMMA           reduce using rule 78 (exp -> termino seen_termino .)
    RIGHTBRACKET    reduce using rule 78 (exp -> termino seen_termino .)
    PLUS            shift and go to state 139
    MINUS           shift and go to state 140

    expaux                         shift and go to state 138

state 119

    (82) termino -> factor seen_factor .
    (83) termino -> factor seen_factor . terminoaux
    (84) terminoaux -> . DIVIDE seen_operador termino
    (85) terminoaux -> . MULTIPLY seen_operador termino

    PLUS            reduce using rule 82 (termino -> factor seen_factor .)
    MINUS           reduce using rule 82 (termino -> factor seen_factor .)
    GREATERTHAN     reduce using rule 82 (termino -> factor seen_factor .)
    LESSTHAN        reduce using rule 82 (termino -> factor seen_factor .)
    LESSTHANOREQUALS reduce using rule 82 (termino -> factor seen_factor .)
    NOTEQUALS       reduce using rule 82 (termino -> factor seen_factor .)
    EQUALS          reduce using rule 82 (termino -> factor seen_factor .)
    LEFTPARENTHESES reduce using rule 82 (termino -> factor seen_factor .)
    ID              reduce using rule 82 (termino -> factor seen_factor .)
    INT_CTE         reduce using rule 82 (termino -> factor seen_factor .)
    FLOAT_CTE       reduce using rule 82 (termino -> factor seen_factor .)
    AT              reduce using rule 82 (termino -> factor seen_factor .)
    SEMICOLON       reduce using rule 82 (termino -> factor seen_factor .)
    RIGHTPARENTHESES reduce using rule 82 (termino -> factor seen_factor .)
    COMMA           reduce using rule 82 (termino -> factor seen_factor .)
    RIGHTBRACKET    reduce using rule 82 (termino -> factor seen_factor .)
    DIVIDE          shift and go to state 142
    MULTIPLY        shift and go to state 143

    terminoaux                     shift and go to state 141

state 120

    (94) factoraux -> LEFTPARENTHESES seen_insert_fondo . expresion RIGHTPARENTHESES seen_remove_fondo
    (64) expresion -> . exp seen_comparacion
    (65) expresion -> . exp seen_comparacion expresionaux exp seen_comparacion
    (78) exp -> . termino seen_termino
    (79) exp -> . termino seen_termino expaux
    (82) termino -> . factor seen_factor
    (83) termino -> . factor seen_factor terminoaux
    (92) factor -> . factoraux
    (93) factor -> . varcte
    (94) factoraux -> . LEFTPARENTHESES seen_insert_fondo expresion RIGHTPARENTHESES seen_remove_fondo
    (95) varcte -> . ID seen_ID
    (96) varcte -> . INT_CTE seen_CTE_INT
    (97) varcte -> . FLOAT_CTE seen_CTE_FLOAT
    (98) varcte -> . functionCall
    (99) varcte -> . arrayAccesing
    (113) functionCall -> . AT ID seen_fCall_id LEFTPARENTHESES seen_leftp_fCall paramsFunctionCall seen_end_paramsFCall RIGHTPARENTHESES seen_rightp_fCall
    (12) arrayAccesing -> . ID seen_ID LEFTBRACKET seen_initArrayAccesing arrayAccesingExpresionAux RIGHTBRACKET seen_endArrayAccesing

    LEFTPARENTHESES shift and go to state 104
    ID              shift and go to state 76
    INT_CTE         shift and go to state 77
    FLOAT_CTE       shift and go to state 78
    AT              shift and go to state 75

    expresion                      shift and go to state 144
    exp                            shift and go to state 99
    termino                        shift and go to state 100
    factor                         shift and go to state 101
    factoraux                      shift and go to state 102
    varcte                         shift and go to state 103
    functionCall                   shift and go to state 105
    arrayAccesing                  shift and go to state 79

state 121

    (61) asignacion -> varcte ASIGNATION seen_equals expresion . seen_final_asignacion SEMICOLON
    (63) seen_final_asignacion -> .

    SEMICOLON       reduce using rule 63 (seen_final_asignacion -> .)

    seen_final_asignacion          shift and go to state 145

state 122

    (86) condicion -> IF LEFTPARENTHESES expresion RIGHTPARENTHESES . seen_right_parentheses_condicion bloque condicionaux
    (89) seen_right_parentheses_condicion -> .

    LEFTBRACE       reduce using rule 89 (seen_right_parentheses_condicion -> .)

    seen_right_parentheses_condicion shift and go to state 146

state 123

    (72) escritura -> PRINT LEFTPARENTHESES escrituraaux RIGHTPARENTHESES . SEMICOLON

    SEMICOLON       shift and go to state 147


state 124

    (74) escrituraaux -> escrituraaux2 COMMA . escrituraaux
    (73) escrituraaux -> . escrituraaux2
    (74) escrituraaux -> . escrituraaux2 COMMA escrituraaux
    (75) escrituraaux2 -> . expresion seen_print_cuadruplo
    (76) escrituraaux2 -> . STRING_CTE seen_print_cuadruplo
    (64) expresion -> . exp seen_comparacion
    (65) expresion -> . exp seen_comparacion expresionaux exp seen_comparacion
    (78) exp -> . termino seen_termino
    (79) exp -> . termino seen_termino expaux
    (82) termino -> . factor seen_factor
    (83) termino -> . factor seen_factor terminoaux
    (92) factor -> . factoraux
    (93) factor -> . varcte
    (94) factoraux -> . LEFTPARENTHESES seen_insert_fondo expresion RIGHTPARENTHESES seen_remove_fondo
    (95) varcte -> . ID seen_ID
    (96) varcte -> . INT_CTE seen_CTE_INT
    (97) varcte -> . FLOAT_CTE seen_CTE_FLOAT
    (98) varcte -> . functionCall
    (99) varcte -> . arrayAccesing
    (113) functionCall -> . AT ID seen_fCall_id LEFTPARENTHESES seen_leftp_fCall paramsFunctionCall seen_end_paramsFCall RIGHTPARENTHESES seen_rightp_fCall
    (12) arrayAccesing -> . ID seen_ID LEFTBRACKET seen_initArrayAccesing arrayAccesingExpresionAux RIGHTBRACKET seen_endArrayAccesing

    STRING_CTE      shift and go to state 111
    LEFTPARENTHESES shift and go to state 104
    ID              shift and go to state 76
    INT_CTE         shift and go to state 77
    FLOAT_CTE       shift and go to state 78
    AT              shift and go to state 75

    escrituraaux2                  shift and go to state 109
    escrituraaux                   shift and go to state 148
    expresion                      shift and go to state 110
    exp                            shift and go to state 99
    termino                        shift and go to state 100
    factor                         shift and go to state 101
    factoraux                      shift and go to state 102
    varcte                         shift and go to state 103
    functionCall                   shift and go to state 105
    arrayAccesing                  shift and go to state 79

state 125

    (75) escrituraaux2 -> expresion seen_print_cuadruplo .

    COMMA           reduce using rule 75 (escrituraaux2 -> expresion seen_print_cuadruplo .)
    RIGHTPARENTHESES reduce using rule 75 (escrituraaux2 -> expresion seen_print_cuadruplo .)


state 126

    (76) escrituraaux2 -> STRING_CTE seen_print_cuadruplo .

    COMMA           reduce using rule 76 (escrituraaux2 -> STRING_CTE seen_print_cuadruplo .)
    RIGHTPARENTHESES reduce using rule 76 (escrituraaux2 -> STRING_CTE seen_print_cuadruplo .)


state 127

    (109) while -> WHILE seen_while LEFTPARENTHESES expresion . RIGHTPARENTHESES seen_right_parentheses_while bloque SEMICOLON seen_end_while

    RIGHTPARENTHESES shift and go to state 149


state 128

    (113) functionCall -> AT ID seen_fCall_id LEFTPARENTHESES . seen_leftp_fCall paramsFunctionCall seen_end_paramsFCall RIGHTPARENTHESES seen_rightp_fCall
    (115) seen_leftp_fCall -> .

    LEFTPARENTHESES reduce using rule 115 (seen_leftp_fCall -> .)
    ID              reduce using rule 115 (seen_leftp_fCall -> .)
    INT_CTE         reduce using rule 115 (seen_leftp_fCall -> .)
    FLOAT_CTE       reduce using rule 115 (seen_leftp_fCall -> .)
    AT              reduce using rule 115 (seen_leftp_fCall -> .)

    seen_leftp_fCall               shift and go to state 150

state 129

    (12) arrayAccesing -> ID seen_ID LEFTBRACKET seen_initArrayAccesing . arrayAccesingExpresionAux RIGHTBRACKET seen_endArrayAccesing
    (13) arrayAccesingExpresionAux -> . expresion seen_expresion_array
    (14) arrayAccesingExpresionAux -> . expresion seen_expresion_array COMMA seen_commaAccesingExpresion
    (64) expresion -> . exp seen_comparacion
    (65) expresion -> . exp seen_comparacion expresionaux exp seen_comparacion
    (78) exp -> . termino seen_termino
    (79) exp -> . termino seen_termino expaux
    (82) termino -> . factor seen_factor
    (83) termino -> . factor seen_factor terminoaux
    (92) factor -> . factoraux
    (93) factor -> . varcte
    (94) factoraux -> . LEFTPARENTHESES seen_insert_fondo expresion RIGHTPARENTHESES seen_remove_fondo
    (95) varcte -> . ID seen_ID
    (96) varcte -> . INT_CTE seen_CTE_INT
    (97) varcte -> . FLOAT_CTE seen_CTE_FLOAT
    (98) varcte -> . functionCall
    (99) varcte -> . arrayAccesing
    (113) functionCall -> . AT ID seen_fCall_id LEFTPARENTHESES seen_leftp_fCall paramsFunctionCall seen_end_paramsFCall RIGHTPARENTHESES seen_rightp_fCall
    (12) arrayAccesing -> . ID seen_ID LEFTBRACKET seen_initArrayAccesing arrayAccesingExpresionAux RIGHTBRACKET seen_endArrayAccesing

    LEFTPARENTHESES shift and go to state 104
    ID              shift and go to state 76
    INT_CTE         shift and go to state 77
    FLOAT_CTE       shift and go to state 78
    AT              shift and go to state 75

    arrayAccesingExpresionAux      shift and go to state 151
    expresion                      shift and go to state 152
    exp                            shift and go to state 99
    termino                        shift and go to state 100
    factor                         shift and go to state 101
    factoraux                      shift and go to state 102
    varcte                         shift and go to state 103
    functionCall                   shift and go to state 105
    arrayAccesing                  shift and go to state 79

state 130

    (20) arrayDimesionAux -> INT_CTE seen_lim_inf INT_CTE seen_lim_sup COMMA seen_extra_dimension_array . arrayDimesionAux
    (19) arrayDimesionAux -> . INT_CTE seen_lim_inf INT_CTE seen_lim_sup
    (20) arrayDimesionAux -> . INT_CTE seen_lim_inf INT_CTE seen_lim_sup COMMA seen_extra_dimension_array arrayDimesionAux

    INT_CTE         shift and go to state 57

    arrayDimesionAux               shift and go to state 153

state 131

    (50) returnaux -> RETURN expresion seen_return_function SEMICOLON .

    RIGHTBRACE      reduce using rule 50 (returnaux -> RETURN expresion seen_return_function SEMICOLON .)


state 132

    (65) expresion -> exp seen_comparacion expresionaux . exp seen_comparacion
    (78) exp -> . termino seen_termino
    (79) exp -> . termino seen_termino expaux
    (82) termino -> . factor seen_factor
    (83) termino -> . factor seen_factor terminoaux
    (92) factor -> . factoraux
    (93) factor -> . varcte
    (94) factoraux -> . LEFTPARENTHESES seen_insert_fondo expresion RIGHTPARENTHESES seen_remove_fondo
    (95) varcte -> . ID seen_ID
    (96) varcte -> . INT_CTE seen_CTE_INT
    (97) varcte -> . FLOAT_CTE seen_CTE_FLOAT
    (98) varcte -> . functionCall
    (99) varcte -> . arrayAccesing
    (113) functionCall -> . AT ID seen_fCall_id LEFTPARENTHESES seen_leftp_fCall paramsFunctionCall seen_end_paramsFCall RIGHTPARENTHESES seen_rightp_fCall
    (12) arrayAccesing -> . ID seen_ID LEFTBRACKET seen_initArrayAccesing arrayAccesingExpresionAux RIGHTBRACKET seen_endArrayAccesing

    LEFTPARENTHESES shift and go to state 104
    ID              shift and go to state 76
    INT_CTE         shift and go to state 77
    FLOAT_CTE       shift and go to state 78
    AT              shift and go to state 75

    exp                            shift and go to state 154
    termino                        shift and go to state 100
    factor                         shift and go to state 101
    factoraux                      shift and go to state 102
    varcte                         shift and go to state 103
    functionCall                   shift and go to state 105
    arrayAccesing                  shift and go to state 79

state 133

    (66) expresionaux -> GREATERTHAN . seen_operador
    (105) seen_operador -> .

    LEFTPARENTHESES reduce using rule 105 (seen_operador -> .)
    ID              reduce using rule 105 (seen_operador -> .)
    INT_CTE         reduce using rule 105 (seen_operador -> .)
    FLOAT_CTE       reduce using rule 105 (seen_operador -> .)
    AT              reduce using rule 105 (seen_operador -> .)

    seen_operador                  shift and go to state 155

state 134

    (67) expresionaux -> LESSTHAN . seen_operador
    (105) seen_operador -> .

    LEFTPARENTHESES reduce using rule 105 (seen_operador -> .)
    ID              reduce using rule 105 (seen_operador -> .)
    INT_CTE         reduce using rule 105 (seen_operador -> .)
    FLOAT_CTE       reduce using rule 105 (seen_operador -> .)
    AT              reduce using rule 105 (seen_operador -> .)

    seen_operador                  shift and go to state 156

state 135

    (68) expresionaux -> LESSTHANOREQUALS . seen_operador
    (105) seen_operador -> .

    LEFTPARENTHESES reduce using rule 105 (seen_operador -> .)
    ID              reduce using rule 105 (seen_operador -> .)
    INT_CTE         reduce using rule 105 (seen_operador -> .)
    FLOAT_CTE       reduce using rule 105 (seen_operador -> .)
    AT              reduce using rule 105 (seen_operador -> .)

    seen_operador                  shift and go to state 157

state 136

    (69) expresionaux -> NOTEQUALS . seen_operador
    (105) seen_operador -> .

    LEFTPARENTHESES reduce using rule 105 (seen_operador -> .)
    ID              reduce using rule 105 (seen_operador -> .)
    INT_CTE         reduce using rule 105 (seen_operador -> .)
    FLOAT_CTE       reduce using rule 105 (seen_operador -> .)
    AT              reduce using rule 105 (seen_operador -> .)

    seen_operador                  shift and go to state 158

state 137

    (70) expresionaux -> EQUALS . seen_operador
    (105) seen_operador -> .

    LEFTPARENTHESES reduce using rule 105 (seen_operador -> .)
    ID              reduce using rule 105 (seen_operador -> .)
    INT_CTE         reduce using rule 105 (seen_operador -> .)
    FLOAT_CTE       reduce using rule 105 (seen_operador -> .)
    AT              reduce using rule 105 (seen_operador -> .)

    seen_operador                  shift and go to state 159

state 138

    (79) exp -> termino seen_termino expaux .

    GREATERTHAN     reduce using rule 79 (exp -> termino seen_termino expaux .)
    LESSTHAN        reduce using rule 79 (exp -> termino seen_termino expaux .)
    LESSTHANOREQUALS reduce using rule 79 (exp -> termino seen_termino expaux .)
    NOTEQUALS       reduce using rule 79 (exp -> termino seen_termino expaux .)
    EQUALS          reduce using rule 79 (exp -> termino seen_termino expaux .)
    LEFTPARENTHESES reduce using rule 79 (exp -> termino seen_termino expaux .)
    ID              reduce using rule 79 (exp -> termino seen_termino expaux .)
    INT_CTE         reduce using rule 79 (exp -> termino seen_termino expaux .)
    FLOAT_CTE       reduce using rule 79 (exp -> termino seen_termino expaux .)
    AT              reduce using rule 79 (exp -> termino seen_termino expaux .)
    SEMICOLON       reduce using rule 79 (exp -> termino seen_termino expaux .)
    RIGHTPARENTHESES reduce using rule 79 (exp -> termino seen_termino expaux .)
    COMMA           reduce using rule 79 (exp -> termino seen_termino expaux .)
    RIGHTBRACKET    reduce using rule 79 (exp -> termino seen_termino expaux .)


state 139

    (80) expaux -> PLUS . seen_operador exp
    (105) seen_operador -> .

    LEFTPARENTHESES reduce using rule 105 (seen_operador -> .)
    ID              reduce using rule 105 (seen_operador -> .)
    INT_CTE         reduce using rule 105 (seen_operador -> .)
    FLOAT_CTE       reduce using rule 105 (seen_operador -> .)
    AT              reduce using rule 105 (seen_operador -> .)

    seen_operador                  shift and go to state 160

state 140

    (81) expaux -> MINUS . seen_operador exp
    (105) seen_operador -> .

    LEFTPARENTHESES reduce using rule 105 (seen_operador -> .)
    ID              reduce using rule 105 (seen_operador -> .)
    INT_CTE         reduce using rule 105 (seen_operador -> .)
    FLOAT_CTE       reduce using rule 105 (seen_operador -> .)
    AT              reduce using rule 105 (seen_operador -> .)

    seen_operador                  shift and go to state 161

state 141

    (83) termino -> factor seen_factor terminoaux .

    PLUS            reduce using rule 83 (termino -> factor seen_factor terminoaux .)
    MINUS           reduce using rule 83 (termino -> factor seen_factor terminoaux .)
    GREATERTHAN     reduce using rule 83 (termino -> factor seen_factor terminoaux .)
    LESSTHAN        reduce using rule 83 (termino -> factor seen_factor terminoaux .)
    LESSTHANOREQUALS reduce using rule 83 (termino -> factor seen_factor terminoaux .)
    NOTEQUALS       reduce using rule 83 (termino -> factor seen_factor terminoaux .)
    EQUALS          reduce using rule 83 (termino -> factor seen_factor terminoaux .)
    LEFTPARENTHESES reduce using rule 83 (termino -> factor seen_factor terminoaux .)
    ID              reduce using rule 83 (termino -> factor seen_factor terminoaux .)
    INT_CTE         reduce using rule 83 (termino -> factor seen_factor terminoaux .)
    FLOAT_CTE       reduce using rule 83 (termino -> factor seen_factor terminoaux .)
    AT              reduce using rule 83 (termino -> factor seen_factor terminoaux .)
    SEMICOLON       reduce using rule 83 (termino -> factor seen_factor terminoaux .)
    RIGHTPARENTHESES reduce using rule 83 (termino -> factor seen_factor terminoaux .)
    COMMA           reduce using rule 83 (termino -> factor seen_factor terminoaux .)
    RIGHTBRACKET    reduce using rule 83 (termino -> factor seen_factor terminoaux .)


state 142

    (84) terminoaux -> DIVIDE . seen_operador termino
    (105) seen_operador -> .

    LEFTPARENTHESES reduce using rule 105 (seen_operador -> .)
    ID              reduce using rule 105 (seen_operador -> .)
    INT_CTE         reduce using rule 105 (seen_operador -> .)
    FLOAT_CTE       reduce using rule 105 (seen_operador -> .)
    AT              reduce using rule 105 (seen_operador -> .)

    seen_operador                  shift and go to state 162

state 143

    (85) terminoaux -> MULTIPLY . seen_operador termino
    (105) seen_operador -> .

    LEFTPARENTHESES reduce using rule 105 (seen_operador -> .)
    ID              reduce using rule 105 (seen_operador -> .)
    INT_CTE         reduce using rule 105 (seen_operador -> .)
    FLOAT_CTE       reduce using rule 105 (seen_operador -> .)
    AT              reduce using rule 105 (seen_operador -> .)

    seen_operador                  shift and go to state 163

state 144

    (94) factoraux -> LEFTPARENTHESES seen_insert_fondo expresion . RIGHTPARENTHESES seen_remove_fondo

    RIGHTPARENTHESES shift and go to state 164


state 145

    (61) asignacion -> varcte ASIGNATION seen_equals expresion seen_final_asignacion . SEMICOLON

    SEMICOLON       shift and go to state 165


state 146

    (86) condicion -> IF LEFTPARENTHESES expresion RIGHTPARENTHESES seen_right_parentheses_condicion . bloque condicionaux
    (49) bloque -> . LEFTBRACE seen_start_bloqueaux vars bloqueaux returnaux RIGHTBRACE

    LEFTBRACE       shift and go to state 44

    bloque                         shift and go to state 166

state 147

    (72) escritura -> PRINT LEFTPARENTHESES escrituraaux RIGHTPARENTHESES SEMICOLON .

    IF              reduce using rule 72 (escritura -> PRINT LEFTPARENTHESES escrituraaux RIGHTPARENTHESES SEMICOLON .)
    PRINT           reduce using rule 72 (escritura -> PRINT LEFTPARENTHESES escrituraaux RIGHTPARENTHESES SEMICOLON .)
    WHILE           reduce using rule 72 (escritura -> PRINT LEFTPARENTHESES escrituraaux RIGHTPARENTHESES SEMICOLON .)
    AT              reduce using rule 72 (escritura -> PRINT LEFTPARENTHESES escrituraaux RIGHTPARENTHESES SEMICOLON .)
    ID              reduce using rule 72 (escritura -> PRINT LEFTPARENTHESES escrituraaux RIGHTPARENTHESES SEMICOLON .)
    INT_CTE         reduce using rule 72 (escritura -> PRINT LEFTPARENTHESES escrituraaux RIGHTPARENTHESES SEMICOLON .)
    FLOAT_CTE       reduce using rule 72 (escritura -> PRINT LEFTPARENTHESES escrituraaux RIGHTPARENTHESES SEMICOLON .)
    RETURN          reduce using rule 72 (escritura -> PRINT LEFTPARENTHESES escrituraaux RIGHTPARENTHESES SEMICOLON .)
    RIGHTBRACE      reduce using rule 72 (escritura -> PRINT LEFTPARENTHESES escrituraaux RIGHTPARENTHESES SEMICOLON .)


state 148

    (74) escrituraaux -> escrituraaux2 COMMA escrituraaux .

    RIGHTPARENTHESES reduce using rule 74 (escrituraaux -> escrituraaux2 COMMA escrituraaux .)


state 149

    (109) while -> WHILE seen_while LEFTPARENTHESES expresion RIGHTPARENTHESES . seen_right_parentheses_while bloque SEMICOLON seen_end_while
    (111) seen_right_parentheses_while -> .

    LEFTBRACE       reduce using rule 111 (seen_right_parentheses_while -> .)

    seen_right_parentheses_while   shift and go to state 167

state 150

    (113) functionCall -> AT ID seen_fCall_id LEFTPARENTHESES seen_leftp_fCall . paramsFunctionCall seen_end_paramsFCall RIGHTPARENTHESES seen_rightp_fCall
    (116) paramsFunctionCall -> . expresion seen_parameter_fCall COMMA seen_comma_params_fCall paramsFunctionCall
    (117) paramsFunctionCall -> . expresion seen_parameter_fCall seen_comma_params_fCall
    (64) expresion -> . exp seen_comparacion
    (65) expresion -> . exp seen_comparacion expresionaux exp seen_comparacion
    (78) exp -> . termino seen_termino
    (79) exp -> . termino seen_termino expaux
    (82) termino -> . factor seen_factor
    (83) termino -> . factor seen_factor terminoaux
    (92) factor -> . factoraux
    (93) factor -> . varcte
    (94) factoraux -> . LEFTPARENTHESES seen_insert_fondo expresion RIGHTPARENTHESES seen_remove_fondo
    (95) varcte -> . ID seen_ID
    (96) varcte -> . INT_CTE seen_CTE_INT
    (97) varcte -> . FLOAT_CTE seen_CTE_FLOAT
    (98) varcte -> . functionCall
    (99) varcte -> . arrayAccesing
    (113) functionCall -> . AT ID seen_fCall_id LEFTPARENTHESES seen_leftp_fCall paramsFunctionCall seen_end_paramsFCall RIGHTPARENTHESES seen_rightp_fCall
    (12) arrayAccesing -> . ID seen_ID LEFTBRACKET seen_initArrayAccesing arrayAccesingExpresionAux RIGHTBRACKET seen_endArrayAccesing

    LEFTPARENTHESES shift and go to state 104
    ID              shift and go to state 76
    INT_CTE         shift and go to state 77
    FLOAT_CTE       shift and go to state 78
    AT              shift and go to state 75

    paramsFunctionCall             shift and go to state 168
    expresion                      shift and go to state 169
    exp                            shift and go to state 99
    termino                        shift and go to state 100
    factor                         shift and go to state 101
    factoraux                      shift and go to state 102
    varcte                         shift and go to state 103
    functionCall                   shift and go to state 105
    arrayAccesing                  shift and go to state 79

state 151

    (12) arrayAccesing -> ID seen_ID LEFTBRACKET seen_initArrayAccesing arrayAccesingExpresionAux . RIGHTBRACKET seen_endArrayAccesing

    RIGHTBRACKET    shift and go to state 170


state 152

    (13) arrayAccesingExpresionAux -> expresion . seen_expresion_array
    (14) arrayAccesingExpresionAux -> expresion . seen_expresion_array COMMA seen_commaAccesingExpresion
    (16) seen_expresion_array -> .

    COMMA           reduce using rule 16 (seen_expresion_array -> .)
    RIGHTBRACKET    reduce using rule 16 (seen_expresion_array -> .)

    seen_expresion_array           shift and go to state 171

state 153

    (20) arrayDimesionAux -> INT_CTE seen_lim_inf INT_CTE seen_lim_sup COMMA seen_extra_dimension_array arrayDimesionAux .

    RIGHTBRACKET    reduce using rule 20 (arrayDimesionAux -> INT_CTE seen_lim_inf INT_CTE seen_lim_sup COMMA seen_extra_dimension_array arrayDimesionAux .)


state 154

    (65) expresion -> exp seen_comparacion expresionaux exp . seen_comparacion
    (108) seen_comparacion -> .

    SEMICOLON       reduce using rule 108 (seen_comparacion -> .)
    RIGHTPARENTHESES reduce using rule 108 (seen_comparacion -> .)
    COMMA           reduce using rule 108 (seen_comparacion -> .)
    RIGHTBRACKET    reduce using rule 108 (seen_comparacion -> .)

    seen_comparacion               shift and go to state 172

state 155

    (66) expresionaux -> GREATERTHAN seen_operador .

    LEFTPARENTHESES reduce using rule 66 (expresionaux -> GREATERTHAN seen_operador .)
    ID              reduce using rule 66 (expresionaux -> GREATERTHAN seen_operador .)
    INT_CTE         reduce using rule 66 (expresionaux -> GREATERTHAN seen_operador .)
    FLOAT_CTE       reduce using rule 66 (expresionaux -> GREATERTHAN seen_operador .)
    AT              reduce using rule 66 (expresionaux -> GREATERTHAN seen_operador .)


state 156

    (67) expresionaux -> LESSTHAN seen_operador .

    LEFTPARENTHESES reduce using rule 67 (expresionaux -> LESSTHAN seen_operador .)
    ID              reduce using rule 67 (expresionaux -> LESSTHAN seen_operador .)
    INT_CTE         reduce using rule 67 (expresionaux -> LESSTHAN seen_operador .)
    FLOAT_CTE       reduce using rule 67 (expresionaux -> LESSTHAN seen_operador .)
    AT              reduce using rule 67 (expresionaux -> LESSTHAN seen_operador .)


state 157

    (68) expresionaux -> LESSTHANOREQUALS seen_operador .

    LEFTPARENTHESES reduce using rule 68 (expresionaux -> LESSTHANOREQUALS seen_operador .)
    ID              reduce using rule 68 (expresionaux -> LESSTHANOREQUALS seen_operador .)
    INT_CTE         reduce using rule 68 (expresionaux -> LESSTHANOREQUALS seen_operador .)
    FLOAT_CTE       reduce using rule 68 (expresionaux -> LESSTHANOREQUALS seen_operador .)
    AT              reduce using rule 68 (expresionaux -> LESSTHANOREQUALS seen_operador .)


state 158

    (69) expresionaux -> NOTEQUALS seen_operador .

    LEFTPARENTHESES reduce using rule 69 (expresionaux -> NOTEQUALS seen_operador .)
    ID              reduce using rule 69 (expresionaux -> NOTEQUALS seen_operador .)
    INT_CTE         reduce using rule 69 (expresionaux -> NOTEQUALS seen_operador .)
    FLOAT_CTE       reduce using rule 69 (expresionaux -> NOTEQUALS seen_operador .)
    AT              reduce using rule 69 (expresionaux -> NOTEQUALS seen_operador .)


state 159

    (70) expresionaux -> EQUALS seen_operador .

    LEFTPARENTHESES reduce using rule 70 (expresionaux -> EQUALS seen_operador .)
    ID              reduce using rule 70 (expresionaux -> EQUALS seen_operador .)
    INT_CTE         reduce using rule 70 (expresionaux -> EQUALS seen_operador .)
    FLOAT_CTE       reduce using rule 70 (expresionaux -> EQUALS seen_operador .)
    AT              reduce using rule 70 (expresionaux -> EQUALS seen_operador .)


state 160

    (80) expaux -> PLUS seen_operador . exp
    (78) exp -> . termino seen_termino
    (79) exp -> . termino seen_termino expaux
    (82) termino -> . factor seen_factor
    (83) termino -> . factor seen_factor terminoaux
    (92) factor -> . factoraux
    (93) factor -> . varcte
    (94) factoraux -> . LEFTPARENTHESES seen_insert_fondo expresion RIGHTPARENTHESES seen_remove_fondo
    (95) varcte -> . ID seen_ID
    (96) varcte -> . INT_CTE seen_CTE_INT
    (97) varcte -> . FLOAT_CTE seen_CTE_FLOAT
    (98) varcte -> . functionCall
    (99) varcte -> . arrayAccesing
    (113) functionCall -> . AT ID seen_fCall_id LEFTPARENTHESES seen_leftp_fCall paramsFunctionCall seen_end_paramsFCall RIGHTPARENTHESES seen_rightp_fCall
    (12) arrayAccesing -> . ID seen_ID LEFTBRACKET seen_initArrayAccesing arrayAccesingExpresionAux RIGHTBRACKET seen_endArrayAccesing

    LEFTPARENTHESES shift and go to state 104
    ID              shift and go to state 76
    INT_CTE         shift and go to state 77
    FLOAT_CTE       shift and go to state 78
    AT              shift and go to state 75

    exp                            shift and go to state 173
    termino                        shift and go to state 100
    factor                         shift and go to state 101
    factoraux                      shift and go to state 102
    varcte                         shift and go to state 103
    functionCall                   shift and go to state 105
    arrayAccesing                  shift and go to state 79

state 161

    (81) expaux -> MINUS seen_operador . exp
    (78) exp -> . termino seen_termino
    (79) exp -> . termino seen_termino expaux
    (82) termino -> . factor seen_factor
    (83) termino -> . factor seen_factor terminoaux
    (92) factor -> . factoraux
    (93) factor -> . varcte
    (94) factoraux -> . LEFTPARENTHESES seen_insert_fondo expresion RIGHTPARENTHESES seen_remove_fondo
    (95) varcte -> . ID seen_ID
    (96) varcte -> . INT_CTE seen_CTE_INT
    (97) varcte -> . FLOAT_CTE seen_CTE_FLOAT
    (98) varcte -> . functionCall
    (99) varcte -> . arrayAccesing
    (113) functionCall -> . AT ID seen_fCall_id LEFTPARENTHESES seen_leftp_fCall paramsFunctionCall seen_end_paramsFCall RIGHTPARENTHESES seen_rightp_fCall
    (12) arrayAccesing -> . ID seen_ID LEFTBRACKET seen_initArrayAccesing arrayAccesingExpresionAux RIGHTBRACKET seen_endArrayAccesing

    LEFTPARENTHESES shift and go to state 104
    ID              shift and go to state 76
    INT_CTE         shift and go to state 77
    FLOAT_CTE       shift and go to state 78
    AT              shift and go to state 75

    exp                            shift and go to state 174
    termino                        shift and go to state 100
    factor                         shift and go to state 101
    factoraux                      shift and go to state 102
    varcte                         shift and go to state 103
    functionCall                   shift and go to state 105
    arrayAccesing                  shift and go to state 79

state 162

    (84) terminoaux -> DIVIDE seen_operador . termino
    (82) termino -> . factor seen_factor
    (83) termino -> . factor seen_factor terminoaux
    (92) factor -> . factoraux
    (93) factor -> . varcte
    (94) factoraux -> . LEFTPARENTHESES seen_insert_fondo expresion RIGHTPARENTHESES seen_remove_fondo
    (95) varcte -> . ID seen_ID
    (96) varcte -> . INT_CTE seen_CTE_INT
    (97) varcte -> . FLOAT_CTE seen_CTE_FLOAT
    (98) varcte -> . functionCall
    (99) varcte -> . arrayAccesing
    (113) functionCall -> . AT ID seen_fCall_id LEFTPARENTHESES seen_leftp_fCall paramsFunctionCall seen_end_paramsFCall RIGHTPARENTHESES seen_rightp_fCall
    (12) arrayAccesing -> . ID seen_ID LEFTBRACKET seen_initArrayAccesing arrayAccesingExpresionAux RIGHTBRACKET seen_endArrayAccesing

    LEFTPARENTHESES shift and go to state 104
    ID              shift and go to state 76
    INT_CTE         shift and go to state 77
    FLOAT_CTE       shift and go to state 78
    AT              shift and go to state 75

    termino                        shift and go to state 175
    factor                         shift and go to state 101
    factoraux                      shift and go to state 102
    varcte                         shift and go to state 103
    functionCall                   shift and go to state 105
    arrayAccesing                  shift and go to state 79

state 163

    (85) terminoaux -> MULTIPLY seen_operador . termino
    (82) termino -> . factor seen_factor
    (83) termino -> . factor seen_factor terminoaux
    (92) factor -> . factoraux
    (93) factor -> . varcte
    (94) factoraux -> . LEFTPARENTHESES seen_insert_fondo expresion RIGHTPARENTHESES seen_remove_fondo
    (95) varcte -> . ID seen_ID
    (96) varcte -> . INT_CTE seen_CTE_INT
    (97) varcte -> . FLOAT_CTE seen_CTE_FLOAT
    (98) varcte -> . functionCall
    (99) varcte -> . arrayAccesing
    (113) functionCall -> . AT ID seen_fCall_id LEFTPARENTHESES seen_leftp_fCall paramsFunctionCall seen_end_paramsFCall RIGHTPARENTHESES seen_rightp_fCall
    (12) arrayAccesing -> . ID seen_ID LEFTBRACKET seen_initArrayAccesing arrayAccesingExpresionAux RIGHTBRACKET seen_endArrayAccesing

    LEFTPARENTHESES shift and go to state 104
    ID              shift and go to state 76
    INT_CTE         shift and go to state 77
    FLOAT_CTE       shift and go to state 78
    AT              shift and go to state 75

    termino                        shift and go to state 176
    factor                         shift and go to state 101
    factoraux                      shift and go to state 102
    varcte                         shift and go to state 103
    functionCall                   shift and go to state 105
    arrayAccesing                  shift and go to state 79

state 164

    (94) factoraux -> LEFTPARENTHESES seen_insert_fondo expresion RIGHTPARENTHESES . seen_remove_fondo
    (103) seen_remove_fondo -> .

    DIVIDE          reduce using rule 103 (seen_remove_fondo -> .)
    MULTIPLY        reduce using rule 103 (seen_remove_fondo -> .)
    PLUS            reduce using rule 103 (seen_remove_fondo -> .)
    MINUS           reduce using rule 103 (seen_remove_fondo -> .)
    GREATERTHAN     reduce using rule 103 (seen_remove_fondo -> .)
    LESSTHAN        reduce using rule 103 (seen_remove_fondo -> .)
    LESSTHANOREQUALS reduce using rule 103 (seen_remove_fondo -> .)
    NOTEQUALS       reduce using rule 103 (seen_remove_fondo -> .)
    EQUALS          reduce using rule 103 (seen_remove_fondo -> .)
    LEFTPARENTHESES reduce using rule 103 (seen_remove_fondo -> .)
    ID              reduce using rule 103 (seen_remove_fondo -> .)
    INT_CTE         reduce using rule 103 (seen_remove_fondo -> .)
    FLOAT_CTE       reduce using rule 103 (seen_remove_fondo -> .)
    AT              reduce using rule 103 (seen_remove_fondo -> .)
    SEMICOLON       reduce using rule 103 (seen_remove_fondo -> .)
    RIGHTPARENTHESES reduce using rule 103 (seen_remove_fondo -> .)
    COMMA           reduce using rule 103 (seen_remove_fondo -> .)
    RIGHTBRACKET    reduce using rule 103 (seen_remove_fondo -> .)

    seen_remove_fondo              shift and go to state 177

state 165

    (61) asignacion -> varcte ASIGNATION seen_equals expresion seen_final_asignacion SEMICOLON .

    IF              reduce using rule 61 (asignacion -> varcte ASIGNATION seen_equals expresion seen_final_asignacion SEMICOLON .)
    PRINT           reduce using rule 61 (asignacion -> varcte ASIGNATION seen_equals expresion seen_final_asignacion SEMICOLON .)
    WHILE           reduce using rule 61 (asignacion -> varcte ASIGNATION seen_equals expresion seen_final_asignacion SEMICOLON .)
    AT              reduce using rule 61 (asignacion -> varcte ASIGNATION seen_equals expresion seen_final_asignacion SEMICOLON .)
    ID              reduce using rule 61 (asignacion -> varcte ASIGNATION seen_equals expresion seen_final_asignacion SEMICOLON .)
    INT_CTE         reduce using rule 61 (asignacion -> varcte ASIGNATION seen_equals expresion seen_final_asignacion SEMICOLON .)
    FLOAT_CTE       reduce using rule 61 (asignacion -> varcte ASIGNATION seen_equals expresion seen_final_asignacion SEMICOLON .)
    RETURN          reduce using rule 61 (asignacion -> varcte ASIGNATION seen_equals expresion seen_final_asignacion SEMICOLON .)
    RIGHTBRACE      reduce using rule 61 (asignacion -> varcte ASIGNATION seen_equals expresion seen_final_asignacion SEMICOLON .)


state 166

    (86) condicion -> IF LEFTPARENTHESES expresion RIGHTPARENTHESES seen_right_parentheses_condicion bloque . condicionaux
    (87) condicionaux -> . ELSE seen_else bloque SEMICOLON seen_end_condicion
    (88) condicionaux -> . SEMICOLON seen_end_condicion

    ELSE            shift and go to state 179
    SEMICOLON       shift and go to state 180

    condicionaux                   shift and go to state 178

state 167

    (109) while -> WHILE seen_while LEFTPARENTHESES expresion RIGHTPARENTHESES seen_right_parentheses_while . bloque SEMICOLON seen_end_while
    (49) bloque -> . LEFTBRACE seen_start_bloqueaux vars bloqueaux returnaux RIGHTBRACE

    LEFTBRACE       shift and go to state 44

    bloque                         shift and go to state 181

state 168

    (113) functionCall -> AT ID seen_fCall_id LEFTPARENTHESES seen_leftp_fCall paramsFunctionCall . seen_end_paramsFCall RIGHTPARENTHESES seen_rightp_fCall
    (120) seen_end_paramsFCall -> .

    RIGHTPARENTHESES reduce using rule 120 (seen_end_paramsFCall -> .)

    seen_end_paramsFCall           shift and go to state 182

state 169

    (116) paramsFunctionCall -> expresion . seen_parameter_fCall COMMA seen_comma_params_fCall paramsFunctionCall
    (117) paramsFunctionCall -> expresion . seen_parameter_fCall seen_comma_params_fCall
    (118) seen_parameter_fCall -> .

    COMMA           reduce using rule 118 (seen_parameter_fCall -> .)
    RIGHTPARENTHESES reduce using rule 118 (seen_parameter_fCall -> .)

    seen_parameter_fCall           shift and go to state 183

state 170

    (12) arrayAccesing -> ID seen_ID LEFTBRACKET seen_initArrayAccesing arrayAccesingExpresionAux RIGHTBRACKET . seen_endArrayAccesing
    (18) seen_endArrayAccesing -> .

    ASIGNATION      reduce using rule 18 (seen_endArrayAccesing -> .)
    DIVIDE          reduce using rule 18 (seen_endArrayAccesing -> .)
    MULTIPLY        reduce using rule 18 (seen_endArrayAccesing -> .)
    PLUS            reduce using rule 18 (seen_endArrayAccesing -> .)
    MINUS           reduce using rule 18 (seen_endArrayAccesing -> .)
    GREATERTHAN     reduce using rule 18 (seen_endArrayAccesing -> .)
    LESSTHAN        reduce using rule 18 (seen_endArrayAccesing -> .)
    LESSTHANOREQUALS reduce using rule 18 (seen_endArrayAccesing -> .)
    NOTEQUALS       reduce using rule 18 (seen_endArrayAccesing -> .)
    EQUALS          reduce using rule 18 (seen_endArrayAccesing -> .)
    LEFTPARENTHESES reduce using rule 18 (seen_endArrayAccesing -> .)
    ID              reduce using rule 18 (seen_endArrayAccesing -> .)
    INT_CTE         reduce using rule 18 (seen_endArrayAccesing -> .)
    FLOAT_CTE       reduce using rule 18 (seen_endArrayAccesing -> .)
    AT              reduce using rule 18 (seen_endArrayAccesing -> .)
    SEMICOLON       reduce using rule 18 (seen_endArrayAccesing -> .)
    RIGHTPARENTHESES reduce using rule 18 (seen_endArrayAccesing -> .)
    COMMA           reduce using rule 18 (seen_endArrayAccesing -> .)
    RIGHTBRACKET    reduce using rule 18 (seen_endArrayAccesing -> .)

    seen_endArrayAccesing          shift and go to state 184

state 171

    (13) arrayAccesingExpresionAux -> expresion seen_expresion_array .
    (14) arrayAccesingExpresionAux -> expresion seen_expresion_array . COMMA seen_commaAccesingExpresion

    RIGHTBRACKET    reduce using rule 13 (arrayAccesingExpresionAux -> expresion seen_expresion_array .)
    COMMA           shift and go to state 185


state 172

    (65) expresion -> exp seen_comparacion expresionaux exp seen_comparacion .

    SEMICOLON       reduce using rule 65 (expresion -> exp seen_comparacion expresionaux exp seen_comparacion .)
    RIGHTPARENTHESES reduce using rule 65 (expresion -> exp seen_comparacion expresionaux exp seen_comparacion .)
    COMMA           reduce using rule 65 (expresion -> exp seen_comparacion expresionaux exp seen_comparacion .)
    RIGHTBRACKET    reduce using rule 65 (expresion -> exp seen_comparacion expresionaux exp seen_comparacion .)


state 173

    (80) expaux -> PLUS seen_operador exp .

    GREATERTHAN     reduce using rule 80 (expaux -> PLUS seen_operador exp .)
    LESSTHAN        reduce using rule 80 (expaux -> PLUS seen_operador exp .)
    LESSTHANOREQUALS reduce using rule 80 (expaux -> PLUS seen_operador exp .)
    NOTEQUALS       reduce using rule 80 (expaux -> PLUS seen_operador exp .)
    EQUALS          reduce using rule 80 (expaux -> PLUS seen_operador exp .)
    LEFTPARENTHESES reduce using rule 80 (expaux -> PLUS seen_operador exp .)
    ID              reduce using rule 80 (expaux -> PLUS seen_operador exp .)
    INT_CTE         reduce using rule 80 (expaux -> PLUS seen_operador exp .)
    FLOAT_CTE       reduce using rule 80 (expaux -> PLUS seen_operador exp .)
    AT              reduce using rule 80 (expaux -> PLUS seen_operador exp .)
    SEMICOLON       reduce using rule 80 (expaux -> PLUS seen_operador exp .)
    RIGHTPARENTHESES reduce using rule 80 (expaux -> PLUS seen_operador exp .)
    COMMA           reduce using rule 80 (expaux -> PLUS seen_operador exp .)
    RIGHTBRACKET    reduce using rule 80 (expaux -> PLUS seen_operador exp .)


state 174

    (81) expaux -> MINUS seen_operador exp .

    GREATERTHAN     reduce using rule 81 (expaux -> MINUS seen_operador exp .)
    LESSTHAN        reduce using rule 81 (expaux -> MINUS seen_operador exp .)
    LESSTHANOREQUALS reduce using rule 81 (expaux -> MINUS seen_operador exp .)
    NOTEQUALS       reduce using rule 81 (expaux -> MINUS seen_operador exp .)
    EQUALS          reduce using rule 81 (expaux -> MINUS seen_operador exp .)
    LEFTPARENTHESES reduce using rule 81 (expaux -> MINUS seen_operador exp .)
    ID              reduce using rule 81 (expaux -> MINUS seen_operador exp .)
    INT_CTE         reduce using rule 81 (expaux -> MINUS seen_operador exp .)
    FLOAT_CTE       reduce using rule 81 (expaux -> MINUS seen_operador exp .)
    AT              reduce using rule 81 (expaux -> MINUS seen_operador exp .)
    SEMICOLON       reduce using rule 81 (expaux -> MINUS seen_operador exp .)
    RIGHTPARENTHESES reduce using rule 81 (expaux -> MINUS seen_operador exp .)
    COMMA           reduce using rule 81 (expaux -> MINUS seen_operador exp .)
    RIGHTBRACKET    reduce using rule 81 (expaux -> MINUS seen_operador exp .)


state 175

    (84) terminoaux -> DIVIDE seen_operador termino .

    PLUS            reduce using rule 84 (terminoaux -> DIVIDE seen_operador termino .)
    MINUS           reduce using rule 84 (terminoaux -> DIVIDE seen_operador termino .)
    GREATERTHAN     reduce using rule 84 (terminoaux -> DIVIDE seen_operador termino .)
    LESSTHAN        reduce using rule 84 (terminoaux -> DIVIDE seen_operador termino .)
    LESSTHANOREQUALS reduce using rule 84 (terminoaux -> DIVIDE seen_operador termino .)
    NOTEQUALS       reduce using rule 84 (terminoaux -> DIVIDE seen_operador termino .)
    EQUALS          reduce using rule 84 (terminoaux -> DIVIDE seen_operador termino .)
    LEFTPARENTHESES reduce using rule 84 (terminoaux -> DIVIDE seen_operador termino .)
    ID              reduce using rule 84 (terminoaux -> DIVIDE seen_operador termino .)
    INT_CTE         reduce using rule 84 (terminoaux -> DIVIDE seen_operador termino .)
    FLOAT_CTE       reduce using rule 84 (terminoaux -> DIVIDE seen_operador termino .)
    AT              reduce using rule 84 (terminoaux -> DIVIDE seen_operador termino .)
    SEMICOLON       reduce using rule 84 (terminoaux -> DIVIDE seen_operador termino .)
    RIGHTPARENTHESES reduce using rule 84 (terminoaux -> DIVIDE seen_operador termino .)
    COMMA           reduce using rule 84 (terminoaux -> DIVIDE seen_operador termino .)
    RIGHTBRACKET    reduce using rule 84 (terminoaux -> DIVIDE seen_operador termino .)


state 176

    (85) terminoaux -> MULTIPLY seen_operador termino .

    PLUS            reduce using rule 85 (terminoaux -> MULTIPLY seen_operador termino .)
    MINUS           reduce using rule 85 (terminoaux -> MULTIPLY seen_operador termino .)
    GREATERTHAN     reduce using rule 85 (terminoaux -> MULTIPLY seen_operador termino .)
    LESSTHAN        reduce using rule 85 (terminoaux -> MULTIPLY seen_operador termino .)
    LESSTHANOREQUALS reduce using rule 85 (terminoaux -> MULTIPLY seen_operador termino .)
    NOTEQUALS       reduce using rule 85 (terminoaux -> MULTIPLY seen_operador termino .)
    EQUALS          reduce using rule 85 (terminoaux -> MULTIPLY seen_operador termino .)
    LEFTPARENTHESES reduce using rule 85 (terminoaux -> MULTIPLY seen_operador termino .)
    ID              reduce using rule 85 (terminoaux -> MULTIPLY seen_operador termino .)
    INT_CTE         reduce using rule 85 (terminoaux -> MULTIPLY seen_operador termino .)
    FLOAT_CTE       reduce using rule 85 (terminoaux -> MULTIPLY seen_operador termino .)
    AT              reduce using rule 85 (terminoaux -> MULTIPLY seen_operador termino .)
    SEMICOLON       reduce using rule 85 (terminoaux -> MULTIPLY seen_operador termino .)
    RIGHTPARENTHESES reduce using rule 85 (terminoaux -> MULTIPLY seen_operador termino .)
    COMMA           reduce using rule 85 (terminoaux -> MULTIPLY seen_operador termino .)
    RIGHTBRACKET    reduce using rule 85 (terminoaux -> MULTIPLY seen_operador termino .)


state 177

    (94) factoraux -> LEFTPARENTHESES seen_insert_fondo expresion RIGHTPARENTHESES seen_remove_fondo .

    DIVIDE          reduce using rule 94 (factoraux -> LEFTPARENTHESES seen_insert_fondo expresion RIGHTPARENTHESES seen_remove_fondo .)
    MULTIPLY        reduce using rule 94 (factoraux -> LEFTPARENTHESES seen_insert_fondo expresion RIGHTPARENTHESES seen_remove_fondo .)
    PLUS            reduce using rule 94 (factoraux -> LEFTPARENTHESES seen_insert_fondo expresion RIGHTPARENTHESES seen_remove_fondo .)
    MINUS           reduce using rule 94 (factoraux -> LEFTPARENTHESES seen_insert_fondo expresion RIGHTPARENTHESES seen_remove_fondo .)
    GREATERTHAN     reduce using rule 94 (factoraux -> LEFTPARENTHESES seen_insert_fondo expresion RIGHTPARENTHESES seen_remove_fondo .)
    LESSTHAN        reduce using rule 94 (factoraux -> LEFTPARENTHESES seen_insert_fondo expresion RIGHTPARENTHESES seen_remove_fondo .)
    LESSTHANOREQUALS reduce using rule 94 (factoraux -> LEFTPARENTHESES seen_insert_fondo expresion RIGHTPARENTHESES seen_remove_fondo .)
    NOTEQUALS       reduce using rule 94 (factoraux -> LEFTPARENTHESES seen_insert_fondo expresion RIGHTPARENTHESES seen_remove_fondo .)
    EQUALS          reduce using rule 94 (factoraux -> LEFTPARENTHESES seen_insert_fondo expresion RIGHTPARENTHESES seen_remove_fondo .)
    LEFTPARENTHESES reduce using rule 94 (factoraux -> LEFTPARENTHESES seen_insert_fondo expresion RIGHTPARENTHESES seen_remove_fondo .)
    ID              reduce using rule 94 (factoraux -> LEFTPARENTHESES seen_insert_fondo expresion RIGHTPARENTHESES seen_remove_fondo .)
    INT_CTE         reduce using rule 94 (factoraux -> LEFTPARENTHESES seen_insert_fondo expresion RIGHTPARENTHESES seen_remove_fondo .)
    FLOAT_CTE       reduce using rule 94 (factoraux -> LEFTPARENTHESES seen_insert_fondo expresion RIGHTPARENTHESES seen_remove_fondo .)
    AT              reduce using rule 94 (factoraux -> LEFTPARENTHESES seen_insert_fondo expresion RIGHTPARENTHESES seen_remove_fondo .)
    SEMICOLON       reduce using rule 94 (factoraux -> LEFTPARENTHESES seen_insert_fondo expresion RIGHTPARENTHESES seen_remove_fondo .)
    RIGHTPARENTHESES reduce using rule 94 (factoraux -> LEFTPARENTHESES seen_insert_fondo expresion RIGHTPARENTHESES seen_remove_fondo .)
    COMMA           reduce using rule 94 (factoraux -> LEFTPARENTHESES seen_insert_fondo expresion RIGHTPARENTHESES seen_remove_fondo .)
    RIGHTBRACKET    reduce using rule 94 (factoraux -> LEFTPARENTHESES seen_insert_fondo expresion RIGHTPARENTHESES seen_remove_fondo .)


state 178

    (86) condicion -> IF LEFTPARENTHESES expresion RIGHTPARENTHESES seen_right_parentheses_condicion bloque condicionaux .

    IF              reduce using rule 86 (condicion -> IF LEFTPARENTHESES expresion RIGHTPARENTHESES seen_right_parentheses_condicion bloque condicionaux .)
    PRINT           reduce using rule 86 (condicion -> IF LEFTPARENTHESES expresion RIGHTPARENTHESES seen_right_parentheses_condicion bloque condicionaux .)
    WHILE           reduce using rule 86 (condicion -> IF LEFTPARENTHESES expresion RIGHTPARENTHESES seen_right_parentheses_condicion bloque condicionaux .)
    AT              reduce using rule 86 (condicion -> IF LEFTPARENTHESES expresion RIGHTPARENTHESES seen_right_parentheses_condicion bloque condicionaux .)
    ID              reduce using rule 86 (condicion -> IF LEFTPARENTHESES expresion RIGHTPARENTHESES seen_right_parentheses_condicion bloque condicionaux .)
    INT_CTE         reduce using rule 86 (condicion -> IF LEFTPARENTHESES expresion RIGHTPARENTHESES seen_right_parentheses_condicion bloque condicionaux .)
    FLOAT_CTE       reduce using rule 86 (condicion -> IF LEFTPARENTHESES expresion RIGHTPARENTHESES seen_right_parentheses_condicion bloque condicionaux .)
    RETURN          reduce using rule 86 (condicion -> IF LEFTPARENTHESES expresion RIGHTPARENTHESES seen_right_parentheses_condicion bloque condicionaux .)
    RIGHTBRACE      reduce using rule 86 (condicion -> IF LEFTPARENTHESES expresion RIGHTPARENTHESES seen_right_parentheses_condicion bloque condicionaux .)


state 179

    (87) condicionaux -> ELSE . seen_else bloque SEMICOLON seen_end_condicion
    (90) seen_else -> .

    LEFTBRACE       reduce using rule 90 (seen_else -> .)

    seen_else                      shift and go to state 186

state 180

    (88) condicionaux -> SEMICOLON . seen_end_condicion
    (91) seen_end_condicion -> .

    IF              reduce using rule 91 (seen_end_condicion -> .)
    PRINT           reduce using rule 91 (seen_end_condicion -> .)
    WHILE           reduce using rule 91 (seen_end_condicion -> .)
    AT              reduce using rule 91 (seen_end_condicion -> .)
    ID              reduce using rule 91 (seen_end_condicion -> .)
    INT_CTE         reduce using rule 91 (seen_end_condicion -> .)
    FLOAT_CTE       reduce using rule 91 (seen_end_condicion -> .)
    RETURN          reduce using rule 91 (seen_end_condicion -> .)
    RIGHTBRACE      reduce using rule 91 (seen_end_condicion -> .)

    seen_end_condicion             shift and go to state 187

state 181

    (109) while -> WHILE seen_while LEFTPARENTHESES expresion RIGHTPARENTHESES seen_right_parentheses_while bloque . SEMICOLON seen_end_while

    SEMICOLON       shift and go to state 188


state 182

    (113) functionCall -> AT ID seen_fCall_id LEFTPARENTHESES seen_leftp_fCall paramsFunctionCall seen_end_paramsFCall . RIGHTPARENTHESES seen_rightp_fCall

    RIGHTPARENTHESES shift and go to state 189


state 183

    (116) paramsFunctionCall -> expresion seen_parameter_fCall . COMMA seen_comma_params_fCall paramsFunctionCall
    (117) paramsFunctionCall -> expresion seen_parameter_fCall . seen_comma_params_fCall
    (119) seen_comma_params_fCall -> .

    COMMA           shift and go to state 190
    RIGHTPARENTHESES reduce using rule 119 (seen_comma_params_fCall -> .)

    seen_comma_params_fCall        shift and go to state 191

state 184

    (12) arrayAccesing -> ID seen_ID LEFTBRACKET seen_initArrayAccesing arrayAccesingExpresionAux RIGHTBRACKET seen_endArrayAccesing .

    ASIGNATION      reduce using rule 12 (arrayAccesing -> ID seen_ID LEFTBRACKET seen_initArrayAccesing arrayAccesingExpresionAux RIGHTBRACKET seen_endArrayAccesing .)
    DIVIDE          reduce using rule 12 (arrayAccesing -> ID seen_ID LEFTBRACKET seen_initArrayAccesing arrayAccesingExpresionAux RIGHTBRACKET seen_endArrayAccesing .)
    MULTIPLY        reduce using rule 12 (arrayAccesing -> ID seen_ID LEFTBRACKET seen_initArrayAccesing arrayAccesingExpresionAux RIGHTBRACKET seen_endArrayAccesing .)
    PLUS            reduce using rule 12 (arrayAccesing -> ID seen_ID LEFTBRACKET seen_initArrayAccesing arrayAccesingExpresionAux RIGHTBRACKET seen_endArrayAccesing .)
    MINUS           reduce using rule 12 (arrayAccesing -> ID seen_ID LEFTBRACKET seen_initArrayAccesing arrayAccesingExpresionAux RIGHTBRACKET seen_endArrayAccesing .)
    GREATERTHAN     reduce using rule 12 (arrayAccesing -> ID seen_ID LEFTBRACKET seen_initArrayAccesing arrayAccesingExpresionAux RIGHTBRACKET seen_endArrayAccesing .)
    LESSTHAN        reduce using rule 12 (arrayAccesing -> ID seen_ID LEFTBRACKET seen_initArrayAccesing arrayAccesingExpresionAux RIGHTBRACKET seen_endArrayAccesing .)
    LESSTHANOREQUALS reduce using rule 12 (arrayAccesing -> ID seen_ID LEFTBRACKET seen_initArrayAccesing arrayAccesingExpresionAux RIGHTBRACKET seen_endArrayAccesing .)
    NOTEQUALS       reduce using rule 12 (arrayAccesing -> ID seen_ID LEFTBRACKET seen_initArrayAccesing arrayAccesingExpresionAux RIGHTBRACKET seen_endArrayAccesing .)
    EQUALS          reduce using rule 12 (arrayAccesing -> ID seen_ID LEFTBRACKET seen_initArrayAccesing arrayAccesingExpresionAux RIGHTBRACKET seen_endArrayAccesing .)
    LEFTPARENTHESES reduce using rule 12 (arrayAccesing -> ID seen_ID LEFTBRACKET seen_initArrayAccesing arrayAccesingExpresionAux RIGHTBRACKET seen_endArrayAccesing .)
    ID              reduce using rule 12 (arrayAccesing -> ID seen_ID LEFTBRACKET seen_initArrayAccesing arrayAccesingExpresionAux RIGHTBRACKET seen_endArrayAccesing .)
    INT_CTE         reduce using rule 12 (arrayAccesing -> ID seen_ID LEFTBRACKET seen_initArrayAccesing arrayAccesingExpresionAux RIGHTBRACKET seen_endArrayAccesing .)
    FLOAT_CTE       reduce using rule 12 (arrayAccesing -> ID seen_ID LEFTBRACKET seen_initArrayAccesing arrayAccesingExpresionAux RIGHTBRACKET seen_endArrayAccesing .)
    AT              reduce using rule 12 (arrayAccesing -> ID seen_ID LEFTBRACKET seen_initArrayAccesing arrayAccesingExpresionAux RIGHTBRACKET seen_endArrayAccesing .)
    SEMICOLON       reduce using rule 12 (arrayAccesing -> ID seen_ID LEFTBRACKET seen_initArrayAccesing arrayAccesingExpresionAux RIGHTBRACKET seen_endArrayAccesing .)
    RIGHTPARENTHESES reduce using rule 12 (arrayAccesing -> ID seen_ID LEFTBRACKET seen_initArrayAccesing arrayAccesingExpresionAux RIGHTBRACKET seen_endArrayAccesing .)
    COMMA           reduce using rule 12 (arrayAccesing -> ID seen_ID LEFTBRACKET seen_initArrayAccesing arrayAccesingExpresionAux RIGHTBRACKET seen_endArrayAccesing .)
    RIGHTBRACKET    reduce using rule 12 (arrayAccesing -> ID seen_ID LEFTBRACKET seen_initArrayAccesing arrayAccesingExpresionAux RIGHTBRACKET seen_endArrayAccesing .)


state 185

    (14) arrayAccesingExpresionAux -> expresion seen_expresion_array COMMA . seen_commaAccesingExpresion
    (17) seen_commaAccesingExpresion -> .

    RIGHTBRACKET    reduce using rule 17 (seen_commaAccesingExpresion -> .)

    seen_commaAccesingExpresion    shift and go to state 192

state 186

    (87) condicionaux -> ELSE seen_else . bloque SEMICOLON seen_end_condicion
    (49) bloque -> . LEFTBRACE seen_start_bloqueaux vars bloqueaux returnaux RIGHTBRACE

    LEFTBRACE       shift and go to state 44

    bloque                         shift and go to state 193

state 187

    (88) condicionaux -> SEMICOLON seen_end_condicion .

    IF              reduce using rule 88 (condicionaux -> SEMICOLON seen_end_condicion .)
    PRINT           reduce using rule 88 (condicionaux -> SEMICOLON seen_end_condicion .)
    WHILE           reduce using rule 88 (condicionaux -> SEMICOLON seen_end_condicion .)
    AT              reduce using rule 88 (condicionaux -> SEMICOLON seen_end_condicion .)
    ID              reduce using rule 88 (condicionaux -> SEMICOLON seen_end_condicion .)
    INT_CTE         reduce using rule 88 (condicionaux -> SEMICOLON seen_end_condicion .)
    FLOAT_CTE       reduce using rule 88 (condicionaux -> SEMICOLON seen_end_condicion .)
    RETURN          reduce using rule 88 (condicionaux -> SEMICOLON seen_end_condicion .)
    RIGHTBRACE      reduce using rule 88 (condicionaux -> SEMICOLON seen_end_condicion .)


state 188

    (109) while -> WHILE seen_while LEFTPARENTHESES expresion RIGHTPARENTHESES seen_right_parentheses_while bloque SEMICOLON . seen_end_while
    (112) seen_end_while -> .

    IF              reduce using rule 112 (seen_end_while -> .)
    PRINT           reduce using rule 112 (seen_end_while -> .)
    WHILE           reduce using rule 112 (seen_end_while -> .)
    AT              reduce using rule 112 (seen_end_while -> .)
    ID              reduce using rule 112 (seen_end_while -> .)
    INT_CTE         reduce using rule 112 (seen_end_while -> .)
    FLOAT_CTE       reduce using rule 112 (seen_end_while -> .)
    RETURN          reduce using rule 112 (seen_end_while -> .)
    RIGHTBRACE      reduce using rule 112 (seen_end_while -> .)

    seen_end_while                 shift and go to state 194

state 189

    (113) functionCall -> AT ID seen_fCall_id LEFTPARENTHESES seen_leftp_fCall paramsFunctionCall seen_end_paramsFCall RIGHTPARENTHESES . seen_rightp_fCall
    (121) seen_rightp_fCall -> .

    SEMICOLON       reduce using rule 121 (seen_rightp_fCall -> .)
    ASIGNATION      reduce using rule 121 (seen_rightp_fCall -> .)
    DIVIDE          reduce using rule 121 (seen_rightp_fCall -> .)
    MULTIPLY        reduce using rule 121 (seen_rightp_fCall -> .)
    PLUS            reduce using rule 121 (seen_rightp_fCall -> .)
    MINUS           reduce using rule 121 (seen_rightp_fCall -> .)
    GREATERTHAN     reduce using rule 121 (seen_rightp_fCall -> .)
    LESSTHAN        reduce using rule 121 (seen_rightp_fCall -> .)
    LESSTHANOREQUALS reduce using rule 121 (seen_rightp_fCall -> .)
    NOTEQUALS       reduce using rule 121 (seen_rightp_fCall -> .)
    EQUALS          reduce using rule 121 (seen_rightp_fCall -> .)
    LEFTPARENTHESES reduce using rule 121 (seen_rightp_fCall -> .)
    ID              reduce using rule 121 (seen_rightp_fCall -> .)
    INT_CTE         reduce using rule 121 (seen_rightp_fCall -> .)
    FLOAT_CTE       reduce using rule 121 (seen_rightp_fCall -> .)
    AT              reduce using rule 121 (seen_rightp_fCall -> .)
    RIGHTPARENTHESES reduce using rule 121 (seen_rightp_fCall -> .)
    COMMA           reduce using rule 121 (seen_rightp_fCall -> .)
    RIGHTBRACKET    reduce using rule 121 (seen_rightp_fCall -> .)

    seen_rightp_fCall              shift and go to state 195

state 190

    (116) paramsFunctionCall -> expresion seen_parameter_fCall COMMA . seen_comma_params_fCall paramsFunctionCall
    (119) seen_comma_params_fCall -> .

    LEFTPARENTHESES reduce using rule 119 (seen_comma_params_fCall -> .)
    ID              reduce using rule 119 (seen_comma_params_fCall -> .)
    INT_CTE         reduce using rule 119 (seen_comma_params_fCall -> .)
    FLOAT_CTE       reduce using rule 119 (seen_comma_params_fCall -> .)
    AT              reduce using rule 119 (seen_comma_params_fCall -> .)

    seen_comma_params_fCall        shift and go to state 196

state 191

    (117) paramsFunctionCall -> expresion seen_parameter_fCall seen_comma_params_fCall .

    RIGHTPARENTHESES reduce using rule 117 (paramsFunctionCall -> expresion seen_parameter_fCall seen_comma_params_fCall .)


state 192

    (14) arrayAccesingExpresionAux -> expresion seen_expresion_array COMMA seen_commaAccesingExpresion .

    RIGHTBRACKET    reduce using rule 14 (arrayAccesingExpresionAux -> expresion seen_expresion_array COMMA seen_commaAccesingExpresion .)


state 193

    (87) condicionaux -> ELSE seen_else bloque . SEMICOLON seen_end_condicion

    SEMICOLON       shift and go to state 197


state 194

    (109) while -> WHILE seen_while LEFTPARENTHESES expresion RIGHTPARENTHESES seen_right_parentheses_while bloque SEMICOLON seen_end_while .

    IF              reduce using rule 109 (while -> WHILE seen_while LEFTPARENTHESES expresion RIGHTPARENTHESES seen_right_parentheses_while bloque SEMICOLON seen_end_while .)
    PRINT           reduce using rule 109 (while -> WHILE seen_while LEFTPARENTHESES expresion RIGHTPARENTHESES seen_right_parentheses_while bloque SEMICOLON seen_end_while .)
    WHILE           reduce using rule 109 (while -> WHILE seen_while LEFTPARENTHESES expresion RIGHTPARENTHESES seen_right_parentheses_while bloque SEMICOLON seen_end_while .)
    AT              reduce using rule 109 (while -> WHILE seen_while LEFTPARENTHESES expresion RIGHTPARENTHESES seen_right_parentheses_while bloque SEMICOLON seen_end_while .)
    ID              reduce using rule 109 (while -> WHILE seen_while LEFTPARENTHESES expresion RIGHTPARENTHESES seen_right_parentheses_while bloque SEMICOLON seen_end_while .)
    INT_CTE         reduce using rule 109 (while -> WHILE seen_while LEFTPARENTHESES expresion RIGHTPARENTHESES seen_right_parentheses_while bloque SEMICOLON seen_end_while .)
    FLOAT_CTE       reduce using rule 109 (while -> WHILE seen_while LEFTPARENTHESES expresion RIGHTPARENTHESES seen_right_parentheses_while bloque SEMICOLON seen_end_while .)
    RETURN          reduce using rule 109 (while -> WHILE seen_while LEFTPARENTHESES expresion RIGHTPARENTHESES seen_right_parentheses_while bloque SEMICOLON seen_end_while .)
    RIGHTBRACE      reduce using rule 109 (while -> WHILE seen_while LEFTPARENTHESES expresion RIGHTPARENTHESES seen_right_parentheses_while bloque SEMICOLON seen_end_while .)


state 195

    (113) functionCall -> AT ID seen_fCall_id LEFTPARENTHESES seen_leftp_fCall paramsFunctionCall seen_end_paramsFCall RIGHTPARENTHESES seen_rightp_fCall .

    SEMICOLON       reduce using rule 113 (functionCall -> AT ID seen_fCall_id LEFTPARENTHESES seen_leftp_fCall paramsFunctionCall seen_end_paramsFCall RIGHTPARENTHESES seen_rightp_fCall .)
    ASIGNATION      reduce using rule 113 (functionCall -> AT ID seen_fCall_id LEFTPARENTHESES seen_leftp_fCall paramsFunctionCall seen_end_paramsFCall RIGHTPARENTHESES seen_rightp_fCall .)
    DIVIDE          reduce using rule 113 (functionCall -> AT ID seen_fCall_id LEFTPARENTHESES seen_leftp_fCall paramsFunctionCall seen_end_paramsFCall RIGHTPARENTHESES seen_rightp_fCall .)
    MULTIPLY        reduce using rule 113 (functionCall -> AT ID seen_fCall_id LEFTPARENTHESES seen_leftp_fCall paramsFunctionCall seen_end_paramsFCall RIGHTPARENTHESES seen_rightp_fCall .)
    PLUS            reduce using rule 113 (functionCall -> AT ID seen_fCall_id LEFTPARENTHESES seen_leftp_fCall paramsFunctionCall seen_end_paramsFCall RIGHTPARENTHESES seen_rightp_fCall .)
    MINUS           reduce using rule 113 (functionCall -> AT ID seen_fCall_id LEFTPARENTHESES seen_leftp_fCall paramsFunctionCall seen_end_paramsFCall RIGHTPARENTHESES seen_rightp_fCall .)
    GREATERTHAN     reduce using rule 113 (functionCall -> AT ID seen_fCall_id LEFTPARENTHESES seen_leftp_fCall paramsFunctionCall seen_end_paramsFCall RIGHTPARENTHESES seen_rightp_fCall .)
    LESSTHAN        reduce using rule 113 (functionCall -> AT ID seen_fCall_id LEFTPARENTHESES seen_leftp_fCall paramsFunctionCall seen_end_paramsFCall RIGHTPARENTHESES seen_rightp_fCall .)
    LESSTHANOREQUALS reduce using rule 113 (functionCall -> AT ID seen_fCall_id LEFTPARENTHESES seen_leftp_fCall paramsFunctionCall seen_end_paramsFCall RIGHTPARENTHESES seen_rightp_fCall .)
    NOTEQUALS       reduce using rule 113 (functionCall -> AT ID seen_fCall_id LEFTPARENTHESES seen_leftp_fCall paramsFunctionCall seen_end_paramsFCall RIGHTPARENTHESES seen_rightp_fCall .)
    EQUALS          reduce using rule 113 (functionCall -> AT ID seen_fCall_id LEFTPARENTHESES seen_leftp_fCall paramsFunctionCall seen_end_paramsFCall RIGHTPARENTHESES seen_rightp_fCall .)
    LEFTPARENTHESES reduce using rule 113 (functionCall -> AT ID seen_fCall_id LEFTPARENTHESES seen_leftp_fCall paramsFunctionCall seen_end_paramsFCall RIGHTPARENTHESES seen_rightp_fCall .)
    ID              reduce using rule 113 (functionCall -> AT ID seen_fCall_id LEFTPARENTHESES seen_leftp_fCall paramsFunctionCall seen_end_paramsFCall RIGHTPARENTHESES seen_rightp_fCall .)
    INT_CTE         reduce using rule 113 (functionCall -> AT ID seen_fCall_id LEFTPARENTHESES seen_leftp_fCall paramsFunctionCall seen_end_paramsFCall RIGHTPARENTHESES seen_rightp_fCall .)
    FLOAT_CTE       reduce using rule 113 (functionCall -> AT ID seen_fCall_id LEFTPARENTHESES seen_leftp_fCall paramsFunctionCall seen_end_paramsFCall RIGHTPARENTHESES seen_rightp_fCall .)
    AT              reduce using rule 113 (functionCall -> AT ID seen_fCall_id LEFTPARENTHESES seen_leftp_fCall paramsFunctionCall seen_end_paramsFCall RIGHTPARENTHESES seen_rightp_fCall .)
    RIGHTPARENTHESES reduce using rule 113 (functionCall -> AT ID seen_fCall_id LEFTPARENTHESES seen_leftp_fCall paramsFunctionCall seen_end_paramsFCall RIGHTPARENTHESES seen_rightp_fCall .)
    COMMA           reduce using rule 113 (functionCall -> AT ID seen_fCall_id LEFTPARENTHESES seen_leftp_fCall paramsFunctionCall seen_end_paramsFCall RIGHTPARENTHESES seen_rightp_fCall .)
    RIGHTBRACKET    reduce using rule 113 (functionCall -> AT ID seen_fCall_id LEFTPARENTHESES seen_leftp_fCall paramsFunctionCall seen_end_paramsFCall RIGHTPARENTHESES seen_rightp_fCall .)


state 196

    (116) paramsFunctionCall -> expresion seen_parameter_fCall COMMA seen_comma_params_fCall . paramsFunctionCall
    (116) paramsFunctionCall -> . expresion seen_parameter_fCall COMMA seen_comma_params_fCall paramsFunctionCall
    (117) paramsFunctionCall -> . expresion seen_parameter_fCall seen_comma_params_fCall
    (64) expresion -> . exp seen_comparacion
    (65) expresion -> . exp seen_comparacion expresionaux exp seen_comparacion
    (78) exp -> . termino seen_termino
    (79) exp -> . termino seen_termino expaux
    (82) termino -> . factor seen_factor
    (83) termino -> . factor seen_factor terminoaux
    (92) factor -> . factoraux
    (93) factor -> . varcte
    (94) factoraux -> . LEFTPARENTHESES seen_insert_fondo expresion RIGHTPARENTHESES seen_remove_fondo
    (95) varcte -> . ID seen_ID
    (96) varcte -> . INT_CTE seen_CTE_INT
    (97) varcte -> . FLOAT_CTE seen_CTE_FLOAT
    (98) varcte -> . functionCall
    (99) varcte -> . arrayAccesing
    (113) functionCall -> . AT ID seen_fCall_id LEFTPARENTHESES seen_leftp_fCall paramsFunctionCall seen_end_paramsFCall RIGHTPARENTHESES seen_rightp_fCall
    (12) arrayAccesing -> . ID seen_ID LEFTBRACKET seen_initArrayAccesing arrayAccesingExpresionAux RIGHTBRACKET seen_endArrayAccesing

    LEFTPARENTHESES shift and go to state 104
    ID              shift and go to state 76
    INT_CTE         shift and go to state 77
    FLOAT_CTE       shift and go to state 78
    AT              shift and go to state 75

    expresion                      shift and go to state 169
    paramsFunctionCall             shift and go to state 198
    exp                            shift and go to state 99
    termino                        shift and go to state 100
    factor                         shift and go to state 101
    factoraux                      shift and go to state 102
    varcte                         shift and go to state 103
    functionCall                   shift and go to state 105
    arrayAccesing                  shift and go to state 79

state 197

    (87) condicionaux -> ELSE seen_else bloque SEMICOLON . seen_end_condicion
    (91) seen_end_condicion -> .

    IF              reduce using rule 91 (seen_end_condicion -> .)
    PRINT           reduce using rule 91 (seen_end_condicion -> .)
    WHILE           reduce using rule 91 (seen_end_condicion -> .)
    AT              reduce using rule 91 (seen_end_condicion -> .)
    ID              reduce using rule 91 (seen_end_condicion -> .)
    INT_CTE         reduce using rule 91 (seen_end_condicion -> .)
    FLOAT_CTE       reduce using rule 91 (seen_end_condicion -> .)
    RETURN          reduce using rule 91 (seen_end_condicion -> .)
    RIGHTBRACE      reduce using rule 91 (seen_end_condicion -> .)

    seen_end_condicion             shift and go to state 199

state 198

    (116) paramsFunctionCall -> expresion seen_parameter_fCall COMMA seen_comma_params_fCall paramsFunctionCall .

    RIGHTPARENTHESES reduce using rule 116 (paramsFunctionCall -> expresion seen_parameter_fCall COMMA seen_comma_params_fCall paramsFunctionCall .)


state 199

    (87) condicionaux -> ELSE seen_else bloque SEMICOLON seen_end_condicion .

    IF              reduce using rule 87 (condicionaux -> ELSE seen_else bloque SEMICOLON seen_end_condicion .)
    PRINT           reduce using rule 87 (condicionaux -> ELSE seen_else bloque SEMICOLON seen_end_condicion .)
    WHILE           reduce using rule 87 (condicionaux -> ELSE seen_else bloque SEMICOLON seen_end_condicion .)
    AT              reduce using rule 87 (condicionaux -> ELSE seen_else bloque SEMICOLON seen_end_condicion .)
    ID              reduce using rule 87 (condicionaux -> ELSE seen_else bloque SEMICOLON seen_end_condicion .)
    INT_CTE         reduce using rule 87 (condicionaux -> ELSE seen_else bloque SEMICOLON seen_end_condicion .)
    FLOAT_CTE       reduce using rule 87 (condicionaux -> ELSE seen_else bloque SEMICOLON seen_end_condicion .)
    RETURN          reduce using rule 87 (condicionaux -> ELSE seen_else bloque SEMICOLON seen_end_condicion .)
    RIGHTBRACE      reduce using rule 87 (condicionaux -> ELSE seen_else bloque SEMICOLON seen_end_condicion .)

